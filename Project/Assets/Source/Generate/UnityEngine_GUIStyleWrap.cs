//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_GUIStyleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.GUIStyle), typeof(System.Object));
		L.RegFunction("Draw", new LuaCSFunction(Draw));
		L.RegFunction("DrawCursor", new LuaCSFunction(DrawCursor));
		L.RegFunction("DrawWithTextSelection", new LuaCSFunction(DrawWithTextSelection));
		L.RegFunction("GetCursorPixelPosition", new LuaCSFunction(GetCursorPixelPosition));
		L.RegFunction("GetCursorStringIndex", new LuaCSFunction(GetCursorStringIndex));
		L.RegFunction("CalcSize", new LuaCSFunction(CalcSize));
		L.RegFunction("CalcScreenSize", new LuaCSFunction(CalcScreenSize));
		L.RegFunction("CalcHeight", new LuaCSFunction(CalcHeight));
		L.RegFunction("CalcMinMaxWidth", new LuaCSFunction(CalcMinMaxWidth));
		L.RegFunction("ToString", new LuaCSFunction(ToString));
		L.RegFunction("New", new LuaCSFunction(_CreateUnityEngine_GUIStyle));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("font", new LuaCSFunction(get_font), new LuaCSFunction(set_font));
		L.RegVar("imagePosition", new LuaCSFunction(get_imagePosition), new LuaCSFunction(set_imagePosition));
		L.RegVar("alignment", new LuaCSFunction(get_alignment), new LuaCSFunction(set_alignment));
		L.RegVar("wordWrap", new LuaCSFunction(get_wordWrap), new LuaCSFunction(set_wordWrap));
		L.RegVar("clipping", new LuaCSFunction(get_clipping), new LuaCSFunction(set_clipping));
		L.RegVar("contentOffset", new LuaCSFunction(get_contentOffset), new LuaCSFunction(set_contentOffset));
		L.RegVar("fixedWidth", new LuaCSFunction(get_fixedWidth), new LuaCSFunction(set_fixedWidth));
		L.RegVar("fixedHeight", new LuaCSFunction(get_fixedHeight), new LuaCSFunction(set_fixedHeight));
		L.RegVar("stretchWidth", new LuaCSFunction(get_stretchWidth), new LuaCSFunction(set_stretchWidth));
		L.RegVar("stretchHeight", new LuaCSFunction(get_stretchHeight), new LuaCSFunction(set_stretchHeight));
		L.RegVar("fontSize", new LuaCSFunction(get_fontSize), new LuaCSFunction(set_fontSize));
		L.RegVar("fontStyle", new LuaCSFunction(get_fontStyle), new LuaCSFunction(set_fontStyle));
		L.RegVar("richText", new LuaCSFunction(get_richText), new LuaCSFunction(set_richText));
		L.RegVar("name", new LuaCSFunction(get_name), new LuaCSFunction(set_name));
		L.RegVar("normal", new LuaCSFunction(get_normal), new LuaCSFunction(set_normal));
		L.RegVar("hover", new LuaCSFunction(get_hover), new LuaCSFunction(set_hover));
		L.RegVar("active", new LuaCSFunction(get_active), new LuaCSFunction(set_active));
		L.RegVar("onNormal", new LuaCSFunction(get_onNormal), new LuaCSFunction(set_onNormal));
		L.RegVar("onHover", new LuaCSFunction(get_onHover), new LuaCSFunction(set_onHover));
		L.RegVar("onActive", new LuaCSFunction(get_onActive), new LuaCSFunction(set_onActive));
		L.RegVar("focused", new LuaCSFunction(get_focused), new LuaCSFunction(set_focused));
		L.RegVar("onFocused", new LuaCSFunction(get_onFocused), new LuaCSFunction(set_onFocused));
		L.RegVar("border", new LuaCSFunction(get_border), new LuaCSFunction(set_border));
		L.RegVar("margin", new LuaCSFunction(get_margin), new LuaCSFunction(set_margin));
		L.RegVar("padding", new LuaCSFunction(get_padding), new LuaCSFunction(set_padding));
		L.RegVar("overflow", new LuaCSFunction(get_overflow), new LuaCSFunction(set_overflow));
		L.RegVar("lineHeight", new LuaCSFunction(get_lineHeight), null);
		L.RegVar("none", new LuaCSFunction(get_none), null);
		L.RegVar("isHeightDependantOnWidth", new LuaCSFunction(get_isHeightDependantOnWidth), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_GUIStyle(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.GUIStyle obj = new UnityEngine.GUIStyle();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				UnityEngine.GUIStyle arg0 = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.GUIStyle obj = new UnityEngine.GUIStyle(arg0);
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.GUIStyle.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Draw(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4)
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 3);
				int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
				obj.Draw(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 5)
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 3);
				int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
				obj.Draw(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<bool, bool, bool, bool>(L, 3))
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				bool arg4 = LuaDLL.lua_toboolean(L, 6);
				obj.Draw(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes<UnityEngine.GUIContent, int, bool, bool>(L, 3))
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.ToObject(L, 3);
				int arg2 = (int)LuaDLL.lua_tointeger(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				bool arg4 = LuaDLL.lua_toboolean(L, 6);
				obj.Draw(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<string, bool, bool, bool, bool>(L, 3))
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				bool arg4 = LuaDLL.lua_toboolean(L, 6);
				bool arg5 = LuaDLL.lua_toboolean(L, 7);
				obj.Draw(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.Texture, bool, bool, bool, bool>(L, 3))
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.ToObject(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				bool arg4 = LuaDLL.lua_toboolean(L, 6);
				bool arg5 = LuaDLL.lua_toboolean(L, 7);
				obj.Draw(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<UnityEngine.GUIContent, bool, bool, bool, bool>(L, 3))
			{
				UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
				UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
				UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.ToObject(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				bool arg3 = LuaDLL.lua_toboolean(L, 5);
				bool arg4 = LuaDLL.lua_toboolean(L, 6);
				bool arg5 = LuaDLL.lua_toboolean(L, 7);
				obj.Draw(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.GUIStyle.Draw");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawCursor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			int arg3 = (int)LuaDLL.luaL_checkinteger(L, 5);
			obj.DrawCursor(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawWithTextSelection(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			int arg3 = (int)LuaDLL.luaL_checkinteger(L, 5);
			int arg4 = (int)LuaDLL.luaL_checkinteger(L, 6);
			obj.DrawWithTextSelection(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCursorPixelPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			UnityEngine.Vector2 o = obj.GetCursorPixelPosition(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCursorStringIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			UnityEngine.GUIContent arg1 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 3);
			UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 4);
			int o = obj.GetCursorStringIndex(arg0, arg1, arg2);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalcSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 2);
			UnityEngine.Vector2 o = obj.CalcSize(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalcScreenSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector2 o = obj.CalcScreenSize(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalcHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float o = obj.CalcHeight(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalcMinMaxWidth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			UnityEngine.GUIContent arg0 = (UnityEngine.GUIContent)ToLua.CheckObject<UnityEngine.GUIContent>(L, 2);
			float arg1;
			float arg2;
			obj.CalcMinMaxWidth(arg0, out arg1, out arg2);
			LuaDLL.lua_pushnumber(L, arg1);
			LuaDLL.lua_pushnumber(L, arg2);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)ToLua.CheckObject<UnityEngine.GUIStyle>(L, 1);
			string o = obj.ToString();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_font(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.Font ret = obj.font;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index font on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_imagePosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.ImagePosition ret = obj.imagePosition;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index imagePosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_alignment(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.TextAnchor ret = obj.alignment;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index alignment on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wordWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool ret = obj.wordWrap;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wordWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_clipping(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.TextClipping ret = obj.clipping;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipping on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_contentOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.Vector2 ret = obj.contentOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index contentOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fixedWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			float ret = obj.fixedWidth;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixedWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fixedHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			float ret = obj.fixedHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixedHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stretchWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool ret = obj.stretchWidth;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stretchWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stretchHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool ret = obj.stretchHeight;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stretchHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fontSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			int ret = obj.fontSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fontSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fontStyle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.FontStyle ret = obj.fontStyle;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fontStyle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_richText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool ret = obj.richText;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index richText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			string ret = obj.name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_normal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.normal;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index normal on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hover(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.hover;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hover on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_active(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.active;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index active on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onNormal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.onNormal;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onNormal on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onHover(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.onHover;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onHover on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.onActive;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onActive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_focused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.focused;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index focused on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onFocused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState ret = obj.onFocused;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onFocused on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_border(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset ret = obj.border;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index border on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_margin(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset ret = obj.margin;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index margin on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_padding(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset ret = obj.padding;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index padding on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_overflow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset ret = obj.overflow;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overflow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lineHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			float ret = obj.lineHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lineHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_none(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, UnityEngine.GUIStyle.none);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isHeightDependantOnWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool ret = obj.isHeightDependantOnWidth;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isHeightDependantOnWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_font(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.Font arg0 = (UnityEngine.Font)ToLua.CheckObject<UnityEngine.Font>(L, 2);
			obj.font = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index font on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_imagePosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.ImagePosition arg0 = (UnityEngine.ImagePosition)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.ImagePosition>.type);
			obj.imagePosition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index imagePosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_alignment(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.TextAnchor arg0 = (UnityEngine.TextAnchor)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.TextAnchor>.type);
			obj.alignment = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index alignment on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wordWrap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.wordWrap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index wordWrap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_clipping(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.TextClipping arg0 = (UnityEngine.TextClipping)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.TextClipping>.type);
			obj.clipping = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index clipping on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_contentOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.contentOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index contentOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fixedWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fixedWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixedWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fixedHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.fixedHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fixedHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stretchWidth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.stretchWidth = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stretchWidth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stretchHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.stretchHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stretchHeight on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fontSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.fontSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fontSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fontStyle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.FontStyle arg0 = (UnityEngine.FontStyle)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.FontStyle>.type);
			obj.fontStyle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fontStyle on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_richText(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.richText = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index richText on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_normal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.normal = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index normal on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_hover(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.hover = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hover on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_active(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.active = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index active on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onNormal(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.onNormal = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onNormal on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onHover(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.onHover = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onHover on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onActive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.onActive = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onActive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_focused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.focused = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index focused on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onFocused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.GUIStyleState arg0 = (UnityEngine.GUIStyleState)ToLua.CheckObject<UnityEngine.GUIStyleState>(L, 2);
			obj.onFocused = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onFocused on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_border(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset arg0 = (UnityEngine.RectOffset)ToLua.CheckObject<UnityEngine.RectOffset>(L, 2);
			obj.border = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index border on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_margin(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset arg0 = (UnityEngine.RectOffset)ToLua.CheckObject<UnityEngine.RectOffset>(L, 2);
			obj.margin = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index margin on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_padding(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset arg0 = (UnityEngine.RectOffset)ToLua.CheckObject<UnityEngine.RectOffset>(L, 2);
			obj.padding = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index padding on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_overflow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.GUIStyle obj = (UnityEngine.GUIStyle)o;
			UnityEngine.RectOffset arg0 = (UnityEngine.RectOffset)ToLua.CheckObject<UnityEngine.RectOffset>(L, 2);
			obj.overflow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index overflow on a nil value");
		}
	}
}

