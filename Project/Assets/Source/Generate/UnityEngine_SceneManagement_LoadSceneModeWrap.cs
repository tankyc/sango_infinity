//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_SceneManagement_LoadSceneModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.SceneManagement.LoadSceneMode));
		L.RegVar("Single", new LuaCSFunction(get_Single), null);
		L.RegVar("Additive", new LuaCSFunction(get_Additive), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UnityEngine.SceneManagement.LoadSceneMode>.Check = CheckType;
		StackTraits<UnityEngine.SceneManagement.LoadSceneMode>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.SceneManagement.LoadSceneMode arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UnityEngine_SceneManagement_LoadSceneMode = typeof(UnityEngine.SceneManagement.LoadSceneMode);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UnityEngine_SceneManagement_LoadSceneMode, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Single(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.SceneManagement.LoadSceneMode.Single);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Additive(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.SceneManagement.LoadSceneMode.Additive);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UnityEngine.SceneManagement.LoadSceneMode o = (UnityEngine.SceneManagement.LoadSceneMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

