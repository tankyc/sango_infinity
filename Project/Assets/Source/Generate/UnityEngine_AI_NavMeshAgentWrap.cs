//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_AI_NavMeshAgentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.AI.NavMeshAgent), typeof(UnityEngine.Behaviour));
		L.RegFunction("SetDestination", new LuaCSFunction(SetDestination));
		L.RegFunction("ActivateCurrentOffMeshLink", new LuaCSFunction(ActivateCurrentOffMeshLink));
		L.RegFunction("CompleteOffMeshLink", new LuaCSFunction(CompleteOffMeshLink));
		L.RegFunction("Warp", new LuaCSFunction(Warp));
		L.RegFunction("Move", new LuaCSFunction(Move));
		L.RegFunction("ResetPath", new LuaCSFunction(ResetPath));
		L.RegFunction("SetPath", new LuaCSFunction(SetPath));
		L.RegFunction("FindClosestEdge", new LuaCSFunction(FindClosestEdge));
		L.RegFunction("Raycast", new LuaCSFunction(Raycast));
		L.RegFunction("CalculatePath", new LuaCSFunction(CalculatePath));
		L.RegFunction("SamplePathPosition", new LuaCSFunction(SamplePathPosition));
		L.RegFunction("SetAreaCost", new LuaCSFunction(SetAreaCost));
		L.RegFunction("GetAreaCost", new LuaCSFunction(GetAreaCost));
		L.RegFunction("New", new LuaCSFunction(_CreateUnityEngine_AI_NavMeshAgent));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("destination", new LuaCSFunction(get_destination), new LuaCSFunction(set_destination));
		L.RegVar("stoppingDistance", new LuaCSFunction(get_stoppingDistance), new LuaCSFunction(set_stoppingDistance));
		L.RegVar("velocity", new LuaCSFunction(get_velocity), new LuaCSFunction(set_velocity));
		L.RegVar("nextPosition", new LuaCSFunction(get_nextPosition), new LuaCSFunction(set_nextPosition));
		L.RegVar("steeringTarget", new LuaCSFunction(get_steeringTarget), null);
		L.RegVar("desiredVelocity", new LuaCSFunction(get_desiredVelocity), null);
		L.RegVar("remainingDistance", new LuaCSFunction(get_remainingDistance), null);
		L.RegVar("baseOffset", new LuaCSFunction(get_baseOffset), new LuaCSFunction(set_baseOffset));
		L.RegVar("isOnOffMeshLink", new LuaCSFunction(get_isOnOffMeshLink), null);
		L.RegVar("currentOffMeshLinkData", new LuaCSFunction(get_currentOffMeshLinkData), null);
		L.RegVar("nextOffMeshLinkData", new LuaCSFunction(get_nextOffMeshLinkData), null);
		L.RegVar("autoTraverseOffMeshLink", new LuaCSFunction(get_autoTraverseOffMeshLink), new LuaCSFunction(set_autoTraverseOffMeshLink));
		L.RegVar("autoBraking", new LuaCSFunction(get_autoBraking), new LuaCSFunction(set_autoBraking));
		L.RegVar("autoRepath", new LuaCSFunction(get_autoRepath), new LuaCSFunction(set_autoRepath));
		L.RegVar("hasPath", new LuaCSFunction(get_hasPath), null);
		L.RegVar("pathPending", new LuaCSFunction(get_pathPending), null);
		L.RegVar("isPathStale", new LuaCSFunction(get_isPathStale), null);
		L.RegVar("pathStatus", new LuaCSFunction(get_pathStatus), null);
		L.RegVar("pathEndPosition", new LuaCSFunction(get_pathEndPosition), null);
		L.RegVar("isStopped", new LuaCSFunction(get_isStopped), new LuaCSFunction(set_isStopped));
		L.RegVar("path", new LuaCSFunction(get_path), new LuaCSFunction(set_path));
		L.RegVar("navMeshOwner", new LuaCSFunction(get_navMeshOwner), null);
		L.RegVar("agentTypeID", new LuaCSFunction(get_agentTypeID), new LuaCSFunction(set_agentTypeID));
		L.RegVar("areaMask", new LuaCSFunction(get_areaMask), new LuaCSFunction(set_areaMask));
		L.RegVar("speed", new LuaCSFunction(get_speed), new LuaCSFunction(set_speed));
		L.RegVar("angularSpeed", new LuaCSFunction(get_angularSpeed), new LuaCSFunction(set_angularSpeed));
		L.RegVar("acceleration", new LuaCSFunction(get_acceleration), new LuaCSFunction(set_acceleration));
		L.RegVar("updatePosition", new LuaCSFunction(get_updatePosition), new LuaCSFunction(set_updatePosition));
		L.RegVar("updateRotation", new LuaCSFunction(get_updateRotation), new LuaCSFunction(set_updateRotation));
		L.RegVar("updateUpAxis", new LuaCSFunction(get_updateUpAxis), new LuaCSFunction(set_updateUpAxis));
		L.RegVar("radius", new LuaCSFunction(get_radius), new LuaCSFunction(set_radius));
		L.RegVar("height", new LuaCSFunction(get_height), new LuaCSFunction(set_height));
		L.RegVar("obstacleAvoidanceType", new LuaCSFunction(get_obstacleAvoidanceType), new LuaCSFunction(set_obstacleAvoidanceType));
		L.RegVar("avoidancePriority", new LuaCSFunction(get_avoidancePriority), new LuaCSFunction(set_avoidancePriority));
		L.RegVar("isOnNavMesh", new LuaCSFunction(get_isOnNavMesh), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_AI_NavMeshAgent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.AI.NavMeshAgent obj = new UnityEngine.AI.NavMeshAgent();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.AI.NavMeshAgent.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDestination(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool o = obj.SetDestination(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ActivateCurrentOffMeshLink(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ActivateCurrentOffMeshLink(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CompleteOffMeshLink(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			obj.CompleteOffMeshLink();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Warp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool o = obj.Warp(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Move(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Move(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			obj.ResetPath();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.AI.NavMeshPath arg0 = (UnityEngine.AI.NavMeshPath)ToLua.CheckObject<UnityEngine.AI.NavMeshPath>(L, 2);
			bool o = obj.SetPath(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindClosestEdge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.AI.NavMeshHit arg0;
			bool o = obj.FindClosestEdge(out arg0);
			LuaDLL.lua_pushboolean(L, o);
			ToLua.PushValue(L, arg0);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Raycast(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.AI.NavMeshHit arg1;
			bool o = obj.Raycast(arg0, out arg1);
			LuaDLL.lua_pushboolean(L, o);
			ToLua.PushValue(L, arg1);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CalculatePath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.AI.NavMeshPath arg1 = (UnityEngine.AI.NavMeshPath)ToLua.CheckObject<UnityEngine.AI.NavMeshPath>(L, 3);
			bool o = obj.CalculatePath(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SamplePathPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.AI.NavMeshHit arg2;
			bool o = obj.SamplePathPosition(arg0, arg1, out arg2);
			LuaDLL.lua_pushboolean(L, o);
			ToLua.PushValue(L, arg2);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAreaCost(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetAreaCost(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAreaCost(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)ToLua.CheckObject<UnityEngine.AI.NavMeshAgent>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			float o = obj.GetAreaCost(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_destination(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 ret = obj.destination;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index destination on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stoppingDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.stoppingDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stoppingDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_velocity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 ret = obj.velocity;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index velocity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_nextPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 ret = obj.nextPosition;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index nextPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_steeringTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 ret = obj.steeringTarget;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index steeringTarget on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_desiredVelocity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 ret = obj.desiredVelocity;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index desiredVelocity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_remainingDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.remainingDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index remainingDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_baseOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.baseOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index baseOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isOnOffMeshLink(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.isOnOffMeshLink;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isOnOffMeshLink on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_currentOffMeshLinkData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.OffMeshLinkData ret = obj.currentOffMeshLinkData;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index currentOffMeshLinkData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_nextOffMeshLinkData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.OffMeshLinkData ret = obj.nextOffMeshLinkData;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index nextOffMeshLinkData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoTraverseOffMeshLink(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.autoTraverseOffMeshLink;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoTraverseOffMeshLink on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoBraking(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.autoBraking;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoBraking on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoRepath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.autoRepath;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoRepath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_hasPath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.hasPath;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index hasPath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pathPending(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.pathPending;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pathPending on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isPathStale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.isPathStale;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isPathStale on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pathStatus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.NavMeshPathStatus ret = obj.pathStatus;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pathStatus on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_pathEndPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 ret = obj.pathEndPosition;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index pathEndPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isStopped(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.isStopped;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isStopped on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_path(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.NavMeshPath ret = obj.path;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index path on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_navMeshOwner(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Object ret = obj.navMeshOwner;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index navMeshOwner on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_agentTypeID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			int ret = obj.agentTypeID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index agentTypeID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_areaMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			int ret = obj.areaMask;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index areaMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.speed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_angularSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.angularSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index angularSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_acceleration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.acceleration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index acceleration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updatePosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.updatePosition;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updatePosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updateRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.updateRotation;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_updateUpAxis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.updateUpAxis;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateUpAxis on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_radius(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.radius;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radius on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_height(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float ret = obj.height;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index height on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_obstacleAvoidanceType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.ObstacleAvoidanceType ret = obj.obstacleAvoidanceType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index obstacleAvoidanceType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_avoidancePriority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			int ret = obj.avoidancePriority;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index avoidancePriority on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isOnNavMesh(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool ret = obj.isOnNavMesh;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isOnNavMesh on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_destination(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.destination = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index destination on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stoppingDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.stoppingDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stoppingDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_velocity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.velocity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index velocity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_nextPosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.nextPosition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index nextPosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_baseOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.baseOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index baseOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoTraverseOffMeshLink(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoTraverseOffMeshLink = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoTraverseOffMeshLink on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoBraking(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoBraking = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoBraking on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoRepath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoRepath = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index autoRepath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isStopped(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isStopped = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index isStopped on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_path(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.NavMeshPath arg0 = (UnityEngine.AI.NavMeshPath)ToLua.CheckObject<UnityEngine.AI.NavMeshPath>(L, 2);
			obj.path = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index path on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_agentTypeID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.agentTypeID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index agentTypeID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_areaMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.areaMask = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index areaMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_speed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.speed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index speed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_angularSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.angularSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index angularSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_acceleration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.acceleration = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index acceleration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updatePosition(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.updatePosition = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updatePosition on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updateRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.updateRotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_updateUpAxis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.updateUpAxis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index updateUpAxis on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_radius(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.radius = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index radius on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_height(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.height = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index height on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_obstacleAvoidanceType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			UnityEngine.AI.ObstacleAvoidanceType arg0 = (UnityEngine.AI.ObstacleAvoidanceType)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.AI.ObstacleAvoidanceType>.type);
			obj.obstacleAvoidanceType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index obstacleAvoidanceType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_avoidancePriority(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.AI.NavMeshAgent obj = (UnityEngine.AI.NavMeshAgent)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.avoidancePriority = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index avoidancePriority on a nil value");
		}
	}
}

