//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_MapBaseColorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Render.MapBaseColor), typeof(Sango.Render.MapProperty));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("UpdateRender", new LuaCSFunction(UpdateRender));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Render_MapBaseColor));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("texture", new LuaCSFunction(get_texture), new LuaCSFunction(set_texture));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Render_MapBaseColor(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Render.MapRender arg0 = (Sango.Render.MapRender)ToLua.CheckObject<Sango.Render.MapRender>(L, 1);
				Sango.Render.MapBaseColor obj = new Sango.Render.MapBaseColor(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Render.MapBaseColor.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapBaseColor obj = (Sango.Render.MapBaseColor)ToLua.CheckObject<Sango.Render.MapBaseColor>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapBaseColor obj = (Sango.Render.MapBaseColor)ToLua.CheckObject<Sango.Render.MapBaseColor>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapBaseColor obj = (Sango.Render.MapBaseColor)ToLua.CheckObject<Sango.Render.MapBaseColor>(L, 1);
			obj.UpdateRender();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_texture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapBaseColor obj = (Sango.Render.MapBaseColor)o;
			UnityEngine.Texture[] ret = obj.texture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index texture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_texture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapBaseColor obj = (Sango.Render.MapBaseColor)o;
			UnityEngine.Texture[] arg0 = ToLua.CheckObjectArray<UnityEngine.Texture>(L, 2);
			obj.texture = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index texture on a nil value");
		}
	}
}

