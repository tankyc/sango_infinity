//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_ConfigWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Config), typeof(System.Object));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Config));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("isDebug", new LuaCSFunction(get_isDebug), new LuaCSFunction(set_isDebug));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Config(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Config obj = new Sango.Config();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Config.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isDebug(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Sango.Config.isDebug);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isDebug(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Sango.Config.isDebug = arg0;
			Sango.Config.isDebug = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

