//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Tools_TerrainBrushWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Tools.TerrainBrush), typeof(Sango.Tools.BrushBase));
		L.RegFunction("OnEnter", new LuaCSFunction(OnEnter));
		L.RegFunction("OnBrushSizeChange", new LuaCSFunction(OnBrushSizeChange));
		L.RegFunction("GetBounds", new LuaCSFunction(GetBounds));
		L.RegFunction("OnSeasonChanged", new LuaCSFunction(OnSeasonChanged));
		L.RegFunction("CreateBaseTextrue", new LuaCSFunction(CreateBaseTextrue));
		L.RegFunction("OnBrushTypeChange", new LuaCSFunction(OnBrushTypeChange));
		L.RegFunction("Modify", new LuaCSFunction(Modify));
		L.RegFunction("Do", new LuaCSFunction(Do));
		L.RegFunction("OnGUI", new LuaCSFunction(OnGUI));
		L.RegFunction("DrawGizmos", new LuaCSFunction(DrawGizmos));
		L.RegFunction("AutoImportLayerTexture", new LuaCSFunction(AutoImportLayerTexture));
		L.RegFunction("AutoLoadBaseTexture", new LuaCSFunction(AutoLoadBaseTexture));
		L.RegFunction("AutoSaveBaseTexture", new LuaCSFunction(AutoSaveBaseTexture));
		L.RegFunction("SaveBaseTexture", new LuaCSFunction(SaveBaseTexture));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Tools_TerrainBrush));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("size", new LuaCSFunction(get_size), new LuaCSFunction(set_size));
		L.RegVar("opacity", new LuaCSFunction(get_opacity), new LuaCSFunction(set_opacity));
		L.RegVar("brushTexture", new LuaCSFunction(get_brushTexture), new LuaCSFunction(set_brushTexture));
		L.RegVar("brushType", new LuaCSFunction(get_brushType), new LuaCSFunction(set_brushType));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Tools_TerrainBrush(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Tools.MapEditor arg0 = (Sango.Tools.MapEditor)ToLua.CheckObject<Sango.Tools.MapEditor>(L, 1);
				Sango.Tools.TerrainBrush obj = new Sango.Tools.TerrainBrush(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Tools.TerrainBrush.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.OnEnter();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBrushSizeChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.OnBrushSizeChange();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBounds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			Sango.Tools.Rect o = obj.GetBounds(arg0);
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSeasonChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.OnSeasonChanged(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateBaseTextrue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			UnityEngine.RenderTexture o = obj.CreateBaseTextrue();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBrushTypeChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.OnBrushTypeChange();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Modify(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			Sango.Tools.MapEditor arg1 = (Sango.Tools.MapEditor)ToLua.CheckObject<Sango.Tools.MapEditor>(L, 3);
			obj.Modify(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Do(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			Sango.Render.MapData.VertexData arg1 = StackTraits<Sango.Render.MapData.VertexData>.Check(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			int arg3 = (int)LuaDLL.luaL_checkinteger(L, 5);
			bool o = obj.Do(arg0, ref arg1, arg2, arg3);
			LuaDLL.lua_pushboolean(L, o);
			ToLua.PushValue(L, arg1);
			return 2;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.OnGUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawGizmos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.DrawGizmos(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AutoImportLayerTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.AutoImportLayerTexture();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AutoLoadBaseTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.AutoLoadBaseTexture();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AutoSaveBaseTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
			obj.AutoSaveBaseTexture();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SaveBaseTexture(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.SaveBaseTexture(arg0);
				return 0;
			}
			else if (count == 3)
			{
				Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)ToLua.CheckObject<Sango.Tools.TerrainBrush>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
				obj.SaveBaseTexture(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Tools.TerrainBrush.SaveBaseTexture");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			float ret = obj.size;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_opacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			float ret = obj.opacity;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index opacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_brushTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			UnityEngine.Texture[] ret = obj.brushTexture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index brushTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_brushType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			Sango.Tools.TerrainBrush.BrushType ret = obj.brushType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index brushType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.size = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_opacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.opacity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index opacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_brushTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			UnityEngine.Texture[] arg0 = ToLua.CheckObjectArray<UnityEngine.Texture>(L, 2);
			obj.brushTexture = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index brushTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_brushType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Tools.TerrainBrush obj = (Sango.Tools.TerrainBrush)o;
			Sango.Tools.TerrainBrush.BrushType arg0 = (Sango.Tools.TerrainBrush.BrushType)ToLua.CheckObject(L, 2, TypeTraits<Sango.Tools.TerrainBrush.BrushType>.type);
			obj.brushType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index brushType on a nil value");
		}
	}
}

