//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Game_SangoObjectWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Game.SangoObject), typeof(System.Object));
		L.RegFunction("DoAI", new LuaCSFunction(DoAI));
		L.RegFunction("Run", new LuaCSFunction(Run));
		L.RegFunction("OnScenarioPrepare", new LuaCSFunction(OnScenarioPrepare));
		L.RegFunction("OnScenarioStart", new LuaCSFunction(OnScenarioStart));
		L.RegFunction("OnTurnStart", new LuaCSFunction(OnTurnStart));
		L.RegFunction("OnTurnEnd", new LuaCSFunction(OnTurnEnd));
		L.RegFunction("OnDayStart", new LuaCSFunction(OnDayStart));
		L.RegFunction("OnDayEnd", new LuaCSFunction(OnDayEnd));
		L.RegFunction("OnMonthStart", new LuaCSFunction(OnMonthStart));
		L.RegFunction("OnMonthEnd", new LuaCSFunction(OnMonthEnd));
		L.RegFunction("OnYearStart", new LuaCSFunction(OnYearStart));
		L.RegFunction("OnYearEnd", new LuaCSFunction(OnYearEnd));
		L.RegFunction("OnSeasonStart", new LuaCSFunction(OnSeasonStart));
		L.RegFunction("OnSeasonEnd", new LuaCSFunction(OnSeasonEnd));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("IsEnemy", new LuaCSFunction(IsEnemy));
		L.RegFunction("IsSameForce", new LuaCSFunction(IsSameForce));
		L.RegFunction("IsAlliance", new LuaCSFunction(IsAlliance));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Game_SangoObject));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("ObjectType", new LuaCSFunction(get_ObjectType), null);
		L.RegVar("Id", new LuaCSFunction(get_Id), new LuaCSFunction(set_Id));
		L.RegVar("Name", new LuaCSFunction(get_Name), new LuaCSFunction(set_Name));
		L.RegVar("Tag", new LuaCSFunction(get_Tag), new LuaCSFunction(set_Tag));
		L.RegVar("IsAlive", new LuaCSFunction(get_IsAlive), new LuaCSFunction(set_IsAlive));
		L.RegVar("ActionOver", new LuaCSFunction(get_ActionOver), new LuaCSFunction(set_ActionOver));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Game_SangoObject(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Game.SangoObject obj = new Sango.Game.SangoObject();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Game.SangoObject.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoAI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.DoAI(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.Run(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnScenarioPrepare(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			obj.OnScenarioPrepare(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnScenarioStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			obj.OnScenarioStart(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTurnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnTurnStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTurnEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnTurnEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDayStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnDayStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDayEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnDayEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMonthStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnMonthStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMonthEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnMonthEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnYearStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnYearStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnYearEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnYearEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSeasonStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnSeasonStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSeasonEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnSeasonEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsEnemy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 2);
			Sango.Game.Force arg1 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 3);
			bool o = obj.IsEnemy(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsSameForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 2);
			Sango.Game.Force arg1 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 3);
			bool o = obj.IsSameForce(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsAlliance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)ToLua.CheckObject<Sango.Game.SangoObject>(L, 1);
			Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 2);
			Sango.Game.Force arg1 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 3);
			bool o = obj.IsAlliance(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ObjectType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			Sango.Game.SangoObjectType ret = obj.ObjectType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ObjectType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			int ret = obj.Id;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			string ret = obj.Tag;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Tag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsAlive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			bool ret = obj.IsAlive;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsAlive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ActionOver(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			bool ret = obj.ActionOver;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ActionOver on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.Id = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Tag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Tag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsAlive(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsAlive = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsAlive on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ActionOver(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.SangoObject obj = (Sango.Game.SangoObject)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ActionOver = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ActionOver on a nil value");
		}
	}
}

