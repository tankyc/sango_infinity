//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_MapGrid_San11GridDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Render.MapGrid.San11GridData), null);
		L.RegFunction("OnLoad", new LuaCSFunction(OnLoad));
		L.RegFunction("OnSave", new LuaCSFunction(OnSave));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Render_MapGrid_San11GridData));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("tType", new LuaCSFunction(get_tType), new LuaCSFunction(set_tType));
		L.RegVar("areaId", new LuaCSFunction(get_areaId), new LuaCSFunction(set_areaId));
		L.RegVar("lpB", new LuaCSFunction(get_lpB), new LuaCSFunction(set_lpB));
		L.RegVar("trap", new LuaCSFunction(get_trap), new LuaCSFunction(set_trap));
		L.RegVar("dir", new LuaCSFunction(get_dir), new LuaCSFunction(set_dir));
		L.RegVar("interior", new LuaCSFunction(get_interior), new LuaCSFunction(set_interior));
		L.RegVar("defence", new LuaCSFunction(get_defence), new LuaCSFunction(set_defence));
		L.RegVar("thief", new LuaCSFunction(get_thief), new LuaCSFunction(set_thief));
		L.RegVar("flood", new LuaCSFunction(get_flood), new LuaCSFunction(set_flood));
		L.RegVar("fire", new LuaCSFunction(get_fire), new LuaCSFunction(set_fire));
		L.RegVar("ruins", new LuaCSFunction(get_ruins), new LuaCSFunction(set_ruins));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Render_MapGrid_San11GridData(IntPtr L)
	{
		Sango.Render.MapGrid.San11GridData obj = new Sango.Render.MapGrid.San11GridData();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLoad(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)ToLua.CheckObject(L, 1, TypeTraits<Sango.Render.MapGrid.San11GridData>.type);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			System.IO.BinaryReader arg1 = (System.IO.BinaryReader)ToLua.CheckObject<System.IO.BinaryReader>(L, 3);
			obj.OnLoad(arg0, arg1);
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSave(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)ToLua.CheckObject(L, 1, TypeTraits<Sango.Render.MapGrid.San11GridData>.type);
			System.IO.BinaryWriter arg0 = (System.IO.BinaryWriter)ToLua.CheckObject<System.IO.BinaryWriter>(L, 2);
			obj.OnSave(arg0);
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.tType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_areaId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.areaId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index areaId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lpB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.lpB;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lpB on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_trap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.trap;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.dir;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dir on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_interior(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.interior;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interior on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_defence(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.defence;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index defence on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_thief(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.thief;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index thief on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_flood(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.flood;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index flood on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fire(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.fire;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fire on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ruins(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte ret = obj.ruins;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ruins on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.tType = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index tType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_areaId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.areaId = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index areaId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lpB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.lpB = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lpB on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_trap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.trap = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index trap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.dir = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dir on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_interior(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.interior = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index interior on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_defence(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.defence = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index defence on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_thief(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.thief = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index thief on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_flood(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.flood = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index flood on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fire(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.fire = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fire on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ruins(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapGrid.San11GridData obj = (Sango.Render.MapGrid.San11GridData)o;
			byte arg0 = (byte)LuaDLL.luaL_checkinteger(L, 2);
			obj.ruins = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ruins on a nil value");
		}
	}
}

