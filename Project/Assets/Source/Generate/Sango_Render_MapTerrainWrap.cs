//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_MapTerrainWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Render.MapTerrain), typeof(Sango.Render.MapProperty));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("UpdateRender", new LuaCSFunction(UpdateRender));
		L.RegFunction("Rebuild", new LuaCSFunction(Rebuild));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Render_MapTerrain));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("cellSize", new LuaCSFunction(get_cellSize), new LuaCSFunction(set_cellSize));
		L.RegVar("terrainCells", new LuaCSFunction(get_terrainCells), new LuaCSFunction(set_terrainCells));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Render_MapTerrain(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Render.MapRender arg0 = (Sango.Render.MapRender)ToLua.CheckObject<Sango.Render.MapRender>(L, 1);
				Sango.Render.MapTerrain obj = new Sango.Render.MapTerrain(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Render.MapTerrain.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)ToLua.CheckObject<Sango.Render.MapTerrain>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)ToLua.CheckObject<Sango.Render.MapTerrain>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)ToLua.CheckObject<Sango.Render.MapTerrain>(L, 1);
			obj.UpdateRender();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Rebuild(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)ToLua.CheckObject<Sango.Render.MapTerrain>(L, 1);
			obj.Rebuild();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)ToLua.CheckObject<Sango.Render.MapTerrain>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cellSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)o;
			int ret = obj.cellSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_terrainCells(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)o;
			Sango.Render.MapCell[] ret = obj.terrainCells;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index terrainCells on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cellSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.cellSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cellSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_terrainCells(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapTerrain obj = (Sango.Render.MapTerrain)o;
			Sango.Render.MapCell[] arg0 = ToLua.CheckObjectArray<Sango.Render.MapCell>(L, 2);
			obj.terrainCells = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index terrainCells on a nil value");
		}
	}
}

