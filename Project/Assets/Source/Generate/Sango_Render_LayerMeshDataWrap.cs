//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_LayerMeshDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Render.LayerMeshData), typeof(System.Object));
		L.RegFunction("Create", new LuaCSFunction(Create));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("Reset", new LuaCSFunction(Reset));
		L.RegFunction("IsValid", new LuaCSFunction(IsValid));
		L.RegFunction("UpdateMesh", new LuaCSFunction(UpdateMesh));
		L.RegFunction("Dispose", new LuaCSFunction(Dispose));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Render_LayerMeshData));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("vertexCache", new LuaCSFunction(get_vertexCache), new LuaCSFunction(set_vertexCache));
		L.RegVar("colorCache", new LuaCSFunction(get_colorCache), new LuaCSFunction(set_colorCache));
		L.RegVar("triangleCache", new LuaCSFunction(get_triangleCache), new LuaCSFunction(set_triangleCache));
		L.RegVar("uvCache", new LuaCSFunction(get_uvCache), new LuaCSFunction(set_uvCache));
		L.RegVar("normalCache", new LuaCSFunction(get_normalCache), new LuaCSFunction(set_normalCache));
		L.RegVar("Flags", new LuaCSFunction(get_Flags), new LuaCSFunction(set_Flags));
		L.RegVar("vertexCount", null, new LuaCSFunction(set_vertexCount));
		L.RegVar("colorCount", null, new LuaCSFunction(set_colorCount));
		L.RegVar("triangleCount", null, new LuaCSFunction(set_triangleCount));
		L.RegVar("uvCount", null, new LuaCSFunction(set_uvCount));
		L.RegVar("normalCount", null, new LuaCSFunction(set_normalCount));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Render_LayerMeshData(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Render.LayerMeshData obj = new Sango.Render.LayerMeshData();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Render.LayerMeshData.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Render.LayerMeshData o = Sango.Render.LayerMeshData.Create();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)ToLua.CheckObject<Sango.Render.LayerMeshData>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)ToLua.CheckObject<Sango.Render.LayerMeshData>(L, 1);
			obj.Reset();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsValid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)ToLua.CheckObject<Sango.Render.LayerMeshData>(L, 1);
			bool o = obj.IsValid();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateMesh(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)ToLua.CheckObject<Sango.Render.LayerMeshData>(L, 1);
			UnityEngine.Mesh arg0 = (UnityEngine.Mesh)ToLua.CheckObject<UnityEngine.Mesh>(L, 2);
			obj.UpdateMesh(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)ToLua.CheckObject<Sango.Render.LayerMeshData>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_vertexCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Vector3> ret = obj.vertexCache;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vertexCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_colorCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Color> ret = obj.colorCache;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_triangleCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<int> ret = obj.triangleCache;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index triangleCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uvCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Vector2> ret = obj.uvCache;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uvCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_normalCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Vector3> ret = obj.normalCache;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index normalCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Flags(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Render.LayerMeshData.Flags);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_vertexCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Vector3> arg0 = (Sango.Render.MapCache<UnityEngine.Vector3>)ToLua.CheckObject<Sango.Render.MapCache<UnityEngine.Vector3>>(L, 2);
			obj.vertexCache = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vertexCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_colorCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Color> arg0 = (Sango.Render.MapCache<UnityEngine.Color>)ToLua.CheckObject<Sango.Render.MapCache<UnityEngine.Color>>(L, 2);
			obj.colorCache = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_triangleCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<int> arg0 = (Sango.Render.MapCache<int>)ToLua.CheckObject<Sango.Render.MapCache<int>>(L, 2);
			obj.triangleCache = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index triangleCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uvCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Vector2> arg0 = (Sango.Render.MapCache<UnityEngine.Vector2>)ToLua.CheckObject<Sango.Render.MapCache<UnityEngine.Vector2>>(L, 2);
			obj.uvCache = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uvCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_normalCache(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			Sango.Render.MapCache<UnityEngine.Vector3> arg0 = (Sango.Render.MapCache<UnityEngine.Vector3>)ToLua.CheckObject<Sango.Render.MapCache<UnityEngine.Vector3>>(L, 2);
			obj.normalCache = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index normalCache on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Flags(IntPtr L)
	{
		try
		{
			UnityEngine.Rendering.MeshUpdateFlags arg0 = (UnityEngine.Rendering.MeshUpdateFlags)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.Rendering.MeshUpdateFlags>.type);
			Sango.Render.LayerMeshData.Flags = arg0;
			Sango.Render.LayerMeshData.Flags = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_vertexCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.vertexCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index vertexCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_colorCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.colorCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index colorCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_triangleCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.triangleCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index triangleCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uvCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.uvCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index uvCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_normalCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.LayerMeshData obj = (Sango.Render.LayerMeshData)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.normalCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index normalCount on a nil value");
		}
	}
}

