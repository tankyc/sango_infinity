//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_BehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Behaviour), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Link", new LuaCSFunction(Link));
		L.RegFunction("AttachScript", new LuaCSFunction(AttachScript));
		L.RegFunction("DetachScript", new LuaCSFunction(DetachScript));
		L.RegFunction("GetTransform", new LuaCSFunction(GetTransform));
		L.RegFunction("GetObject", new LuaCSFunction(GetObject));
		L.RegFunction("GetComponent", new LuaCSFunction(GetComponent));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Link(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 1);
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				Sango.Behaviour o = Sango.Behaviour.Link(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<bool>(L, 3))
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 1);
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				bool arg2 = LuaDLL.lua_toboolean(L, 3);
				Sango.Behaviour o = Sango.Behaviour.Link(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type>(L, 3))
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 1);
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				System.Type arg2 = (System.Type)ToLua.ToObject(L, 3);
				Sango.Behaviour o = Sango.Behaviour.Link(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject<UnityEngine.GameObject>(L, 1);
				LuaTable arg1 = ToLua.CheckLuaTable(L, 2);
				System.Type arg2 = ToLua.CheckMonoType(L, 3);
				bool arg3 = LuaDLL.luaL_checkboolean(L, 4);
				Sango.Behaviour o = Sango.Behaviour.Link(arg0, arg1, arg2, arg3);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Behaviour.Link");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AttachScript(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				obj.AttachScript(arg0);
				return 0;
			}
			else if (count == 3)
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.AttachScript(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Behaviour.AttachScript");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DetachScript(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				obj.DetachScript();
				return 0;
			}
			else if (count == 2)
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.DetachScript(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Behaviour.DetachScript");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.GetTransform(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject o = obj.GetObject(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetComponent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<System.Type>(L, 2))
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				UnityEngine.Component o = obj.GetComponent(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Component o = obj.GetComponent(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<string>(L, 3))
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				UnityEngine.Component o = obj.GetComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes<System.Type>(L, 3))
			{
				Sango.Behaviour obj = (Sango.Behaviour)ToLua.CheckObject<Sango.Behaviour>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				System.Type arg1 = (System.Type)ToLua.ToObject(L, 3);
				UnityEngine.Component o = obj.GetComponent(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Behaviour.GetComponent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

