//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_MapLayerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Render.MapLayer), typeof(Sango.Render.MapProperty));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("SetNormal", new LuaCSFunction(SetNormal));
		L.RegFunction("SetMask", new LuaCSFunction(SetMask));
		L.RegFunction("SetDiffuse", new LuaCSFunction(SetDiffuse));
		L.RegFunction("AddLayer", new LuaCSFunction(AddLayer));
		L.RegFunction("UpdateLayerRenderQueue", new LuaCSFunction(UpdateLayerRenderQueue));
		L.RegFunction("RemoveLayer", new LuaCSFunction(RemoveLayer));
		L.RegFunction("GetLayer", new LuaCSFunction(GetLayer));
		L.RegFunction("SetLayer", new LuaCSFunction(SetLayer));
		L.RegFunction("SwapLayer", new LuaCSFunction(SwapLayer));
		L.RegFunction("UpdateRender", new LuaCSFunction(UpdateRender));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Render_MapLayer));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("layerDatas", new LuaCSFunction(get_layerDatas), new LuaCSFunction(set_layerDatas));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Render_MapLayer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Render.MapRender arg0 = (Sango.Render.MapRender)ToLua.CheckObject<Sango.Render.MapRender>(L, 1);
				Sango.Render.MapLayer obj = new Sango.Render.MapLayer(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Render.MapLayer.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetNormal(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
			obj.SetNormal(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
			obj.SetMask(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDiffuse(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
				obj.SetDiffuse(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
				UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
				string arg2 = ToLua.CheckString(L, 4);
				obj.SetDiffuse(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Render.MapLayer.SetDiffuse");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			Sango.Render.MapLayer.LayerData o = obj.AddLayer();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateLayerRenderQueue(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			obj.UpdateLayerRenderQueue();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			Sango.Render.MapLayer.LayerData o = obj.RemoveLayer(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			Sango.Render.MapLayer.LayerData o = obj.GetLayer(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			Sango.Render.MapLayer.LayerData arg1 = (Sango.Render.MapLayer.LayerData)ToLua.CheckObject<Sango.Render.MapLayer.LayerData>(L, 3);
			bool o = obj.SetLayer(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SwapLayer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
			obj.SwapLayer(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)ToLua.CheckObject<Sango.Render.MapLayer>(L, 1);
			obj.UpdateRender();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_layerDatas(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)o;
			Sango.Render.MapLayer.LayerData[] ret = obj.layerDatas;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index layerDatas on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_layerDatas(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapLayer obj = (Sango.Render.MapLayer)o;
			Sango.Render.MapLayer.LayerData[] arg0 = ToLua.CheckObjectArray<Sango.Render.MapLayer.LayerData>(L, 2);
			obj.layerDatas = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index layerDatas on a nil value");
		}
	}
}

