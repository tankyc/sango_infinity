//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Mod_ModWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Mod.Mod), typeof(System.Object));
		L.RegFunction("LoadData", new LuaCSFunction(LoadData));
		L.RegFunction("LoadLua", new LuaCSFunction(LoadLua));
		L.RegFunction("LoadUI", new LuaCSFunction(LoadUI));
		L.RegFunction("LoadPackage", new LuaCSFunction(LoadPackage));
		L.RegFunction("LoadScenario", new LuaCSFunction(LoadScenario));
		L.RegFunction("GetFullPath", new LuaCSFunction(GetFullPath));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Mod_Mod));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Id", new LuaCSFunction(get_Id), null);
		L.RegVar("Name", new LuaCSFunction(get_Name), null);
		L.RegVar("Tag", new LuaCSFunction(get_Tag), null);
		L.RegVar("Version", new LuaCSFunction(get_Version), null);
		L.RegVar("Description", new LuaCSFunction(get_Description), null);
		L.RegVar("Depends", new LuaCSFunction(get_Depends), null);
		L.RegVar("Poster", new LuaCSFunction(get_Poster), null);
		L.RegVar("ModDir", new LuaCSFunction(get_ModDir), null);
		L.RegVar("ModDirName", new LuaCSFunction(get_ModDirName), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Mod_Mod(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Mod.Mod obj = new Sango.Mod.Mod();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Mod.Mod.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)ToLua.CheckObject<Sango.Mod.Mod>(L, 1);
			obj.LoadData();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadLua(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)ToLua.CheckObject<Sango.Mod.Mod>(L, 1);
			obj.LoadLua();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)ToLua.CheckObject<Sango.Mod.Mod>(L, 1);
			obj.LoadUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadPackage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)ToLua.CheckObject<Sango.Mod.Mod>(L, 1);
			obj.LoadPackage();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadScenario(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)ToLua.CheckObject<Sango.Mod.Mod>(L, 1);
			obj.LoadScenario();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFullPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)ToLua.CheckObject<Sango.Mod.Mod>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string o = obj.GetFullPath(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Id(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Id;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Id on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Tag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Tag;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Tag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Version(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Version;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Version on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Description(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Description;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Description on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Depends(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Depends;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Depends on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Poster(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.Poster;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Poster on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ModDir(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.ModDir;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ModDir on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ModDirName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Mod.Mod obj = (Sango.Mod.Mod)o;
			string ret = obj.ModDirName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ModDirName on a nil value");
		}
	}
}

