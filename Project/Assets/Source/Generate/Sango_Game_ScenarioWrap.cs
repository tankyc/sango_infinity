//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Game_ScenarioWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Game.Scenario), typeof(Sango.Game.SangoObject));
		L.RegFunction("Add", new LuaCSFunction(Add));
		L.RegFunction("Remove", new LuaCSFunction(Remove));
		L.RegFunction("GetRelations", new LuaCSFunction(GetRelations));
		L.RegFunction("GetObject", new LuaCSFunction(GetObject));
		L.RegFunction("LoadInfo", new LuaCSFunction(LoadInfo));
		L.RegFunction("LoadContent", new LuaCSFunction(LoadContent));
		L.RegFunction("LoadWorld", new LuaCSFunction(LoadWorld));
		L.RegFunction("OnWorldLoaded", new LuaCSFunction(OnWorldLoaded));
		L.RegFunction("OnModInitStart", new LuaCSFunction(OnModInitStart));
		L.RegFunction("OnModInitEnd", new LuaCSFunction(OnModInitEnd));
		L.RegFunction("StartScenario", new LuaCSFunction(StartScenario));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("OnGameShutdown", new LuaCSFunction(OnGameShutdown));
		L.RegFunction("OnGamePause", new LuaCSFunction(OnGamePause));
		L.RegFunction("OnGameResume", new LuaCSFunction(OnGameResume));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("Prepare", new LuaCSFunction(Prepare));
		L.RegFunction("Start", new LuaCSFunction(Start));
		L.RegFunction("MakeForceQuene", new LuaCSFunction(MakeForceQuene));
		L.RegFunction("TurnStart", new LuaCSFunction(TurnStart));
		L.RegFunction("RunForces", new LuaCSFunction(RunForces));
		L.RegFunction("TurnEnd", new LuaCSFunction(TurnEnd));
		L.RegFunction("IncreaseDate", new LuaCSFunction(IncreaseDate));
		L.RegFunction("Run", new LuaCSFunction(Run));
		L.RegFunction("OnDayStart", new LuaCSFunction(OnDayStart));
		L.RegFunction("OnDayEnd", new LuaCSFunction(OnDayEnd));
		L.RegFunction("OnMonthStart", new LuaCSFunction(OnMonthStart));
		L.RegFunction("OnMonthEnd", new LuaCSFunction(OnMonthEnd));
		L.RegFunction("OnYearStart", new LuaCSFunction(OnYearStart));
		L.RegFunction("OnYearEnd", new LuaCSFunction(OnYearEnd));
		L.RegFunction("OnSeasonStart", new LuaCSFunction(OnSeasonStart));
		L.RegFunction("OnSeasonEnd", new LuaCSFunction(OnSeasonEnd));
		L.RegFunction("GetCityDistance", new LuaCSFunction(GetCityDistance));
		L.RegFunction("Pause", new LuaCSFunction(Pause));
		L.RegFunction("Resume", new LuaCSFunction(Resume));
		L.RegFunction("NextForce", new LuaCSFunction(NextForce));
		L.RegFunction("NextTurn", new LuaCSFunction(NextTurn));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Game_Scenario));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("MAX_DATA_COUNT", new LuaCSFunction(get_MAX_DATA_COUNT), null);
		L.RegVar("MAX_DATA_COUNT_8096", new LuaCSFunction(get_MAX_DATA_COUNT_8096), null);
		L.RegVar("MAX_DATA_COUNT_2048", new LuaCSFunction(get_MAX_DATA_COUNT_2048), null);
		L.RegVar("MAX_DATA_COUNT_1024", new LuaCSFunction(get_MAX_DATA_COUNT_1024), null);
		L.RegVar("MAX_DATA_COUNT_512", new LuaCSFunction(get_MAX_DATA_COUNT_512), null);
		L.RegVar("MAX_DATA_COUNT_256", new LuaCSFunction(get_MAX_DATA_COUNT_256), null);
		L.RegVar("MAX_DATA_COUNT_128", new LuaCSFunction(get_MAX_DATA_COUNT_128), null);
		L.RegVar("MAX_DATA_COUNT_64", new LuaCSFunction(get_MAX_DATA_COUNT_64), null);
		L.RegVar("MAX_DATA_COUNT_32", new LuaCSFunction(get_MAX_DATA_COUNT_32), null);
		L.RegVar("MAX_DATA_COUNT_16", new LuaCSFunction(get_MAX_DATA_COUNT_16), null);
		L.RegVar("forceSet", new LuaCSFunction(get_forceSet), new LuaCSFunction(set_forceSet));
		L.RegVar("corpsSet", new LuaCSFunction(get_corpsSet), new LuaCSFunction(set_corpsSet));
		L.RegVar("citySet", new LuaCSFunction(get_citySet), new LuaCSFunction(set_citySet));
		L.RegVar("personSet", new LuaCSFunction(get_personSet), new LuaCSFunction(set_personSet));
		L.RegVar("troopsSet", new LuaCSFunction(get_troopsSet), new LuaCSFunction(set_troopsSet));
		L.RegVar("buildingSet", new LuaCSFunction(get_buildingSet), new LuaCSFunction(set_buildingSet));
		L.RegVar("fireSet", new LuaCSFunction(get_fireSet), new LuaCSFunction(set_fireSet));
		L.RegVar("allianceSet", new LuaCSFunction(get_allianceSet), new LuaCSFunction(set_allianceSet));
		L.RegVar("forceRelation", new LuaCSFunction(get_forceRelation), new LuaCSFunction(set_forceRelation));
		L.RegVar("cityDistanceMap", new LuaCSFunction(get_cityDistanceMap), new LuaCSFunction(set_cityDistanceMap));
		L.RegVar("all_scenario_list", new LuaCSFunction(get_all_scenario_list), new LuaCSFunction(set_all_scenario_list));
		L.RegVar("useThreadRun", new LuaCSFunction(get_useThreadRun), new LuaCSFunction(set_useThreadRun));
		L.RegVar("ObjectType", new LuaCSFunction(get_ObjectType), null);
		L.RegVar("Info", new LuaCSFunction(get_Info), null);
		L.RegVar("CommonData", new LuaCSFunction(get_CommonData), null);
		L.RegVar("Variables", new LuaCSFunction(get_Variables), null);
		L.RegVar("Map", new LuaCSFunction(get_Map), null);
		L.RegVar("Event", new LuaCSFunction(get_Event), null);
		L.RegVar("Cur", new LuaCSFunction(get_Cur), null);
		L.RegVar("FilePath", new LuaCSFunction(get_FilePath), null);
		L.RegVar("CurRunForce", new LuaCSFunction(get_CurRunForce), null);
		L.RegVar("CurSeason", new LuaCSFunction(get_CurSeason), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Game_Scenario(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Game.Scenario obj = new Sango.Game.Scenario();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				Sango.Game.Scenario obj = new Sango.Game.Scenario(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Game.Scenario.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Add(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				Sango.Game.Scenario.Add(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Force>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.ToObject(L, 2);
				Sango.Game.Force o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Corps>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Corps arg0 = (Sango.Game.Corps)ToLua.ToObject(L, 2);
				Sango.Game.Corps o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.City>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.City arg0 = (Sango.Game.City)ToLua.ToObject(L, 2);
				Sango.Game.City o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Person>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Person arg0 = (Sango.Game.Person)ToLua.ToObject(L, 2);
				Sango.Game.Person o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Troop>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Troop arg0 = (Sango.Game.Troop)ToLua.ToObject(L, 2);
				Sango.Game.Troop o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Building>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Building arg0 = (Sango.Game.Building)ToLua.ToObject(L, 2);
				Sango.Game.Building o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Fire>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Fire arg0 = (Sango.Game.Fire)ToLua.ToObject(L, 2);
				Sango.Game.Fire o = obj.Add(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Game.Scenario.Add");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Force>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.ToObject(L, 2);
				Sango.Game.Force o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Corps>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Corps arg0 = (Sango.Game.Corps)ToLua.ToObject(L, 2);
				Sango.Game.Corps o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.City>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.City arg0 = (Sango.Game.City)ToLua.ToObject(L, 2);
				Sango.Game.City o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Person>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Person arg0 = (Sango.Game.Person)ToLua.ToObject(L, 2);
				Sango.Game.Person o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Troop>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Troop arg0 = (Sango.Game.Troop)ToLua.ToObject(L, 2);
				Sango.Game.Troop o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Building>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Building arg0 = (Sango.Game.Building)ToLua.ToObject(L, 2);
				Sango.Game.Building o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Sango.Game.Fire>(L, 2))
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Fire arg0 = (Sango.Game.Fire)ToLua.ToObject(L, 2);
				Sango.Game.Fire o = obj.Remove(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Game.Scenario.Remove");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRelations(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 2);
			Sango.Game.Force arg1 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 3);
			Sango.Game.ForceRelation o = obj.GetRelations(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			System.Type arg1 = ToLua.CheckMonoType(L, 3);
			object o = obj.GetObject(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadInfo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				obj.LoadInfo();
				return 0;
			}
			else if (count == 2)
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadInfo(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Game.Scenario.LoadInfo");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadContent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				obj.LoadContent();
				return 0;
			}
			else if (count == 2)
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				obj.LoadContent(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Game.Scenario.LoadContent");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadWorld(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.LoadWorld();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnWorldLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.OnWorldLoaded();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnModInitStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Game.Scenario.OnModInitStart();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnModInitEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Game.Scenario.OnModInitEnd();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartScenario(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario.StartScenario(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGameShutdown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.OnGameShutdown();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGamePause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.OnGamePause();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGameResume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.OnGameResume();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			obj.Init(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Prepare(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.Prepare();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.Start();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MakeForceQuene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			obj.MakeForceQuene();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TurnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			bool o = obj.TurnStart();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RunForces(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			bool o = obj.RunForces();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TurnEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			bool o = obj.TurnEnd();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IncreaseDate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			bool o = obj.IncreaseDate();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				obj.Run();
				return 0;
			}
			else if (count == 2)
			{
				Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
				Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
				bool o = obj.Run(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Game.Scenario.Run");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDayStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnDayStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDayEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnDayEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMonthStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnMonthStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMonthEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnMonthEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnYearStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnYearStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnYearEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnYearEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSeasonStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnSeasonStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSeasonEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnSeasonEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCityDistance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 1);
			Sango.Game.City arg0 = (Sango.Game.City)ToLua.CheckObject<Sango.Game.City>(L, 2);
			Sango.Game.City arg1 = (Sango.Game.City)ToLua.CheckObject<Sango.Game.City>(L, 3);
			int o = obj.GetCityDistance(arg0, arg1);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Game.Scenario.Pause();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Resume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Game.Scenario.Resume();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NextForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Game.Scenario.NextForce();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NextTurn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Game.Scenario.NextTurn();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_8096(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_8096);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_2048(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_2048);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_1024(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_1024);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_512(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_512);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_256(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_256);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_128(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_128);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_64(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_64);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_32(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_32);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MAX_DATA_COUNT_16(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Sango.Game.Scenario.MAX_DATA_COUNT_16);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_forceSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Force> ret = obj.forceSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forceSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_corpsSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Corps> ret = obj.corpsSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index corpsSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_citySet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.City> ret = obj.citySet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index citySet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_personSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Person> ret = obj.personSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index personSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_troopsSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Troop> ret = obj.troopsSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index troopsSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_buildingSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Building> ret = obj.buildingSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buildingSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fireSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Fire> ret = obj.fireSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fireSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allianceSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Alliance> ret = obj.allianceSet;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allianceSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_forceRelation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			System.Collections.Generic.List<Sango.Game.ForceRelation> ret = obj.forceRelation;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forceRelation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cityDistanceMap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			int[][] ret = obj.cityDistanceMap;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cityDistanceMap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_all_scenario_list(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Sango.Game.Scenario.all_scenario_list);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useThreadRun(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			bool ret = obj.useThreadRun;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useThreadRun on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ObjectType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectType ret = obj.ObjectType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ObjectType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Info(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.ScenarioInfo ret = obj.Info;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Info on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CommonData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.ScenarioCommonData ret = obj.CommonData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CommonData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Variables(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.ScenarioVariables ret = obj.Variables;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Variables on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Map(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.Map ret = obj.Map;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Map on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Event(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.ScenarioEvent ret = obj.Event;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Event on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cur(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Sango.Game.Scenario.Cur);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FilePath(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			string ret = obj.FilePath;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FilePath on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurRunForce(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.Force ret = obj.CurRunForce;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurRunForce on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurSeason(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SeasonType ret = obj.CurSeason;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurSeason on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_forceSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Force> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Force>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Force>>(L, 2);
			obj.forceSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forceSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_corpsSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Corps> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Corps>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Corps>>(L, 2);
			obj.corpsSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index corpsSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_citySet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.City> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.City>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.City>>(L, 2);
			obj.citySet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index citySet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_personSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Person> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Person>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Person>>(L, 2);
			obj.personSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index personSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_troopsSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Troop> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Troop>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Troop>>(L, 2);
			obj.troopsSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index troopsSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_buildingSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Building> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Building>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Building>>(L, 2);
			obj.buildingSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index buildingSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fireSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Fire> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Fire>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Fire>>(L, 2);
			obj.fireSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index fireSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allianceSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			Sango.Game.SangoObjectSet<Sango.Game.Alliance> arg0 = (Sango.Game.SangoObjectSet<Sango.Game.Alliance>)ToLua.CheckObject<Sango.Game.SangoObjectSet<Sango.Game.Alliance>>(L, 2);
			obj.allianceSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allianceSet on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_forceRelation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			System.Collections.Generic.List<Sango.Game.ForceRelation> arg0 = (System.Collections.Generic.List<Sango.Game.ForceRelation>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<Sango.Game.ForceRelation>>.type);
			obj.forceRelation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index forceRelation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cityDistanceMap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			int[][] arg0 = ToLua.CheckObjectArray<int[]>(L, 2);
			obj.cityDistanceMap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cityDistanceMap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_all_scenario_list(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<Sango.Game.Scenario> arg0 = (System.Collections.Generic.List<Sango.Game.Scenario>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<Sango.Game.Scenario>>.type);
			Sango.Game.Scenario.all_scenario_list = arg0;
			Sango.Game.Scenario.all_scenario_list = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useThreadRun(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Scenario obj = (Sango.Game.Scenario)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.useThreadRun = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useThreadRun on a nil value");
		}
	}
}

