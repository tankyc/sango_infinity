//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Game_EventWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Game.Event), typeof(Sango.EventBase));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Game_Event));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("OnGameStateEnter", new LuaCSFunction(get_OnGameStateEnter), new LuaCSFunction(set_OnGameStateEnter));
		L.RegVar("OnGameStateExit", new LuaCSFunction(get_OnGameStateExit), new LuaCSFunction(set_OnGameStateExit));
		L.RegVar("OnScenarioLoadStart", new LuaCSFunction(get_OnScenarioLoadStart), new LuaCSFunction(set_OnScenarioLoadStart));
		L.RegVar("OnScenarioLoadEnd", new LuaCSFunction(get_OnScenarioLoadEnd), new LuaCSFunction(set_OnScenarioLoadEnd));
		L.RegVar("OnWorldLoadStart", new LuaCSFunction(get_OnWorldLoadStart), new LuaCSFunction(set_OnWorldLoadStart));
		L.RegVar("OnWorldLoadEnd", new LuaCSFunction(get_OnWorldLoadEnd), new LuaCSFunction(set_OnWorldLoadEnd));
		L.RegVar("OnScenarioStart", new LuaCSFunction(get_OnScenarioStart), new LuaCSFunction(set_OnScenarioStart));
		L.RegVar("OnScenarioPrepare", new LuaCSFunction(get_OnScenarioPrepare), new LuaCSFunction(set_OnScenarioPrepare));
		L.RegVar("OnScenarioEnd", new LuaCSFunction(get_OnScenarioEnd), new LuaCSFunction(set_OnScenarioEnd));
		L.RegVar("OnScenarioTick", new LuaCSFunction(get_OnScenarioTick), new LuaCSFunction(set_OnScenarioTick));
		L.RegVar("OnWindowCreate", new LuaCSFunction(get_OnWindowCreate), new LuaCSFunction(set_OnWindowCreate));
		L.RegVar("OnSelectBattle", new LuaCSFunction(get_OnSelectBattle), new LuaCSFunction(set_OnSelectBattle));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Game_Event(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Game.Event obj = new Sango.Game.Event();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Game.Event.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnGameStateEnter(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnGameStateEnter);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnGameStateExit(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnGameStateExit);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnScenarioLoadStart(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnScenarioLoadStart);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnScenarioLoadEnd(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnScenarioLoadEnd);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnWorldLoadStart(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnWorldLoadStart);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnWorldLoadEnd(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnWorldLoadEnd);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnScenarioStart(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnScenarioStart);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnScenarioPrepare(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnScenarioPrepare);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnScenarioEnd(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnScenarioEnd);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnScenarioTick(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnScenarioTick);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnWindowCreate(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnWindowCreate);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnSelectBattle(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Game.Event.OnSelectBattle);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnGameStateEnter(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<int,int> arg0 = (Sango.EventBase.EventDelegate<int,int>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<int,int>>(L, 2);
			Sango.Game.Event.OnGameStateEnter = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnGameStateEnter, arg0))
			{
				if (Sango.Game.Event.OnGameStateEnter != null) Sango.Game.Event.OnGameStateEnter.SubRef();
				Sango.Game.Event.OnGameStateEnter = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnGameStateExit(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<int,int> arg0 = (Sango.EventBase.EventDelegate<int,int>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<int,int>>(L, 2);
			Sango.Game.Event.OnGameStateExit = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnGameStateExit, arg0))
			{
				if (Sango.Game.Event.OnGameStateExit != null) Sango.Game.Event.OnGameStateExit.SubRef();
				Sango.Game.Event.OnGameStateExit = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnScenarioLoadStart(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnScenarioLoadStart = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnScenarioLoadStart, arg0))
			{
				if (Sango.Game.Event.OnScenarioLoadStart != null) Sango.Game.Event.OnScenarioLoadStart.SubRef();
				Sango.Game.Event.OnScenarioLoadStart = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnScenarioLoadEnd(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnScenarioLoadEnd = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnScenarioLoadEnd, arg0))
			{
				if (Sango.Game.Event.OnScenarioLoadEnd != null) Sango.Game.Event.OnScenarioLoadEnd.SubRef();
				Sango.Game.Event.OnScenarioLoadEnd = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnWorldLoadStart(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnWorldLoadStart = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnWorldLoadStart, arg0))
			{
				if (Sango.Game.Event.OnWorldLoadStart != null) Sango.Game.Event.OnWorldLoadStart.SubRef();
				Sango.Game.Event.OnWorldLoadStart = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnWorldLoadEnd(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnWorldLoadEnd = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnWorldLoadEnd, arg0))
			{
				if (Sango.Game.Event.OnWorldLoadEnd != null) Sango.Game.Event.OnWorldLoadEnd.SubRef();
				Sango.Game.Event.OnWorldLoadEnd = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnScenarioStart(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnScenarioStart = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnScenarioStart, arg0))
			{
				if (Sango.Game.Event.OnScenarioStart != null) Sango.Game.Event.OnScenarioStart.SubRef();
				Sango.Game.Event.OnScenarioStart = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnScenarioPrepare(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnScenarioPrepare = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnScenarioPrepare, arg0))
			{
				if (Sango.Game.Event.OnScenarioPrepare != null) Sango.Game.Event.OnScenarioPrepare.SubRef();
				Sango.Game.Event.OnScenarioPrepare = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnScenarioEnd(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, 2);
			Sango.Game.Event.OnScenarioEnd = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnScenarioEnd, arg0))
			{
				if (Sango.Game.Event.OnScenarioEnd != null) Sango.Game.Event.OnScenarioEnd.SubRef();
				Sango.Game.Event.OnScenarioEnd = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnScenarioTick(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario,float> arg0 = (Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>>(L, 2);
			Sango.Game.Event.OnScenarioTick = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnScenarioTick, arg0))
			{
				if (Sango.Game.Event.OnScenarioTick != null) Sango.Game.Event.OnScenarioTick.SubRef();
				Sango.Game.Event.OnScenarioTick = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnWindowCreate(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface> arg0 = (Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>)ToLua.CheckDelegate<Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>>(L, 2);
			Sango.Game.Event.OnWindowCreate = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnWindowCreate, arg0))
			{
				if (Sango.Game.Event.OnWindowCreate != null) Sango.Game.Event.OnWindowCreate.SubRef();
				Sango.Game.Event.OnWindowCreate = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnSelectBattle(IntPtr L)
	{
		try
		{
			Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]> arg0 = (Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>)ToLua.CheckDelegate<Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>>(L, 2);
			Sango.Game.Event.OnSelectBattle = arg0;

			if (!object.ReferenceEquals(Sango.Game.Event.OnSelectBattle, arg0))
			{
				if (Sango.Game.Event.OnSelectBattle != null) Sango.Game.Event.OnSelectBattle.SubRef();
				Sango.Game.Event.OnSelectBattle = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

