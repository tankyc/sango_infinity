//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_ShadowmaskModeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.ShadowmaskMode));
		L.RegVar("Shadowmask", new LuaCSFunction(get_Shadowmask), null);
		L.RegVar("DistanceShadowmask", new LuaCSFunction(get_DistanceShadowmask), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UnityEngine.ShadowmaskMode>.Check = CheckType;
		StackTraits<UnityEngine.ShadowmaskMode>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.ShadowmaskMode arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UnityEngine_ShadowmaskMode = typeof(UnityEngine.ShadowmaskMode);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UnityEngine_ShadowmaskMode, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Shadowmask(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.ShadowmaskMode.Shadowmask);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DistanceShadowmask(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.ShadowmaskMode.DistanceShadowmask);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UnityEngine.ShadowmaskMode o = (UnityEngine.ShadowmaskMode)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

