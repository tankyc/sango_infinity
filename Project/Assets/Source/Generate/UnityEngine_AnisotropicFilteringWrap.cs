//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_AnisotropicFilteringWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.AnisotropicFiltering));
		L.RegVar("Disable", new LuaCSFunction(get_Disable), null);
		L.RegVar("Enable", new LuaCSFunction(get_Enable), null);
		L.RegVar("ForceEnable", new LuaCSFunction(get_ForceEnable), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<UnityEngine.AnisotropicFiltering>.Check = CheckType;
		StackTraits<UnityEngine.AnisotropicFiltering>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.AnisotropicFiltering arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_UnityEngine_AnisotropicFiltering = typeof(UnityEngine.AnisotropicFiltering);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_UnityEngine_AnisotropicFiltering, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Disable(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.AnisotropicFiltering.Disable);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Enable(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.AnisotropicFiltering.Enable);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ForceEnable(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.AnisotropicFiltering.ForceEnable);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		UnityEngine.AnisotropicFiltering o = (UnityEngine.AnisotropicFiltering)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

