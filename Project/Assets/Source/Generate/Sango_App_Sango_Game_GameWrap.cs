//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_App_Sango_Game_GameWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.App<Sango.Game.Game>), typeof(System.Object), "App_Sango_Game_Game");
		L.RegFunction("AddTick", new LuaCSFunction(AddTick));
		L.RegFunction("RemoveTick", new LuaCSFunction(RemoveTick));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("Shutdown", new LuaCSFunction(Shutdown));
		L.RegFunction("Pause", new LuaCSFunction(Pause));
		L.RegFunction("Resume", new LuaCSFunction(Resume));
		L.RegFunction("StartCoroutine", new LuaCSFunction(StartCoroutine));
		L.RegFunction("StopCoroutine", new LuaCSFunction(StopCoroutine));
		L.RegFunction("StopAllCoroutines", new LuaCSFunction(StopAllCoroutines));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Instance", new LuaCSFunction(get_Instance), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			Sango.IUpdate arg0 = (Sango.IUpdate)ToLua.CheckObject<Sango.IUpdate>(L, 2);
			obj.AddTick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			Sango.IUpdate arg0 = (Sango.IUpdate)ToLua.CheckObject<Sango.IUpdate>(L, 2);
			obj.RemoveTick(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			UnityEngine.MonoBehaviour arg0 = (UnityEngine.MonoBehaviour)ToLua.CheckObject<UnityEngine.MonoBehaviour>(L, 2);
			Sango.Platform.PlatformName arg1 = (Sango.Platform.PlatformName)ToLua.CheckObject(L, 3, TypeTraits<Sango.Platform.PlatformName>.type);
			obj.Init(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Shutdown(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			obj.Shutdown();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			obj.Pause();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Resume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			obj.Resume();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartCoroutine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Coroutine o = obj.StartCoroutine(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.Collections.IEnumerator>(L, 2))
			{
				Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
				System.Collections.IEnumerator arg0 = (System.Collections.IEnumerator)ToLua.ToObject(L, 2);
				UnityEngine.Coroutine o = obj.StartCoroutine(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 3)
			{
				Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				UnityEngine.Coroutine o = obj.StartCoroutine(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.App<Sango.Game.Game>.StartCoroutine");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopCoroutine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<System.Collections.IEnumerator>(L, 2))
			{
				Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
				System.Collections.IEnumerator arg0 = (System.Collections.IEnumerator)ToLua.ToObject(L, 2);
				obj.StopCoroutine(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<UnityEngine.Coroutine>(L, 2))
			{
				Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
				UnityEngine.Coroutine arg0 = (UnityEngine.Coroutine)ToLua.ToObject(L, 2);
				obj.StopCoroutine(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.StopCoroutine(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.App<Sango.Game.Game>.StopCoroutine");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopAllCoroutines(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.App<Sango.Game.Game> obj = (Sango.App<Sango.Game.Game>)ToLua.CheckObject<Sango.App<Sango.Game.Game>>(L, 1);
			obj.StopAllCoroutines();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Sango.App<Sango.Game.Game>.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

