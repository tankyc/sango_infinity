//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Tools_BrushBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Tools.BrushBase), typeof(System.Object));
		L.RegFunction("Modify", new LuaCSFunction(Modify));
		L.RegFunction("OnSeasonChanged", new LuaCSFunction(OnSeasonChanged));
		L.RegFunction("DrawGizmos", new LuaCSFunction(DrawGizmos));
		L.RegFunction("OnEnter", new LuaCSFunction(OnEnter));
		L.RegFunction("IsPointerOverUI", new LuaCSFunction(IsPointerOverUI));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("OnBrushTypeChange", new LuaCSFunction(OnBrushTypeChange));
		L.RegFunction("OnBrushSizeChange", new LuaCSFunction(OnBrushSizeChange));
		L.RegFunction("OnBrushOpacityChange", new LuaCSFunction(OnBrushOpacityChange));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("OnGUI", new LuaCSFunction(OnGUI));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Tools_BrushBase));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Tools_BrushBase(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Tools.MapEditor arg0 = (Sango.Tools.MapEditor)ToLua.CheckObject<Sango.Tools.MapEditor>(L, 1);
				Sango.Tools.BrushBase obj = new Sango.Tools.BrushBase(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Tools.BrushBase.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Modify(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			Sango.Tools.MapEditor arg1 = (Sango.Tools.MapEditor)ToLua.CheckObject<Sango.Tools.MapEditor>(L, 3);
			obj.Modify(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSeasonChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.OnSeasonChanged(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawGizmos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.DrawGizmos(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.OnEnter();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsPointerOverUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			bool o = obj.IsPointerOverUI();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBrushTypeChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.OnBrushTypeChange();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBrushSizeChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.OnBrushSizeChange();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBrushOpacityChange(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.OnBrushOpacityChange();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnGUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Tools.BrushBase obj = (Sango.Tools.BrushBase)ToLua.CheckObject<Sango.Tools.BrushBase>(L, 1);
			obj.OnGUI();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

