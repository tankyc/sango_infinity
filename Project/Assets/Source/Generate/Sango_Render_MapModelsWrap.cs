//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_MapModelsWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Render.MapModels), typeof(Sango.Render.MapProperty));
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("Clear", new LuaCSFunction(Clear));
		L.RegFunction("SetOutLineShow", new LuaCSFunction(SetOutLineShow));
		L.RegFunction("AddDynamic", new LuaCSFunction(AddDynamic));
		L.RegFunction("AddStatic", new LuaCSFunction(AddStatic));
		L.RegFunction("RemoveStatic", new LuaCSFunction(RemoveStatic));
		L.RegFunction("Remove", new LuaCSFunction(Remove));
		L.RegFunction("RemoveDynamic", new LuaCSFunction(RemoveDynamic));
		L.RegFunction("IsInView", new LuaCSFunction(IsInView));
		L.RegFunction("CreateModel", new LuaCSFunction(CreateModel));
		L.RegFunction("InitModel", new LuaCSFunction(InitModel));
		L.RegFunction("ClearAllModels", new LuaCSFunction(ClearAllModels));
		L.RegFunction("UpdateRender", new LuaCSFunction(UpdateRender));
		L.RegFunction("EditorShow", new LuaCSFunction(EditorShow));
		L.RegFunction("Update", new LuaCSFunction(Update));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Render_MapModels));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("dynamicObjects", new LuaCSFunction(get_dynamicObjects), new LuaCSFunction(set_dynamicObjects));
		L.RegVar("staticObjects", new LuaCSFunction(get_staticObjects), new LuaCSFunction(set_staticObjects));
		L.RegVar("staticObjectsQuadTree", new LuaCSFunction(get_staticObjectsQuadTree), new LuaCSFunction(set_staticObjectsQuadTree));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Render_MapModels(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Render.MapRender arg0 = (Sango.Render.MapRender)ToLua.CheckObject<Sango.Render.MapRender>(L, 1);
				Sango.Render.MapModels obj = new Sango.Render.MapModels(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Render.MapModels.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetOutLineShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.SetOutLineShow(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddDynamic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			Sango.Render.IMapManageObject arg0 = (Sango.Render.IMapManageObject)ToLua.CheckObject<Sango.Render.IMapManageObject>(L, 2);
			obj.AddDynamic(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddStatic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			Sango.Render.IMapManageObject arg0 = (Sango.Render.IMapManageObject)ToLua.CheckObject<Sango.Render.IMapManageObject>(L, 2);
			obj.AddStatic(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveStatic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			Sango.Render.IMapManageObject arg0 = (Sango.Render.IMapManageObject)ToLua.CheckObject<Sango.Render.IMapManageObject>(L, 2);
			obj.RemoveStatic(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Remove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			Sango.Render.IMapManageObject arg0 = (Sango.Render.IMapManageObject)ToLua.CheckObject<Sango.Render.IMapManageObject>(L, 2);
			obj.Remove(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveDynamic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			Sango.Render.IMapManageObject arg0 = (Sango.Render.IMapManageObject)ToLua.CheckObject<Sango.Render.IMapManageObject>(L, 2);
			obj.RemoveDynamic(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsInView(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			Sango.Render.IMapManageObject arg0 = (Sango.Render.IMapManageObject)ToLua.CheckObject<Sango.Render.IMapManageObject>(L, 2);
			bool o = obj.IsInView(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 8);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			int arg3 = (int)LuaDLL.luaL_checkinteger(L, 5);
			UnityEngine.Vector3 arg4 = ToLua.ToVector3(L, 6);
			UnityEngine.Vector3 arg5 = ToLua.ToVector3(L, 7);
			UnityEngine.Vector3 arg6 = ToLua.ToVector3(L, 8);
			obj.CreateModel(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			UnityEngine.Vector2Int arg1 = StackTraits<UnityEngine.Vector2Int>.Check(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector3 arg3 = ToLua.ToVector3(L, 5);
			UnityEngine.Vector3 arg4 = ToLua.ToVector3(L, 6);
			obj.InitModel(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAllModels(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			obj.ClearAllModels();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			obj.UpdateRender();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EditorShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.EditorShow(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
				obj.Update();
				return 0;
			}
			else if (count == 2)
			{
				Sango.Render.MapModels obj = (Sango.Render.MapModels)ToLua.CheckObject<Sango.Render.MapModels>(L, 1);
				Sango.Tools.Rect arg0 = StackTraits<Sango.Tools.Rect>.Check(L, 2);
				obj.Update(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Render.MapModels.Update");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dynamicObjects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)o;
			System.Collections.Generic.List<Sango.Render.IMapManageObject> ret = obj.dynamicObjects;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dynamicObjects on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_staticObjects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)o;
			System.Collections.Generic.List<Sango.Render.IMapManageObject> ret = obj.staticObjects;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index staticObjects on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_staticObjectsQuadTree(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)o;
			Sango.Tools.QuadTree2D<Sango.Render.IMapManageObject> ret = obj.staticObjectsQuadTree;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index staticObjectsQuadTree on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_dynamicObjects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)o;
			System.Collections.Generic.List<Sango.Render.IMapManageObject> arg0 = (System.Collections.Generic.List<Sango.Render.IMapManageObject>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<Sango.Render.IMapManageObject>>.type);
			obj.dynamicObjects = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index dynamicObjects on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_staticObjects(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)o;
			System.Collections.Generic.List<Sango.Render.IMapManageObject> arg0 = (System.Collections.Generic.List<Sango.Render.IMapManageObject>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<Sango.Render.IMapManageObject>>.type);
			obj.staticObjects = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index staticObjects on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_staticObjectsQuadTree(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Render.MapModels obj = (Sango.Render.MapModels)o;
			Sango.Tools.QuadTree2D<Sango.Render.IMapManageObject> arg0 = (Sango.Tools.QuadTree2D<Sango.Render.IMapManageObject>)ToLua.CheckObject<Sango.Tools.QuadTree2D<Sango.Render.IMapManageObject>>(L, 2);
			obj.staticObjectsQuadTree = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index staticObjectsQuadTree on a nil value");
		}
	}
}

