//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Render_MapGrid_GridStateWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Sango.Render.MapGrid.GridState));
		L.RegVar("Moveable", new LuaCSFunction(get_Moveable), null);
		L.RegFunction("IntToEnum", new LuaCSFunction(IntToEnum));
		L.EndEnum();
		TypeTraits<Sango.Render.MapGrid.GridState>.Check = CheckType;
		StackTraits<Sango.Render.MapGrid.GridState>.Push = Push;
	}

	static void Push(IntPtr L, Sango.Render.MapGrid.GridState arg)
	{
		ToLua.Push(L, arg);
	}

	static Type TypeOf_Sango_Render_MapGrid_GridState = typeof(Sango.Render.MapGrid.GridState);

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(TypeOf_Sango_Render_MapGrid_GridState, L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Moveable(IntPtr L)
	{
		ToLua.Push(L, Sango.Render.MapGrid.GridState.Moveable);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tointeger(L, 1);
		Sango.Render.MapGrid.GridState o = (Sango.Render.MapGrid.GridState)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

