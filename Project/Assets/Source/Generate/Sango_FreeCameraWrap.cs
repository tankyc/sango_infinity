//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_FreeCameraWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.FreeCamera), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("MoveCamera", new LuaCSFunction(MoveCamera));
		L.RegFunction("ZoomCamera", new LuaCSFunction(ZoomCamera));
		L.RegFunction("OffsetCamera", new LuaCSFunction(OffsetCamera));
		L.RegFunction("RotateCamera", new LuaCSFunction(RotateCamera));
		L.RegFunction("UpdateCamera", new LuaCSFunction(UpdateCamera));
		L.RegFunction("GetViewRect", new LuaCSFunction(GetViewRect));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("lookAt", new LuaCSFunction(get_lookAt), new LuaCSFunction(set_lookAt));
		L.RegVar("distanceMax", new LuaCSFunction(get_distanceMax), new LuaCSFunction(set_distanceMax));
		L.RegVar("angleMax", new LuaCSFunction(get_angleMax), new LuaCSFunction(set_angleMax));
		L.RegVar("beginSeason", new LuaCSFunction(get_beginSeason), new LuaCSFunction(set_beginSeason));
		L.RegVar("curDistance", new LuaCSFunction(get_curDistance), new LuaCSFunction(set_curDistance));
		L.RegVar("lookRotate", new LuaCSFunction(get_lookRotate), new LuaCSFunction(set_lookRotate));
		L.RegVar("changed", new LuaCSFunction(get_changed), new LuaCSFunction(set_changed));
		L.RegVar("OnClickCall", new LuaCSFunction(get_OnClickCall), new LuaCSFunction(set_OnClickCall));
		L.RegVar("zoomSpeed", new LuaCSFunction(get_zoomSpeed), new LuaCSFunction(set_zoomSpeed));
		L.RegVar("keyBoardMoveSpeed", new LuaCSFunction(get_keyBoardMoveSpeed), new LuaCSFunction(set_keyBoardMoveSpeed));
		L.RegVar("rotSpeed", new LuaCSFunction(get_rotSpeed), new LuaCSFunction(set_rotSpeed));
		L.RegVar("viewCamera", new LuaCSFunction(get_viewCamera), new LuaCSFunction(set_viewCamera));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MoveCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Sango.FreeCamera obj = (Sango.FreeCamera)ToLua.CheckObject<Sango.FreeCamera>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.MoveCamera(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ZoomCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.FreeCamera obj = (Sango.FreeCamera)ToLua.CheckObject<Sango.FreeCamera>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ZoomCamera(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OffsetCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.FreeCamera obj = (Sango.FreeCamera)ToLua.CheckObject<Sango.FreeCamera>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.OffsetCamera(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RotateCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.FreeCamera obj = (Sango.FreeCamera)ToLua.CheckObject<Sango.FreeCamera>(L, 1);
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.RotateCamera(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateCamera(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)ToLua.CheckObject<Sango.FreeCamera>(L, 1);
			obj.UpdateCamera();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetViewRect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			float arg1;
			float arg2;
			float arg3;
			float arg4;
			bool o = Sango.FreeCamera.GetViewRect(arg0, out arg1, out arg2, out arg3, out arg4);
			LuaDLL.lua_pushboolean(L, o);
			LuaDLL.lua_pushnumber(L, arg1);
			LuaDLL.lua_pushnumber(L, arg2);
			LuaDLL.lua_pushnumber(L, arg3);
			LuaDLL.lua_pushnumber(L, arg4);
			return 5;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lookAt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Transform ret = obj.lookAt;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lookAt on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_distanceMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Vector2 ret = obj.distanceMax;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index distanceMax on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_angleMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Vector2 ret = obj.angleMax;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index angleMax on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_beginSeason(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			int ret = obj.beginSeason;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index beginSeason on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_curDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float ret = obj.curDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index curDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lookRotate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Vector3 ret = obj.lookRotate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lookRotate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_changed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			bool ret = obj.changed;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index changed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnClickCall(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			LuaInterface.LuaFunction ret = obj.OnClickCall;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnClickCall on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_zoomSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float ret = obj.zoomSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zoomSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_keyBoardMoveSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float ret = obj.keyBoardMoveSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index keyBoardMoveSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rotSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float ret = obj.rotSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_viewCamera(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Sango.FreeCamera.viewCamera);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lookAt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.lookAt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lookAt on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_distanceMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.distanceMax = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index distanceMax on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_angleMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.angleMax = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index angleMax on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_beginSeason(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.beginSeason = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index beginSeason on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_curDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.curDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index curDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lookRotate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.lookRotate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lookRotate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_changed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.changed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index changed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnClickCall(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 2);
			obj.OnClickCall = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OnClickCall on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_zoomSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.zoomSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index zoomSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_keyBoardMoveSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.keyBoardMoveSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index keyBoardMoveSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_rotSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.FreeCamera obj = (Sango.FreeCamera)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.rotSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rotSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_viewCamera(IntPtr L)
	{
		try
		{
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckObject<UnityEngine.Camera>(L, 2);
			Sango.FreeCamera.viewCamera = arg0;
			Sango.FreeCamera.viewCamera = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

