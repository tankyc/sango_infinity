//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_PlatformWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("Platform");
		L.RegFunction("Init", new LuaCSFunction(Init));
		L.RegFunction("GetPlatformName", new LuaCSFunction(GetPlatformName));
		L.RegVar("targetPlatform", new LuaCSFunction(get_targetPlatform), new LuaCSFunction(set_targetPlatform));
		L.RegVar("JaveClassName", new LuaCSFunction(get_JaveClassName), new LuaCSFunction(set_JaveClassName));
		L.RegVar("JaveUtilityClassName", new LuaCSFunction(get_JaveUtilityClassName), new LuaCSFunction(set_JaveUtilityClassName));
		L.RegVar("ResourceVersion", new LuaCSFunction(get_ResourceVersion), new LuaCSFunction(set_ResourceVersion));
		L.RegVar("useJit", new LuaCSFunction(get_useJit), new LuaCSFunction(set_useJit));
		L.RegVar("isEditorMode", new LuaCSFunction(get_isEditorMode), null);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Sango.Platform.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPlatformName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			string o = Sango.Platform.GetPlatformName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_targetPlatform(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.Platform.targetPlatform);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JaveClassName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Sango.Platform.JaveClassName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_JaveUtilityClassName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Sango.Platform.JaveUtilityClassName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourceVersion(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Sango.Platform.ResourceVersion);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useJit(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Sango.Platform.useJit);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isEditorMode(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, Sango.Platform.isEditorMode);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_targetPlatform(IntPtr L)
	{
		try
		{
			Sango.Platform.PlatformName arg0 = (Sango.Platform.PlatformName)ToLua.CheckObject(L, 2, TypeTraits<Sango.Platform.PlatformName>.type);
			Sango.Platform.targetPlatform = arg0;
			Sango.Platform.targetPlatform = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_JaveClassName(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Sango.Platform.JaveClassName = arg0;
			Sango.Platform.JaveClassName = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_JaveUtilityClassName(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Sango.Platform.JaveUtilityClassName = arg0;
			Sango.Platform.JaveUtilityClassName = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResourceVersion(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Sango.Platform.ResourceVersion = arg0;
			Sango.Platform.ResourceVersion = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useJit(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			Sango.Platform.useJit = arg0;
			Sango.Platform.useJit = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

