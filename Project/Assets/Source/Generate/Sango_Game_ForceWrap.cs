//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Game_ForceWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Game.Force), typeof(Sango.Game.SangoObject));
		L.RegFunction("OnScenarioPrepare", new LuaCSFunction(OnScenarioPrepare));
		L.RegFunction("IsAlliance", new LuaCSFunction(IsAlliance));
		L.RegFunction("Run", new LuaCSFunction(Run));
		L.RegFunction("DoAI", new LuaCSFunction(DoAI));
		L.RegFunction("OnTurnStart", new LuaCSFunction(OnTurnStart));
		L.RegFunction("OnTurnEnd", new LuaCSFunction(OnTurnEnd));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Game_Force));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Governor", new LuaCSFunction(get_Governor), new LuaCSFunction(set_Governor));
		L.RegVar("Counsellor", new LuaCSFunction(get_Counsellor), new LuaCSFunction(set_Counsellor));
		L.RegVar("AllianceList", new LuaCSFunction(get_AllianceList), new LuaCSFunction(set_AllianceList));
		L.RegVar("Stroe", new LuaCSFunction(get_Stroe), new LuaCSFunction(set_Stroe));
		L.RegVar("allCorps", new LuaCSFunction(get_allCorps), new LuaCSFunction(set_allCorps));
		L.RegVar("allCities", new LuaCSFunction(get_allCities), new LuaCSFunction(set_allCities));
		L.RegVar("allPersons", new LuaCSFunction(get_allPersons), new LuaCSFunction(set_allPersons));
		L.RegVar("allBuildings", new LuaCSFunction(get_allBuildings), new LuaCSFunction(set_allBuildings));
		L.RegVar("allTroops", new LuaCSFunction(get_allTroops), new LuaCSFunction(set_allTroops));
		L.RegVar("AICommandList", new LuaCSFunction(get_AICommandList), new LuaCSFunction(set_AICommandList));
		L.RegVar("ObjectType", new LuaCSFunction(get_ObjectType), null);
		L.RegVar("AIFinished", new LuaCSFunction(get_AIFinished), new LuaCSFunction(set_AIFinished));
		L.RegVar("AIPrepared", new LuaCSFunction(get_AIPrepared), new LuaCSFunction(set_AIPrepared));
		L.RegVar("IsPlayer", new LuaCSFunction(get_IsPlayer), new LuaCSFunction(set_IsPlayer));
		L.RegVar("Name", new LuaCSFunction(get_Name), null);
		L.RegVar("Flag", new LuaCSFunction(get_Flag), new LuaCSFunction(set_Flag));
		L.RegVar("TechniquePoint", new LuaCSFunction(get_TechniquePoint), new LuaCSFunction(set_TechniquePoint));
		L.RegVar("PolicyType", new LuaCSFunction(get_PolicyType), new LuaCSFunction(set_PolicyType));
		L.RegVar("ResearchTechnique", new LuaCSFunction(get_ResearchTechnique), new LuaCSFunction(set_ResearchTechnique));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Game_Force(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Game.Force obj = new Sango.Game.Force();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Game.Force.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnScenarioPrepare(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			obj.OnScenarioPrepare(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsAlliance(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
				Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 2);
				bool o = obj.IsAlliance(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3)
			{
				Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
				Sango.Game.Force arg0 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 2);
				Sango.Game.Force arg1 = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 3);
				bool o = obj.IsAlliance(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Game.Force.IsAlliance");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Run(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.Run(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoAI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.DoAI(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTurnStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnTurnStart(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnTurnEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.Game.Force obj = (Sango.Game.Force)ToLua.CheckObject<Sango.Game.Force>(L, 1);
			Sango.Game.Scenario arg0 = (Sango.Game.Scenario)ToLua.CheckObject<Sango.Game.Scenario>(L, 2);
			bool o = obj.OnTurnEnd(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Governor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.Person ret = obj.Governor;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Governor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Counsellor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.Person ret = obj.Counsellor;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Counsellor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AllianceList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Alliance> ret = obj.AllianceList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllianceList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Stroe(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.ItemStore ret = obj.Stroe;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Stroe on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allCorps(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Corps> ret = obj.allCorps;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allCorps on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allCities(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.City> ret = obj.allCities;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allCities on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allPersons(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Person> ret = obj.allPersons;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allPersons on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allBuildings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Building> ret = obj.allBuildings;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allBuildings on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allTroops(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Troop> ret = obj.allTroops;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allTroops on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AICommandList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			System.Collections.Generic.List<System.Func<Sango.Game.Force,Sango.Game.Scenario,bool>> ret = obj.AICommandList;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AICommandList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ObjectType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectType ret = obj.ObjectType;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ObjectType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AIFinished(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			bool ret = obj.AIFinished;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AIFinished on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AIPrepared(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			bool ret = obj.AIPrepared;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AIPrepared on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			bool ret = obj.IsPlayer;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsPlayer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Name(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			string ret = obj.Name;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Name on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Flag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.Flag ret = obj.Flag;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Flag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TechniquePoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			int ret = obj.TechniquePoint;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TechniquePoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PolicyType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			int ret = obj.PolicyType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PolicyType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResearchTechnique(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			int ret = obj.ResearchTechnique;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ResearchTechnique on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Governor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.Person arg0 = (Sango.Game.Person)ToLua.CheckObject<Sango.Game.Person>(L, 2);
			obj.Governor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Governor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Counsellor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.Person arg0 = (Sango.Game.Person)ToLua.CheckObject<Sango.Game.Person>(L, 2);
			obj.Counsellor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Counsellor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AllianceList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Alliance> arg0 = (Sango.Game.SangoObjectList<Sango.Game.Alliance>)ToLua.CheckObject<Sango.Game.SangoObjectList<Sango.Game.Alliance>>(L, 2);
			obj.AllianceList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AllianceList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Stroe(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.ItemStore arg0 = (Sango.Game.ItemStore)ToLua.CheckObject<Sango.Game.ItemStore>(L, 2);
			obj.Stroe = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Stroe on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allCorps(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Corps> arg0 = (Sango.Game.SangoObjectList<Sango.Game.Corps>)ToLua.CheckObject<Sango.Game.SangoObjectList<Sango.Game.Corps>>(L, 2);
			obj.allCorps = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allCorps on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allCities(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.City> arg0 = (Sango.Game.SangoObjectList<Sango.Game.City>)ToLua.CheckObject<Sango.Game.SangoObjectList<Sango.Game.City>>(L, 2);
			obj.allCities = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allCities on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allPersons(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Person> arg0 = (Sango.Game.SangoObjectList<Sango.Game.Person>)ToLua.CheckObject<Sango.Game.SangoObjectList<Sango.Game.Person>>(L, 2);
			obj.allPersons = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allPersons on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allBuildings(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Building> arg0 = (Sango.Game.SangoObjectList<Sango.Game.Building>)ToLua.CheckObject<Sango.Game.SangoObjectList<Sango.Game.Building>>(L, 2);
			obj.allBuildings = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allBuildings on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allTroops(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.SangoObjectList<Sango.Game.Troop> arg0 = (Sango.Game.SangoObjectList<Sango.Game.Troop>)ToLua.CheckObject<Sango.Game.SangoObjectList<Sango.Game.Troop>>(L, 2);
			obj.allTroops = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allTroops on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AICommandList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			System.Collections.Generic.List<System.Func<Sango.Game.Force,Sango.Game.Scenario,bool>> arg0 = (System.Collections.Generic.List<System.Func<Sango.Game.Force,Sango.Game.Scenario,bool>>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<System.Func<Sango.Game.Force,Sango.Game.Scenario,bool>>>.type);
			obj.AICommandList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AICommandList on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AIFinished(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AIFinished = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AIFinished on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AIPrepared(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AIPrepared = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AIPrepared on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsPlayer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsPlayer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Flag(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			Sango.Game.Flag arg0 = (Sango.Game.Flag)ToLua.CheckObject<Sango.Game.Flag>(L, 2);
			obj.Flag = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Flag on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_TechniquePoint(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.TechniquePoint = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index TechniquePoint on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PolicyType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.PolicyType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PolicyType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ResearchTechnique(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.Game.Force obj = (Sango.Game.Force)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.ResearchTechnique = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ResearchTechnique on a nil value");
		}
	}
}

