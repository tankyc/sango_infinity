//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_TroopsRenderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.TroopsRender), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetShowCount", new LuaCSFunction(SetShowCount));
		L.RegFunction("SetShowPercent", new LuaCSFunction(SetShowPercent));
		L.RegFunction("SetMat", new LuaCSFunction(SetMat));
		L.RegFunction("SetMeshScale", new LuaCSFunction(SetMeshScale));
		L.RegFunction("SetSize", new LuaCSFunction(SetSize));
		L.RegFunction("UpdateHexPosition", new LuaCSFunction(UpdateHexPosition));
		L.RegFunction("UpdateTroopsPosition", new LuaCSFunction(UpdateTroopsPosition));
		L.RegFunction("SetMainTexture", new LuaCSFunction(SetMainTexture));
		L.RegFunction("SetMaskTexture", new LuaCSFunction(SetMaskTexture));
		L.RegFunction("SetAlpha", new LuaCSFunction(SetAlpha));
		L.RegFunction("SetMaskColor", new LuaCSFunction(SetMaskColor));
		L.RegFunction("SetGrid", new LuaCSFunction(SetGrid));
		L.RegFunction("SetSpeed", new LuaCSFunction(SetSpeed));
		L.RegFunction("SetAniData", new LuaCSFunction(SetAniData));
		L.RegFunction("SetForword", new LuaCSFunction(SetForword));
		L.RegFunction("SetSmokeShow", new LuaCSFunction(SetSmokeShow));
		L.RegFunction("HexToPosition", new LuaCSFunction(HexToPosition));
		L.RegFunction("GetTargetHex", new LuaCSFunction(GetTargetHex));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("offset", new LuaCSFunction(get_offset), new LuaCSFunction(set_offset));
		L.RegVar("uvs", new LuaCSFunction(get_uvs), new LuaCSFunction(set_uvs));
		L.RegVar("tangents", new LuaCSFunction(get_tangents), new LuaCSFunction(set_tangents));
		L.RegVar("material", new LuaCSFunction(get_material), new LuaCSFunction(set_material));
		L.RegVar("showCount", new LuaCSFunction(get_showCount), new LuaCSFunction(set_showCount));
		L.RegVar("smoke", new LuaCSFunction(get_smoke), new LuaCSFunction(set_smoke));
		L.RegVar("size", new LuaCSFunction(get_size), new LuaCSFunction(set_size));
		L.RegVar("origin", new LuaCSFunction(get_origin), new LuaCSFunction(set_origin));
		L.RegVar("initTroop", new LuaCSFunction(get_initTroop), new LuaCSFunction(set_initTroop));
		L.RegVar("mainTroop", new LuaCSFunction(get_mainTroop), new LuaCSFunction(set_mainTroop));
		L.RegVar("test", new LuaCSFunction(get_test), new LuaCSFunction(set_test));
		L.RegVar("testCount", new LuaCSFunction(get_testCount), new LuaCSFunction(set_testCount));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetShowCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.SetShowCount(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetShowPercent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetShowPercent(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.SetMat(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMeshScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetMeshScale(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.SetSize(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateHexPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			obj.UpdateHexPosition();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateTroopsPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			obj.UpdateTroopsPosition();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMainTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
			obj.SetMainTexture(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaskTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
			obj.SetMaskTexture(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAlpha(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetAlpha(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaskColor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.SetMaskColor(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGrid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			int arg1 = (int)LuaDLL.luaL_checkinteger(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			obj.SetGrid(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetSpeed(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetAniData(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 8);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Texture arg0 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 2);
			UnityEngine.Texture arg1 = (UnityEngine.Texture)ToLua.CheckObject<UnityEngine.Texture>(L, 3);
			int arg2 = (int)LuaDLL.luaL_checkinteger(L, 4);
			int arg3 = (int)LuaDLL.luaL_checkinteger(L, 5);
			int arg4 = (int)LuaDLL.luaL_checkinteger(L, 6);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 7);
			float arg6 = (float)LuaDLL.luaL_checknumber(L, 8);
			obj.SetAniData(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetForword(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.SetForword(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSmokeShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetSmokeShow(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HexToPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
			Sango.Hexagon.Hex arg0 = StackTraits<Sango.Hexagon.Hex>.Check(L, 2);
			UnityEngine.Vector3 o = obj.HexToPosition(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetTargetHex(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
				Sango.Hexagon.Hex o = obj.GetTargetHex(arg0);
				ToLua.PushValue(L, o);
				return 1;
			}
			else if (count == 3)
			{
				Sango.TroopsRender obj = (Sango.TroopsRender)ToLua.CheckObject<Sango.TroopsRender>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
				System.Collections.Generic.List<Sango.Hexagon.Hex> arg1 = (System.Collections.Generic.List<Sango.Hexagon.Hex>)ToLua.CheckObject(L, 3, TypeTraits<System.Collections.Generic.List<Sango.Hexagon.Hex>>.type);
				obj.GetTargetHex(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.TroopsRender.GetTargetHex");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_offset(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.TroopsRender.offset);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uvs(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.TroopsRender.uvs);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_tangents(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.TroopsRender.tangents);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Material ret = obj.material;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			int ret = obj.showCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_smoke(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.ParticleSystem ret = obj.smoke;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index smoke on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Vector2 ret = obj.size;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_origin(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Vector2 ret = obj.origin;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index origin on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_initTroop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Renderer ret = obj.initTroop;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index initTroop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mainTroop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.SpriteRenderer ret = obj.mainTroop;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mainTroop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_test(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			bool ret = obj.test;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index test on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_testCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			int ret = obj.testCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index testCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_offset(IntPtr L)
	{
		try
		{
			UnityEngine.Vector3[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector3>(L, 2);
			Sango.TroopsRender.offset = arg0;
			Sango.TroopsRender.offset = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uvs(IntPtr L)
	{
		try
		{
			UnityEngine.Vector2[] arg0 = ToLua.CheckStructArray<UnityEngine.Vector2>(L, 2);
			Sango.TroopsRender.uvs = arg0;
			Sango.TroopsRender.uvs = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_tangents(IntPtr L)
	{
		try
		{
			int[] arg0 = ToLua.CheckNumberArray<int>(L, 2);
			Sango.TroopsRender.tangents = arg0;
			Sango.TroopsRender.tangents = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.material = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.showCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index showCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_smoke(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.ParticleSystem arg0 = (UnityEngine.ParticleSystem)ToLua.CheckObject<UnityEngine.ParticleSystem>(L, 2);
			obj.smoke = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index smoke on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_size(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.size = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index size on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_origin(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.origin = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index origin on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_initTroop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.Renderer arg0 = (UnityEngine.Renderer)ToLua.CheckObject<UnityEngine.Renderer>(L, 2);
			obj.initTroop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index initTroop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mainTroop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			UnityEngine.SpriteRenderer arg0 = (UnityEngine.SpriteRenderer)ToLua.CheckObject<UnityEngine.SpriteRenderer>(L, 2);
			obj.mainTroop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index mainTroop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_test(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.test = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index test on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_testCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Sango.TroopsRender obj = (Sango.TroopsRender)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.testCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index testCount on a nil value");
		}
	}
}

