//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public class DelegateFactory
{
	public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);
	public static Dictionary<Type, DelegateCreate> dict = new Dictionary<Type, DelegateCreate>();
	static DelegateFactory factory = new DelegateFactory();

	public static void Init()
	{
		Register();
	}

	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), factory.System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), factory.UnityEngine_Events_UnityAction);
		dict.Add(typeof(System.Predicate<int>), factory.System_Predicate_int);
		dict.Add(typeof(System.Action<int>), factory.System_Action_int);
		dict.Add(typeof(System.Comparison<int>), factory.System_Comparison_int);
		dict.Add(typeof(System.Func<int,int>), factory.System_Func_int_int);
		dict.Add(typeof(DG.Tweening.TweenCallback), factory.DG_Tweening_TweenCallback);
		dict.Add(typeof(UnityEngine.GUI.WindowFunction), factory.UnityEngine_GUI_WindowFunction);
		dict.Add(typeof(UnityEngine.Application.AdvertisingIdentifierCallback), factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		dict.Add(typeof(UnityEngine.Application.LowMemoryCallback), factory.UnityEngine_Application_LowMemoryCallback);
		dict.Add(typeof(UnityEngine.Application.LogCallback), factory.UnityEngine_Application_LogCallback);
		dict.Add(typeof(System.Action<bool>), factory.System_Action_bool);
		dict.Add(typeof(System.Action<string>), factory.System_Action_string);
		dict.Add(typeof(System.Func<bool>), factory.System_Func_bool);
		dict.Add(typeof(System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>), factory.System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		dict.Add(typeof(System.Action<UnityEngine.AsyncOperation>), factory.System_Action_UnityEngine_AsyncOperation);
		dict.Add(typeof(UnityEngine.AudioClip.PCMReaderCallback), factory.UnityEngine_AudioClip_PCMReaderCallback);
		dict.Add(typeof(UnityEngine.AudioClip.PCMSetPositionCallback), factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		dict.Add(typeof(System.AsyncCallback), factory.System_AsyncCallback);
		dict.Add(typeof(System.Predicate<string>), factory.System_Predicate_string);
		dict.Add(typeof(System.Comparison<string>), factory.System_Comparison_string);
		dict.Add(typeof(UnityEngine.Camera.CameraCallback), factory.UnityEngine_Camera_CameraCallback);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>), factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>), factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>), factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		dict.Add(typeof(UnityEngine.RectTransform.ReapplyDrivenProperties), factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		dict.Add(typeof(System.Action<UnityEngine.Playables.PlayableDirector>), factory.System_Action_UnityEngine_Playables_PlayableDirector);
		dict.Add(typeof(UnityEngine.Events.UnityAction<float>), factory.UnityEngine_Events_UnityAction_float);
		dict.Add(typeof(UnityEngine.Canvas.WillRenderCanvases), factory.UnityEngine_Canvas_WillRenderCanvases);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<float>), factory.DG_Tweening_Core_DOGetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<float>), factory.DG_Tweening_Core_DOSetter_float);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<double>), factory.DG_Tweening_Core_DOGetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<double>), factory.DG_Tweening_Core_DOSetter_double);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<int>), factory.DG_Tweening_Core_DOGetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<int>), factory.DG_Tweening_Core_DOSetter_int);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<uint>), factory.DG_Tweening_Core_DOGetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<uint>), factory.DG_Tweening_Core_DOSetter_uint);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<long>), factory.DG_Tweening_Core_DOGetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<long>), factory.DG_Tweening_Core_DOSetter_long);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<ulong>), factory.DG_Tweening_Core_DOGetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<ulong>), factory.DG_Tweening_Core_DOSetter_ulong);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<string>), factory.DG_Tweening_Core_DOGetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<string>), factory.DG_Tweening_Core_DOSetter_string);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector2>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector3>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Vector4>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Color>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.Rect>), factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		dict.Add(typeof(DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		dict.Add(typeof(DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>), factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		dict.Add(typeof(Sango.PlatformListener.PlatformCall), factory.Sango_PlatformListener_PlatformCall);
		dict.Add(typeof(Sango.AssetBundleManager.AsyncCreateFinishCall), factory.Sango_AssetBundleManager_AsyncCreateFinishCall);
		dict.Add(typeof(Sango.AssetBundleManager.AsyncLoadAssetFinishCall), factory.Sango_AssetBundleManager_AsyncLoadAssetFinishCall);
		dict.Add(typeof(Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall), factory.Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall);
		dict.Add(typeof(Sango.Loader.ObjectLoader.OnObjectLoaded), factory.Sango_Loader_ObjectLoader_OnObjectLoaded);
		dict.Add(typeof(Sango.Render.MapObject.ModelLoadedCallback), factory.Sango_Render_MapObject_ModelLoadedCallback);
		dict.Add(typeof(Sango.Tools.EditorWindow.WindowFunction), factory.Sango_Tools_EditorWindow_WindowFunction);
		dict.Add(typeof(UnityEngine.Events.UnityAction<UnityEngine.Color>), factory.UnityEngine_Events_UnityAction_UnityEngine_Color);
		dict.Add(typeof(System.Action<string,UnityEngine.Object,object>), factory.System_Action_string_UnityEngine_Object_object);
		dict.Add(typeof(Sango.EventBase.EventDelegate<int,int>), factory.Sango_EventBase_EventDelegate_int_int);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.Scenario>), factory.Sango_EventBase_EventDelegate_Sango_Game_Scenario);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>), factory.Sango_EventBase_EventDelegate_Sango_Game_Scenario_float);
		dict.Add(typeof(Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>), factory.Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface);
		dict.Add(typeof(Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>), factory.Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas);
		dict.Add(typeof(System.Action<Sango.Game.City>), factory.System_Action_Sango_Game_City);
		dict.Add(typeof(System.Action<Sango.Game.Person>), factory.System_Action_Sango_Game_Person);
		dict.Add(typeof(System.Action<Sango.Game.Corps>), factory.System_Action_Sango_Game_Corps);
		dict.Add(typeof(System.Action<Sango.Game.Building>), factory.System_Action_Sango_Game_Building);
		dict.Add(typeof(System.Action<Sango.Game.Troop>), factory.System_Action_Sango_Game_Troop);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario>), factory.Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario>), factory.Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario>), factory.Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario>), factory.Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario);
		dict.Add(typeof(Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell>), factory.Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell);

		DelegateTraits<System.Action>.Init(factory.System_Action);
		DelegateTraits<UnityEngine.Events.UnityAction>.Init(factory.UnityEngine_Events_UnityAction);
		DelegateTraits<System.Predicate<int>>.Init(factory.System_Predicate_int);
		DelegateTraits<System.Action<int>>.Init(factory.System_Action_int);
		DelegateTraits<System.Comparison<int>>.Init(factory.System_Comparison_int);
		DelegateTraits<System.Func<int,int>>.Init(factory.System_Func_int_int);
		DelegateTraits<DG.Tweening.TweenCallback>.Init(factory.DG_Tweening_TweenCallback);
		DelegateTraits<UnityEngine.GUI.WindowFunction>.Init(factory.UnityEngine_GUI_WindowFunction);
		DelegateTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.UnityEngine_Application_AdvertisingIdentifierCallback);
		DelegateTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.UnityEngine_Application_LowMemoryCallback);
		DelegateTraits<UnityEngine.Application.LogCallback>.Init(factory.UnityEngine_Application_LogCallback);
		DelegateTraits<System.Action<bool>>.Init(factory.System_Action_bool);
		DelegateTraits<System.Action<string>>.Init(factory.System_Action_string);
		DelegateTraits<System.Func<bool>>.Init(factory.System_Func_bool);
		DelegateTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Init(factory.System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		DelegateTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.System_Action_UnityEngine_AsyncOperation);
		DelegateTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.UnityEngine_AudioClip_PCMReaderCallback);
		DelegateTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.UnityEngine_AudioClip_PCMSetPositionCallback);
		DelegateTraits<System.AsyncCallback>.Init(factory.System_AsyncCallback);
		DelegateTraits<System.Predicate<string>>.Init(factory.System_Predicate_string);
		DelegateTraits<System.Comparison<string>>.Init(factory.System_Comparison_string);
		DelegateTraits<UnityEngine.Camera.CameraCallback>.Init(factory.UnityEngine_Camera_CameraCallback);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		DelegateTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.UnityEngine_RectTransform_ReapplyDrivenProperties);
		DelegateTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Init(factory.System_Action_UnityEngine_Playables_PlayableDirector);
		DelegateTraits<UnityEngine.Events.UnityAction<float>>.Init(factory.UnityEngine_Events_UnityAction_float);
		DelegateTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(factory.UnityEngine_Canvas_WillRenderCanvases);
		DelegateTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.DG_Tweening_Core_DOGetter_float);
		DelegateTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.DG_Tweening_Core_DOSetter_float);
		DelegateTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.DG_Tweening_Core_DOGetter_double);
		DelegateTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.DG_Tweening_Core_DOSetter_double);
		DelegateTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.DG_Tweening_Core_DOGetter_int);
		DelegateTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.DG_Tweening_Core_DOSetter_int);
		DelegateTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.DG_Tweening_Core_DOGetter_uint);
		DelegateTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.DG_Tweening_Core_DOSetter_uint);
		DelegateTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.DG_Tweening_Core_DOGetter_long);
		DelegateTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.DG_Tweening_Core_DOSetter_long);
		DelegateTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.DG_Tweening_Core_DOGetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.DG_Tweening_Core_DOSetter_ulong);
		DelegateTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.DG_Tweening_Core_DOGetter_string);
		DelegateTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.DG_Tweening_Core_DOSetter_string);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Color);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		DelegateTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		DelegateTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		DelegateTraits<Sango.PlatformListener.PlatformCall>.Init(factory.Sango_PlatformListener_PlatformCall);
		DelegateTraits<Sango.AssetBundleManager.AsyncCreateFinishCall>.Init(factory.Sango_AssetBundleManager_AsyncCreateFinishCall);
		DelegateTraits<Sango.AssetBundleManager.AsyncLoadAssetFinishCall>.Init(factory.Sango_AssetBundleManager_AsyncLoadAssetFinishCall);
		DelegateTraits<Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall>.Init(factory.Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall);
		DelegateTraits<Sango.Loader.ObjectLoader.OnObjectLoaded>.Init(factory.Sango_Loader_ObjectLoader_OnObjectLoaded);
		DelegateTraits<Sango.Render.MapObject.ModelLoadedCallback>.Init(factory.Sango_Render_MapObject_ModelLoadedCallback);
		DelegateTraits<Sango.Tools.EditorWindow.WindowFunction>.Init(factory.Sango_Tools_EditorWindow_WindowFunction);
		DelegateTraits<UnityEngine.Events.UnityAction<UnityEngine.Color>>.Init(factory.UnityEngine_Events_UnityAction_UnityEngine_Color);
		DelegateTraits<System.Action<string,UnityEngine.Object,object>>.Init(factory.System_Action_string_UnityEngine_Object_object);
		DelegateTraits<Sango.EventBase.EventDelegate<int,int>>.Init(factory.Sango_EventBase_EventDelegate_int_int);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_Scenario);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_Scenario_float);
		DelegateTraits<Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>>.Init(factory.Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface);
		DelegateTraits<Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>>.Init(factory.Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas);
		DelegateTraits<System.Action<Sango.Game.City>>.Init(factory.System_Action_Sango_Game_City);
		DelegateTraits<System.Action<Sango.Game.Person>>.Init(factory.System_Action_Sango_Game_Person);
		DelegateTraits<System.Action<Sango.Game.Corps>>.Init(factory.System_Action_Sango_Game_Corps);
		DelegateTraits<System.Action<Sango.Game.Building>>.Init(factory.System_Action_Sango_Game_Building);
		DelegateTraits<System.Action<Sango.Game.Troop>>.Init(factory.System_Action_Sango_Game_Troop);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario);
		DelegateTraits<Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell>>.Init(factory.Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell);

		TypeTraits<System.Action>.Init(factory.Check_System_Action);
		TypeTraits<UnityEngine.Events.UnityAction>.Init(factory.Check_UnityEngine_Events_UnityAction);
		TypeTraits<System.Predicate<int>>.Init(factory.Check_System_Predicate_int);
		TypeTraits<System.Action<int>>.Init(factory.Check_System_Action_int);
		TypeTraits<System.Comparison<int>>.Init(factory.Check_System_Comparison_int);
		TypeTraits<System.Func<int,int>>.Init(factory.Check_System_Func_int_int);
		TypeTraits<DG.Tweening.TweenCallback>.Init(factory.Check_DG_Tweening_TweenCallback);
		TypeTraits<UnityEngine.GUI.WindowFunction>.Init(factory.Check_UnityEngine_GUI_WindowFunction);
		TypeTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Init(factory.Check_UnityEngine_Application_AdvertisingIdentifierCallback);
		TypeTraits<UnityEngine.Application.LowMemoryCallback>.Init(factory.Check_UnityEngine_Application_LowMemoryCallback);
		TypeTraits<UnityEngine.Application.LogCallback>.Init(factory.Check_UnityEngine_Application_LogCallback);
		TypeTraits<System.Action<bool>>.Init(factory.Check_System_Action_bool);
		TypeTraits<System.Action<string>>.Init(factory.Check_System_Action_string);
		TypeTraits<System.Func<bool>>.Init(factory.Check_System_Func_bool);
		TypeTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Init(factory.Check_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair);
		TypeTraits<System.Action<UnityEngine.AsyncOperation>>.Init(factory.Check_System_Action_UnityEngine_AsyncOperation);
		TypeTraits<UnityEngine.AudioClip.PCMReaderCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMReaderCallback);
		TypeTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Init(factory.Check_UnityEngine_AudioClip_PCMSetPositionCallback);
		TypeTraits<System.AsyncCallback>.Init(factory.Check_System_AsyncCallback);
		TypeTraits<System.Predicate<string>>.Init(factory.Check_System_Predicate_string);
		TypeTraits<System.Comparison<string>>.Init(factory.Check_System_Comparison_string);
		TypeTraits<UnityEngine.Camera.CameraCallback>.Init(factory.Check_UnityEngine_Camera_CameraCallback);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene);
		TypeTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Init(factory.Check_UnityEngine_RectTransform_ReapplyDrivenProperties);
		TypeTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Init(factory.Check_System_Action_UnityEngine_Playables_PlayableDirector);
		TypeTraits<UnityEngine.Events.UnityAction<float>>.Init(factory.Check_UnityEngine_Events_UnityAction_float);
		TypeTraits<UnityEngine.Canvas.WillRenderCanvases>.Init(factory.Check_UnityEngine_Canvas_WillRenderCanvases);
		TypeTraits<DG.Tweening.Core.DOGetter<float>>.Init(factory.Check_DG_Tweening_Core_DOGetter_float);
		TypeTraits<DG.Tweening.Core.DOSetter<float>>.Init(factory.Check_DG_Tweening_Core_DOSetter_float);
		TypeTraits<DG.Tweening.Core.DOGetter<double>>.Init(factory.Check_DG_Tweening_Core_DOGetter_double);
		TypeTraits<DG.Tweening.Core.DOSetter<double>>.Init(factory.Check_DG_Tweening_Core_DOSetter_double);
		TypeTraits<DG.Tweening.Core.DOGetter<int>>.Init(factory.Check_DG_Tweening_Core_DOGetter_int);
		TypeTraits<DG.Tweening.Core.DOSetter<int>>.Init(factory.Check_DG_Tweening_Core_DOSetter_int);
		TypeTraits<DG.Tweening.Core.DOGetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOGetter_uint);
		TypeTraits<DG.Tweening.Core.DOSetter<uint>>.Init(factory.Check_DG_Tweening_Core_DOSetter_uint);
		TypeTraits<DG.Tweening.Core.DOGetter<long>>.Init(factory.Check_DG_Tweening_Core_DOGetter_long);
		TypeTraits<DG.Tweening.Core.DOSetter<long>>.Init(factory.Check_DG_Tweening_Core_DOSetter_long);
		TypeTraits<DG.Tweening.Core.DOGetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOGetter_ulong);
		TypeTraits<DG.Tweening.Core.DOSetter<ulong>>.Init(factory.Check_DG_Tweening_Core_DOSetter_ulong);
		TypeTraits<DG.Tweening.Core.DOGetter<string>>.Init(factory.Check_DG_Tweening_Core_DOGetter_string);
		TypeTraits<DG.Tweening.Core.DOSetter<string>>.Init(factory.Check_DG_Tweening_Core_DOSetter_string);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Color);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect);
		TypeTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset);
		TypeTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Init(factory.Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset);
		TypeTraits<Sango.PlatformListener.PlatformCall>.Init(factory.Check_Sango_PlatformListener_PlatformCall);
		TypeTraits<Sango.AssetBundleManager.AsyncCreateFinishCall>.Init(factory.Check_Sango_AssetBundleManager_AsyncCreateFinishCall);
		TypeTraits<Sango.AssetBundleManager.AsyncLoadAssetFinishCall>.Init(factory.Check_Sango_AssetBundleManager_AsyncLoadAssetFinishCall);
		TypeTraits<Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall>.Init(factory.Check_Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall);
		TypeTraits<Sango.Loader.ObjectLoader.OnObjectLoaded>.Init(factory.Check_Sango_Loader_ObjectLoader_OnObjectLoaded);
		TypeTraits<Sango.Render.MapObject.ModelLoadedCallback>.Init(factory.Check_Sango_Render_MapObject_ModelLoadedCallback);
		TypeTraits<Sango.Tools.EditorWindow.WindowFunction>.Init(factory.Check_Sango_Tools_EditorWindow_WindowFunction);
		TypeTraits<UnityEngine.Events.UnityAction<UnityEngine.Color>>.Init(factory.Check_UnityEngine_Events_UnityAction_UnityEngine_Color);
		TypeTraits<System.Action<string,UnityEngine.Object,object>>.Init(factory.Check_System_Action_string_UnityEngine_Object_object);
		TypeTraits<Sango.EventBase.EventDelegate<int,int>>.Init(factory.Check_Sango_EventBase_EventDelegate_int_int);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_Scenario);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_Scenario_float);
		TypeTraits<Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>>.Init(factory.Check_Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface);
		TypeTraits<Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>>.Init(factory.Check_Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas);
		TypeTraits<System.Action<Sango.Game.City>>.Init(factory.Check_System_Action_Sango_Game_City);
		TypeTraits<System.Action<Sango.Game.Person>>.Init(factory.Check_System_Action_Sango_Game_Person);
		TypeTraits<System.Action<Sango.Game.Corps>>.Init(factory.Check_System_Action_Sango_Game_Corps);
		TypeTraits<System.Action<Sango.Game.Building>>.Init(factory.Check_System_Action_Sango_Game_Building);
		TypeTraits<System.Action<Sango.Game.Troop>>.Init(factory.Check_System_Action_Sango_Game_Troop);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario);
		TypeTraits<Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell>>.Init(factory.Check_Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell);

		StackTraits<System.Action>.Push = factory.Push_System_Action;
		StackTraits<UnityEngine.Events.UnityAction>.Push = factory.Push_UnityEngine_Events_UnityAction;
		StackTraits<System.Predicate<int>>.Push = factory.Push_System_Predicate_int;
		StackTraits<System.Action<int>>.Push = factory.Push_System_Action_int;
		StackTraits<System.Comparison<int>>.Push = factory.Push_System_Comparison_int;
		StackTraits<System.Func<int,int>>.Push = factory.Push_System_Func_int_int;
		StackTraits<DG.Tweening.TweenCallback>.Push = factory.Push_DG_Tweening_TweenCallback;
		StackTraits<UnityEngine.GUI.WindowFunction>.Push = factory.Push_UnityEngine_GUI_WindowFunction;
		StackTraits<UnityEngine.Application.AdvertisingIdentifierCallback>.Push = factory.Push_UnityEngine_Application_AdvertisingIdentifierCallback;
		StackTraits<UnityEngine.Application.LowMemoryCallback>.Push = factory.Push_UnityEngine_Application_LowMemoryCallback;
		StackTraits<UnityEngine.Application.LogCallback>.Push = factory.Push_UnityEngine_Application_LogCallback;
		StackTraits<System.Action<bool>>.Push = factory.Push_System_Action_bool;
		StackTraits<System.Action<string>>.Push = factory.Push_System_Action_string;
		StackTraits<System.Func<bool>>.Push = factory.Push_System_Func_bool;
		StackTraits<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>.Push = factory.Push_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair;
		StackTraits<System.Action<UnityEngine.AsyncOperation>>.Push = factory.Push_System_Action_UnityEngine_AsyncOperation;
		StackTraits<UnityEngine.AudioClip.PCMReaderCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMReaderCallback;
		StackTraits<UnityEngine.AudioClip.PCMSetPositionCallback>.Push = factory.Push_UnityEngine_AudioClip_PCMSetPositionCallback;
		StackTraits<System.AsyncCallback>.Push = factory.Push_System_AsyncCallback;
		StackTraits<System.Predicate<string>>.Push = factory.Push_System_Predicate_string;
		StackTraits<System.Comparison<string>>.Push = factory.Push_System_Comparison_string;
		StackTraits<UnityEngine.Camera.CameraCallback>.Push = factory.Push_UnityEngine_Camera_CameraCallback;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene;
		StackTraits<UnityEngine.RectTransform.ReapplyDrivenProperties>.Push = factory.Push_UnityEngine_RectTransform_ReapplyDrivenProperties;
		StackTraits<System.Action<UnityEngine.Playables.PlayableDirector>>.Push = factory.Push_System_Action_UnityEngine_Playables_PlayableDirector;
		StackTraits<UnityEngine.Events.UnityAction<float>>.Push = factory.Push_UnityEngine_Events_UnityAction_float;
		StackTraits<UnityEngine.Canvas.WillRenderCanvases>.Push = factory.Push_UnityEngine_Canvas_WillRenderCanvases;
		StackTraits<DG.Tweening.Core.DOGetter<float>>.Push = factory.Push_DG_Tweening_Core_DOGetter_float;
		StackTraits<DG.Tweening.Core.DOSetter<float>>.Push = factory.Push_DG_Tweening_Core_DOSetter_float;
		StackTraits<DG.Tweening.Core.DOGetter<double>>.Push = factory.Push_DG_Tweening_Core_DOGetter_double;
		StackTraits<DG.Tweening.Core.DOSetter<double>>.Push = factory.Push_DG_Tweening_Core_DOSetter_double;
		StackTraits<DG.Tweening.Core.DOGetter<int>>.Push = factory.Push_DG_Tweening_Core_DOGetter_int;
		StackTraits<DG.Tweening.Core.DOSetter<int>>.Push = factory.Push_DG_Tweening_Core_DOSetter_int;
		StackTraits<DG.Tweening.Core.DOGetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOGetter_uint;
		StackTraits<DG.Tweening.Core.DOSetter<uint>>.Push = factory.Push_DG_Tweening_Core_DOSetter_uint;
		StackTraits<DG.Tweening.Core.DOGetter<long>>.Push = factory.Push_DG_Tweening_Core_DOGetter_long;
		StackTraits<DG.Tweening.Core.DOSetter<long>>.Push = factory.Push_DG_Tweening_Core_DOSetter_long;
		StackTraits<DG.Tweening.Core.DOGetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOGetter_ulong;
		StackTraits<DG.Tweening.Core.DOSetter<ulong>>.Push = factory.Push_DG_Tweening_Core_DOSetter_ulong;
		StackTraits<DG.Tweening.Core.DOGetter<string>>.Push = factory.Push_DG_Tweening_Core_DOGetter_string;
		StackTraits<DG.Tweening.Core.DOSetter<string>>.Push = factory.Push_DG_Tweening_Core_DOSetter_string;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Color>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Color;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect;
		StackTraits<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset;
		StackTraits<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>.Push = factory.Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset;
		StackTraits<Sango.PlatformListener.PlatformCall>.Push = factory.Push_Sango_PlatformListener_PlatformCall;
		StackTraits<Sango.AssetBundleManager.AsyncCreateFinishCall>.Push = factory.Push_Sango_AssetBundleManager_AsyncCreateFinishCall;
		StackTraits<Sango.AssetBundleManager.AsyncLoadAssetFinishCall>.Push = factory.Push_Sango_AssetBundleManager_AsyncLoadAssetFinishCall;
		StackTraits<Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall>.Push = factory.Push_Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall;
		StackTraits<Sango.Loader.ObjectLoader.OnObjectLoaded>.Push = factory.Push_Sango_Loader_ObjectLoader_OnObjectLoaded;
		StackTraits<Sango.Render.MapObject.ModelLoadedCallback>.Push = factory.Push_Sango_Render_MapObject_ModelLoadedCallback;
		StackTraits<Sango.Tools.EditorWindow.WindowFunction>.Push = factory.Push_Sango_Tools_EditorWindow_WindowFunction;
		StackTraits<UnityEngine.Events.UnityAction<UnityEngine.Color>>.Push = factory.Push_UnityEngine_Events_UnityAction_UnityEngine_Color;
		StackTraits<System.Action<string,UnityEngine.Object,object>>.Push = factory.Push_System_Action_string_UnityEngine_Object_object;
		StackTraits<Sango.EventBase.EventDelegate<int,int>>.Push = factory.Push_Sango_EventBase_EventDelegate_int_int;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_Scenario;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_Scenario_float;
		StackTraits<Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>>.Push = factory.Push_Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface;
		StackTraits<Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>>.Push = factory.Push_Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas;
		StackTraits<System.Action<Sango.Game.City>>.Push = factory.Push_System_Action_Sango_Game_City;
		StackTraits<System.Action<Sango.Game.Person>>.Push = factory.Push_System_Action_Sango_Game_Person;
		StackTraits<System.Action<Sango.Game.Corps>>.Push = factory.Push_System_Action_Sango_Game_Corps;
		StackTraits<System.Action<Sango.Game.Building>>.Push = factory.Push_System_Action_Sango_Game_Building;
		StackTraits<System.Action<Sango.Game.Troop>>.Push = factory.Push_System_Action_Sango_Game_Troop;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario;
		StackTraits<Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell>>.Push = factory.Push_Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell;
	}
    
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func);
            
            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }  
            else
            {
                Delegate d = Create(func, null, false);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func);
                return d;
            }       
        }

        return Create(null, null, false);        
    }
    
    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        DelegateCreate Create = null;

        if (!dict.TryGetValue(t, out Create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));
        }

        if (func != null)
        {
            LuaState state = func.GetLuaState();
            LuaDelegate target = state.GetLuaDelegate(func, self);

            if (target != null)
            {
                return Delegate.CreateDelegate(t, target, target.method);
            }
            else
            {
                Delegate d = Create(func, self, true);
                target = d.Target as LuaDelegate;
                state.AddLuaDelegate(target, func, self);
                return d;
            }
        }

        return Create(null, null, true);
    }
    
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {        
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                if (obj != null) obj.AddRef();
                break;
            }
        }

        return obj;
    }
    
    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        LuaDelegate remove = dg.Target as LuaDelegate;

        if (remove == null)
        {
            obj = Delegate.Remove(obj, dg);
            return obj;
        }
        
        Delegate[] ds = obj.GetInvocationList();        

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld == remove)
            {
                obj = Delegate.Remove(obj, ds[i]);
                if (obj != null) obj.AddRef();                
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }
		public System_Action_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action System_Action(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Event target = new System_Action_Event(func);
			System.Action d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Event target = new System_Action_Event(func, self);
			System.Action d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action>(L, pos);
	}

	void Push_System_Action(IntPtr L, System.Action o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction UnityEngine_Events_UnityAction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func);
			UnityEngine.Events.UnityAction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_Event target = new UnityEngine_Events_UnityAction_Event(func, self);
			UnityEngine.Events.UnityAction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction(IntPtr L, UnityEngine.Events.UnityAction o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_int_Event : LuaDelegate
	{
		public System_Predicate_int_Event(LuaFunction func) : base(func) { }
		public System_Predicate_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<int> System_Predicate_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<int> fn = delegate(int param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func);
			System.Predicate<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_int_Event target = new System_Predicate_int_Event(func, self);
			System.Predicate<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Predicate<int>>(L, pos);
	}

	void Push_System_Predicate_int(IntPtr L, System.Predicate<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_int_Event : LuaDelegate
	{
		public System_Action_int_Event(LuaFunction func) : base(func) { }
		public System_Action_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<int> System_Action_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_int_Event target = new System_Action_int_Event(func);
			System.Action<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_int_Event target = new System_Action_int_Event(func, self);
			System.Action<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<int>>(L, pos);
	}

	void Push_System_Action_int(IntPtr L, System.Action<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_int_Event : LuaDelegate
	{
		public System_Comparison_int_Event(LuaFunction func) : base(func) { }
		public System_Comparison_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<int> System_Comparison_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<int> fn = delegate(int param0, int param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func);
			System.Comparison<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_int_Event target = new System_Comparison_int_Event(func, self);
			System.Comparison<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Comparison<int>>(L, pos);
	}

	void Push_System_Comparison_int(IntPtr L, System.Comparison<int> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_int_int_Event : LuaDelegate
	{
		public System_Func_int_int_Event(LuaFunction func) : base(func) { }
		public System_Func_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<int,int> System_Func_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<int,int> fn = delegate(int param0) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func);
			System.Func<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_int_int_Event target = new System_Func_int_int_Event(func, self);
			System.Func<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Func<int,int>>(L, pos);
	}

	void Push_System_Func_int_int(IntPtr L, System.Func<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_TweenCallback_Event : LuaDelegate
	{
		public DG_Tweening_TweenCallback_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_TweenCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.TweenCallback DG_Tweening_TweenCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.TweenCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func);
			DG.Tweening.TweenCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_TweenCallback_Event target = new DG_Tweening_TweenCallback_Event(func, self);
			DG.Tweening.TweenCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_TweenCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.TweenCallback>(L, pos);
	}

	void Push_DG_Tweening_TweenCallback(IntPtr L, DG.Tweening.TweenCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_GUI_WindowFunction_Event : LuaDelegate
	{
		public UnityEngine_GUI_WindowFunction_Event(LuaFunction func) : base(func) { }
		public UnityEngine_GUI_WindowFunction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.GUI.WindowFunction UnityEngine_GUI_WindowFunction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.GUI.WindowFunction fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_GUI_WindowFunction_Event target = new UnityEngine_GUI_WindowFunction_Event(func);
			UnityEngine.GUI.WindowFunction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_GUI_WindowFunction_Event target = new UnityEngine_GUI_WindowFunction_Event(func, self);
			UnityEngine.GUI.WindowFunction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_GUI_WindowFunction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.GUI.WindowFunction>(L, pos);
	}

	void Push_UnityEngine_GUI_WindowFunction(IntPtr L, UnityEngine.GUI.WindowFunction o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_AdvertisingIdentifierCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_AdvertisingIdentifierCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, bool param1, string param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.AdvertisingIdentifierCallback UnityEngine_Application_AdvertisingIdentifierCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.AdvertisingIdentifierCallback fn = delegate(string param0, bool param1, string param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_AdvertisingIdentifierCallback_Event target = new UnityEngine_Application_AdvertisingIdentifierCallback_Event(func, self);
			UnityEngine.Application.AdvertisingIdentifierCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Application.AdvertisingIdentifierCallback>(L, pos);
	}

	void Push_UnityEngine_Application_AdvertisingIdentifierCallback(IntPtr L, UnityEngine.Application.AdvertisingIdentifierCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LowMemoryCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LowMemoryCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LowMemoryCallback UnityEngine_Application_LowMemoryCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LowMemoryCallback fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func);
			UnityEngine.Application.LowMemoryCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LowMemoryCallback_Event target = new UnityEngine_Application_LowMemoryCallback_Event(func, self);
			UnityEngine.Application.LowMemoryCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LowMemoryCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Application.LowMemoryCallback>(L, pos);
	}

	void Push_UnityEngine_Application_LowMemoryCallback(IntPtr L, UnityEngine.Application.LowMemoryCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Application_LogCallback_Event : LuaDelegate
	{
		public UnityEngine_Application_LogCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Application_LogCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, string param1, UnityEngine.LogType param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Application.LogCallback UnityEngine_Application_LogCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Application.LogCallback fn = delegate(string param0, string param1, UnityEngine.LogType param2) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func);
			UnityEngine.Application.LogCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Application_LogCallback_Event target = new UnityEngine_Application_LogCallback_Event(func, self);
			UnityEngine.Application.LogCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Application_LogCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Application.LogCallback>(L, pos);
	}

	void Push_UnityEngine_Application_LogCallback(IntPtr L, UnityEngine.Application.LogCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_bool_Event : LuaDelegate
	{
		public System_Action_bool_Event(LuaFunction func) : base(func) { }
		public System_Action_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(bool param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(bool param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<bool> System_Action_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<bool> fn = delegate(bool param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func);
			System.Action<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_bool_Event target = new System_Action_bool_Event(func, self);
			System.Action<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<bool>>(L, pos);
	}

	void Push_System_Action_bool(IntPtr L, System.Action<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_Event : LuaDelegate
	{
		public System_Action_string_Event(LuaFunction func) : base(func) { }
		public System_Action_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string> System_Action_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_Event target = new System_Action_string_Event(func);
			System.Action<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_Event target = new System_Action_string_Event(func, self);
			System.Action<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<string>>(L, pos);
	}

	void Push_System_Action_string(IntPtr L, System.Action<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Func_bool_Event : LuaDelegate
	{
		public System_Func_bool_Event(LuaFunction func) : base(func) { }
		public System_Func_bool_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call()
		{
			func.BeginPCall();
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Func<bool> System_Func_bool(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Func<bool> fn = delegate() { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func);
			System.Func<bool> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Func_bool_Event target = new System_Func_bool_Event(func, self);
			System.Func<bool> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Func_bool(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Func<bool>>(L, pos);
	}

	void Push_System_Func_bool(IntPtr L, System.Func<bool> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event : LuaDelegate
	{
		public System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> fn = delegate(UnityEngine.PhysicsScene param0, Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair> param1) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event target = new System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(func);
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event target = new System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair_Event(func, self);
			System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>>>(L, pos);
	}

	void Push_System_Action_UnityEngine_PhysicsScene_Unity_Collections_NativeArray_UnityEngine_ModifiableContactPair(IntPtr L, System.Action<UnityEngine.PhysicsScene,Unity.Collections.NativeArray<UnityEngine.ModifiableContactPair>> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_AsyncOperation_Event : LuaDelegate
	{
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_AsyncOperation_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.AsyncOperation param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.AsyncOperation> System_Action_UnityEngine_AsyncOperation(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.AsyncOperation> fn = delegate(UnityEngine.AsyncOperation param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func);
			System.Action<UnityEngine.AsyncOperation> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_AsyncOperation_Event target = new System_Action_UnityEngine_AsyncOperation_Event(func, self);
			System.Action<UnityEngine.AsyncOperation> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_AsyncOperation(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<UnityEngine.AsyncOperation>>(L, pos);
	}

	void Push_System_Action_UnityEngine_AsyncOperation(IntPtr L, System.Action<UnityEngine.AsyncOperation> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMReaderCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMReaderCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float[] param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float[] param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMReaderCallback UnityEngine_AudioClip_PCMReaderCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMReaderCallback fn = delegate(float[] param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func);
			UnityEngine.AudioClip.PCMReaderCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMReaderCallback_Event target = new UnityEngine_AudioClip_PCMReaderCallback_Event(func, self);
			UnityEngine.AudioClip.PCMReaderCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.AudioClip.PCMReaderCallback>(L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMReaderCallback(IntPtr L, UnityEngine.AudioClip.PCMReaderCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_AudioClip_PCMSetPositionCallback_Event : LuaDelegate
	{
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_AudioClip_PCMSetPositionCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.AudioClip.PCMSetPositionCallback UnityEngine_AudioClip_PCMSetPositionCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.AudioClip.PCMSetPositionCallback fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_AudioClip_PCMSetPositionCallback_Event target = new UnityEngine_AudioClip_PCMSetPositionCallback_Event(func, self);
			UnityEngine.AudioClip.PCMSetPositionCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.AudioClip.PCMSetPositionCallback>(L, pos);
	}

	void Push_UnityEngine_AudioClip_PCMSetPositionCallback(IntPtr L, UnityEngine.AudioClip.PCMSetPositionCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_AsyncCallback_Event : LuaDelegate
	{
		public System_AsyncCallback_Event(LuaFunction func) : base(func) { }
		public System_AsyncCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(System.IAsyncResult param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(System.IAsyncResult param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.AsyncCallback System_AsyncCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.AsyncCallback fn = delegate(System.IAsyncResult param0) { };
			return fn;
		}

		if(!flag)
		{
			System_AsyncCallback_Event target = new System_AsyncCallback_Event(func);
			System.AsyncCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_AsyncCallback_Event target = new System_AsyncCallback_Event(func, self);
			System.AsyncCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_AsyncCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.AsyncCallback>(L, pos);
	}

	void Push_System_AsyncCallback(IntPtr L, System.AsyncCallback o)
	{
		ToLua.Push(L, o);
	}

	class System_Predicate_string_Event : LuaDelegate
	{
		public System_Predicate_string_Event(LuaFunction func) : base(func) { }
		public System_Predicate_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public bool Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}

		public bool CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			bool ret = func.CheckBoolean();
			func.EndPCall();
			return ret;
		}
	}

	public System.Predicate<string> System_Predicate_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Predicate<string> fn = delegate(string param0) { return false; };
			return fn;
		}

		if(!flag)
		{
			System_Predicate_string_Event target = new System_Predicate_string_Event(func);
			System.Predicate<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Predicate_string_Event target = new System_Predicate_string_Event(func, self);
			System.Predicate<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Predicate_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Predicate<string>>(L, pos);
	}

	void Push_System_Predicate_string(IntPtr L, System.Predicate<string> o)
	{
		ToLua.Push(L, o);
	}

	class System_Comparison_string_Event : LuaDelegate
	{
		public System_Comparison_string_Event(LuaFunction func) : base(func) { }
		public System_Comparison_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call(string param0, string param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf(string param0, string param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public System.Comparison<string> System_Comparison_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Comparison<string> fn = delegate(string param0, string param1) { return 0; };
			return fn;
		}

		if(!flag)
		{
			System_Comparison_string_Event target = new System_Comparison_string_Event(func);
			System.Comparison<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Comparison_string_Event target = new System_Comparison_string_Event(func, self);
			System.Comparison<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Comparison_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Comparison<string>>(L, pos);
	}

	void Push_System_Comparison_string(IntPtr L, System.Comparison<string> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Camera_CameraCallback_Event : LuaDelegate
	{
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Camera_CameraCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Camera param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Camera.CameraCallback UnityEngine_Camera_CameraCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Camera.CameraCallback fn = delegate(UnityEngine.Camera param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func);
			UnityEngine.Camera.CameraCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Camera_CameraCallback_Event target = new UnityEngine_Camera_CameraCallback_Event(func, self);
			UnityEngine.Camera.CameraCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Camera_CameraCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Camera.CameraCallback>(L, pos);
	}

	void Push_UnityEngine_Camera_CameraCallback(IntPtr L, UnityEngine.Camera.CameraCallback o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.LoadSceneMode param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_LoadSceneMode(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PushValue(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> fn = delegate(UnityEngine.SceneManagement.Scene param0, UnityEngine.SceneManagement.Scene param1) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event target = new UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_SceneManagement_Scene_UnityEngine_SceneManagement_Scene(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_RectTransform_ReapplyDrivenProperties_Event : LuaDelegate
	{
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func) : base(func) { }
		public UnityEngine_RectTransform_ReapplyDrivenProperties_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectTransform param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.RectTransform.ReapplyDrivenProperties UnityEngine_RectTransform_ReapplyDrivenProperties(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.RectTransform.ReapplyDrivenProperties fn = delegate(UnityEngine.RectTransform param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_RectTransform_ReapplyDrivenProperties_Event target = new UnityEngine_RectTransform_ReapplyDrivenProperties_Event(func, self);
			UnityEngine.RectTransform.ReapplyDrivenProperties d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.RectTransform.ReapplyDrivenProperties>(L, pos);
	}

	void Push_UnityEngine_RectTransform_ReapplyDrivenProperties(IntPtr L, UnityEngine.RectTransform.ReapplyDrivenProperties o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_UnityEngine_Playables_PlayableDirector_Event : LuaDelegate
	{
		public System_Action_UnityEngine_Playables_PlayableDirector_Event(LuaFunction func) : base(func) { }
		public System_Action_UnityEngine_Playables_PlayableDirector_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Playables.PlayableDirector param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Playables.PlayableDirector param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<UnityEngine.Playables.PlayableDirector> System_Action_UnityEngine_Playables_PlayableDirector(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<UnityEngine.Playables.PlayableDirector> fn = delegate(UnityEngine.Playables.PlayableDirector param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_UnityEngine_Playables_PlayableDirector_Event target = new System_Action_UnityEngine_Playables_PlayableDirector_Event(func);
			System.Action<UnityEngine.Playables.PlayableDirector> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_UnityEngine_Playables_PlayableDirector_Event target = new System_Action_UnityEngine_Playables_PlayableDirector_Event(func, self);
			System.Action<UnityEngine.Playables.PlayableDirector> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_UnityEngine_Playables_PlayableDirector(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<UnityEngine.Playables.PlayableDirector>>(L, pos);
	}

	void Push_System_Action_UnityEngine_Playables_PlayableDirector(IntPtr L, System.Action<UnityEngine.Playables.PlayableDirector> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_float_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_float_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<float> UnityEngine_Events_UnityAction_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_float_Event target = new UnityEngine_Events_UnityAction_float_Event(func);
			UnityEngine.Events.UnityAction<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_float_Event target = new UnityEngine_Events_UnityAction_float_Event(func, self);
			UnityEngine.Events.UnityAction<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<float>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_float(IntPtr L, UnityEngine.Events.UnityAction<float> o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Canvas_WillRenderCanvases_Event : LuaDelegate
	{
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Canvas_WillRenderCanvases_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call()
		{
			func.Call();
		}

		public void CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Canvas.WillRenderCanvases UnityEngine_Canvas_WillRenderCanvases(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Canvas.WillRenderCanvases fn = delegate() { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func);
			UnityEngine.Canvas.WillRenderCanvases d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Canvas_WillRenderCanvases_Event target = new UnityEngine_Canvas_WillRenderCanvases_Event(func, self);
			UnityEngine.Canvas.WillRenderCanvases d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Canvas.WillRenderCanvases>(L, pos);
	}

	void Push_UnityEngine_Canvas_WillRenderCanvases(IntPtr L, UnityEngine.Canvas.WillRenderCanvases o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public float Call()
		{
			func.BeginPCall();
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public float CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			float ret = (float)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<float> DG_Tweening_Core_DOGetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<float> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func);
			DG.Tweening.Core.DOGetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_float_Event target = new DG_Tweening_Core_DOGetter_float_Event(func, self);
			DG.Tweening.Core.DOGetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<float>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_float(IntPtr L, DG.Tweening.Core.DOGetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_float_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(float param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(float param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<float> DG_Tweening_Core_DOSetter_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<float> fn = delegate(float param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func);
			DG.Tweening.Core.DOSetter<float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_float_Event target = new DG_Tweening_Core_DOSetter_float_Event(func, self);
			DG.Tweening.Core.DOSetter<float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<float>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_float(IntPtr L, DG.Tweening.Core.DOSetter<float> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public double Call()
		{
			func.BeginPCall();
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}

		public double CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			double ret = (double)func.CheckNumber();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<double> DG_Tweening_Core_DOGetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<double> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func);
			DG.Tweening.Core.DOGetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_double_Event target = new DG_Tweening_Core_DOGetter_double_Event(func, self);
			DG.Tweening.Core.DOGetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<double>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_double(IntPtr L, DG.Tweening.Core.DOGetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_double_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_double_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(double param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(double param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<double> DG_Tweening_Core_DOSetter_double(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<double> fn = delegate(double param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func);
			DG.Tweening.Core.DOSetter<double> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_double_Event target = new DG_Tweening_Core_DOSetter_double_Event(func, self);
			DG.Tweening.Core.DOSetter<double> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_double(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<double>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_double(IntPtr L, DG.Tweening.Core.DOSetter<double> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public int Call()
		{
			func.BeginPCall();
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public int CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			int ret = (int)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<int> DG_Tweening_Core_DOGetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<int> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func);
			DG.Tweening.Core.DOGetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_int_Event target = new DG_Tweening_Core_DOGetter_int_Event(func, self);
			DG.Tweening.Core.DOGetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<int>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_int(IntPtr L, DG.Tweening.Core.DOGetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_int_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<int> DG_Tweening_Core_DOSetter_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<int> fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func);
			DG.Tweening.Core.DOSetter<int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_int_Event target = new DG_Tweening_Core_DOSetter_int_Event(func, self);
			DG.Tweening.Core.DOSetter<int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<int>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_int(IntPtr L, DG.Tweening.Core.DOSetter<int> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public uint Call()
		{
			func.BeginPCall();
			func.PCall();
			uint ret = (uint)func.CheckInteger();
			func.EndPCall();
			return ret;
		}

		public uint CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			uint ret = (uint)func.CheckInteger();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<uint> DG_Tweening_Core_DOGetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<uint> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func);
			DG.Tweening.Core.DOGetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_uint_Event target = new DG_Tweening_Core_DOGetter_uint_Event(func, self);
			DG.Tweening.Core.DOGetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<uint>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_uint(IntPtr L, DG.Tweening.Core.DOGetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_uint_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_uint_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(uint param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(uint param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<uint> DG_Tweening_Core_DOSetter_uint(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<uint> fn = delegate(uint param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func);
			DG.Tweening.Core.DOSetter<uint> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_uint_Event target = new DG_Tweening_Core_DOSetter_uint_Event(func, self);
			DG.Tweening.Core.DOSetter<uint> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_uint(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<uint>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_uint(IntPtr L, DG.Tweening.Core.DOSetter<uint> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public long Call()
		{
			func.BeginPCall();
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}

		public long CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			long ret = func.CheckLong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<long> DG_Tweening_Core_DOGetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<long> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func);
			DG.Tweening.Core.DOGetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_long_Event target = new DG_Tweening_Core_DOGetter_long_Event(func, self);
			DG.Tweening.Core.DOGetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<long>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_long(IntPtr L, DG.Tweening.Core.DOGetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_long_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_long_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(long param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(long param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<long> DG_Tweening_Core_DOSetter_long(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<long> fn = delegate(long param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func);
			DG.Tweening.Core.DOSetter<long> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_long_Event target = new DG_Tweening_Core_DOSetter_long_Event(func, self);
			DG.Tweening.Core.DOSetter<long> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_long(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<long>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_long(IntPtr L, DG.Tweening.Core.DOSetter<long> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public ulong Call()
		{
			func.BeginPCall();
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}

		public ulong CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			ulong ret = func.CheckULong();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<ulong> DG_Tweening_Core_DOGetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<ulong> fn = delegate() { return 0; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func);
			DG.Tweening.Core.DOGetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_ulong_Event target = new DG_Tweening_Core_DOGetter_ulong_Event(func, self);
			DG.Tweening.Core.DOGetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<ulong>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_ulong(IntPtr L, DG.Tweening.Core.DOGetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_ulong_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_ulong_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(ulong param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(ulong param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<ulong> DG_Tweening_Core_DOSetter_ulong(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<ulong> fn = delegate(ulong param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func);
			DG.Tweening.Core.DOSetter<ulong> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_ulong_Event target = new DG_Tweening_Core_DOSetter_ulong_Event(func, self);
			DG.Tweening.Core.DOSetter<ulong> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_ulong(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<ulong>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_ulong(IntPtr L, DG.Tweening.Core.DOSetter<ulong> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public string Call()
		{
			func.BeginPCall();
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}

		public string CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			string ret = func.CheckString();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<string> DG_Tweening_Core_DOGetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<string> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func);
			DG.Tweening.Core.DOGetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_string_Event target = new DG_Tweening_Core_DOGetter_string_Event(func, self);
			DG.Tweening.Core.DOGetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<string>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_string(IntPtr L, DG.Tweening.Core.DOGetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_string_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_string_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<string> DG_Tweening_Core_DOSetter_string(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<string> fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func);
			DG.Tweening.Core.DOSetter<string> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_string_Event target = new DG_Tweening_Core_DOSetter_string_Event(func, self);
			DG.Tweening.Core.DOSetter<string> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_string(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<string>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_string(IntPtr L, DG.Tweening.Core.DOSetter<string> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector2 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector2 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector2 ret = func.CheckVector2();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector2> DG_Tweening_Core_DOGetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> fn = delegate() { return default(UnityEngine.Vector2); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Vector2>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector2 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector2> DG_Tweening_Core_DOSetter_UnityEngine_Vector2(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> fn = delegate(UnityEngine.Vector2 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector2_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector2> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Vector2>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector2(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector2> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector3 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector3 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector3 ret = func.CheckVector3();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector3> DG_Tweening_Core_DOGetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> fn = delegate() { return default(UnityEngine.Vector3); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Vector3>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector3 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector3> DG_Tweening_Core_DOSetter_UnityEngine_Vector3(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> fn = delegate(UnityEngine.Vector3 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector3_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector3> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Vector3>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector3(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector3> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Vector4 Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Vector4 CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Vector4 ret = func.CheckVector4();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Vector4> DG_Tweening_Core_DOGetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> fn = delegate() { return default(UnityEngine.Vector4); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Vector4>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Vector4 param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Vector4> DG_Tweening_Core_DOSetter_UnityEngine_Vector4(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> fn = delegate(UnityEngine.Vector4 param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Vector4_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Vector4> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Vector4>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Vector4(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Vector4> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Quaternion Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Quaternion CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Quaternion ret = func.CheckQuaternion();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> fn = delegate() { return default(UnityEngine.Quaternion); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Quaternion>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Quaternion param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> fn = delegate(UnityEngine.Quaternion param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Quaternion_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Quaternion>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Quaternion(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Quaternion> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Color Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Color CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Color ret = func.CheckColor();
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Color> DG_Tweening_Core_DOGetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Color> fn = delegate() { return default(UnityEngine.Color); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Color>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Color_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Color> DG_Tweening_Core_DOSetter_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Color_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Color_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Color>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Color(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.Rect Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(TypeTraits<UnityEngine.Rect>.type);
			func.EndPCall();
			return ret;
		}

		public UnityEngine.Rect CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.Rect ret = (UnityEngine.Rect)func.CheckObject(TypeTraits<UnityEngine.Rect>.type);
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.Rect> DG_Tweening_Core_DOGetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> fn = delegate() { return default(UnityEngine.Rect); };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.Rect>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Rect param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushValue(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.Rect> DG_Tweening_Core_DOSetter_UnityEngine_Rect(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> fn = delegate(UnityEngine.Rect param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_Rect_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.Rect> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.Rect>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_Rect(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.Rect> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public UnityEngine.RectOffset Call()
		{
			func.BeginPCall();
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(TypeTraits<UnityEngine.RectOffset>.type);
			func.EndPCall();
			return ret;
		}

		public UnityEngine.RectOffset CallWithSelf()
		{
			func.BeginPCall();
			func.Push(self);
			func.PCall();
			UnityEngine.RectOffset ret = (UnityEngine.RectOffset)func.CheckObject(TypeTraits<UnityEngine.RectOffset>.type);
			func.EndPCall();
			return ret;
		}
	}

	public DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> fn = delegate() { return null; };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOGetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOGetter<UnityEngine.RectOffset>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOGetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOGetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event : LuaDelegate
	{
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func) : base(func) { }
		public DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.RectOffset param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> fn = delegate(UnityEngine.RectOffset param0) { };
			return fn;
		}

		if(!flag)
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event target = new DG_Tweening_Core_DOSetter_UnityEngine_RectOffset_Event(func, self);
			DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<DG.Tweening.Core.DOSetter<UnityEngine.RectOffset>>(L, pos);
	}

	void Push_DG_Tweening_Core_DOSetter_UnityEngine_RectOffset(IntPtr L, DG.Tweening.Core.DOSetter<UnityEngine.RectOffset> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_PlatformListener_PlatformCall_Event : LuaDelegate
	{
		public Sango_PlatformListener_PlatformCall_Event(LuaFunction func) : base(func) { }
		public Sango_PlatformListener_PlatformCall_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.PlatformListener.PlatformCall Sango_PlatformListener_PlatformCall(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.PlatformListener.PlatformCall fn = delegate(string param0) { };
			return fn;
		}

		if(!flag)
		{
			Sango_PlatformListener_PlatformCall_Event target = new Sango_PlatformListener_PlatformCall_Event(func);
			Sango.PlatformListener.PlatformCall d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_PlatformListener_PlatformCall_Event target = new Sango_PlatformListener_PlatformCall_Event(func, self);
			Sango.PlatformListener.PlatformCall d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_PlatformListener_PlatformCall(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.PlatformListener.PlatformCall>(L, pos);
	}

	void Push_Sango_PlatformListener_PlatformCall(IntPtr L, Sango.PlatformListener.PlatformCall o)
	{
		ToLua.Push(L, o);
	}

	class Sango_AssetBundleManager_AsyncCreateFinishCall_Event : LuaDelegate
	{
		public Sango_AssetBundleManager_AsyncCreateFinishCall_Event(LuaFunction func) : base(func) { }
		public Sango_AssetBundleManager_AsyncCreateFinishCall_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.AssetBundleManager.AsyncCreateFinishCall Sango_AssetBundleManager_AsyncCreateFinishCall(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.AssetBundleManager.AsyncCreateFinishCall fn = delegate(int param0) { };
			return fn;
		}

		if(!flag)
		{
			Sango_AssetBundleManager_AsyncCreateFinishCall_Event target = new Sango_AssetBundleManager_AsyncCreateFinishCall_Event(func);
			Sango.AssetBundleManager.AsyncCreateFinishCall d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_AssetBundleManager_AsyncCreateFinishCall_Event target = new Sango_AssetBundleManager_AsyncCreateFinishCall_Event(func, self);
			Sango.AssetBundleManager.AsyncCreateFinishCall d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_AssetBundleManager_AsyncCreateFinishCall(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.AssetBundleManager.AsyncCreateFinishCall>(L, pos);
	}

	void Push_Sango_AssetBundleManager_AsyncCreateFinishCall(IntPtr L, Sango.AssetBundleManager.AsyncCreateFinishCall o)
	{
		ToLua.Push(L, o);
	}

	class Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event : LuaDelegate
	{
		public Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event(LuaFunction func) : base(func) { }
		public Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.AssetBundleManager.AsyncLoadAssetFinishCall Sango_AssetBundleManager_AsyncLoadAssetFinishCall(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.AssetBundleManager.AsyncLoadAssetFinishCall fn = delegate(UnityEngine.Object param0, int param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event target = new Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event(func);
			Sango.AssetBundleManager.AsyncLoadAssetFinishCall d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event target = new Sango_AssetBundleManager_AsyncLoadAssetFinishCall_Event(func, self);
			Sango.AssetBundleManager.AsyncLoadAssetFinishCall d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_AssetBundleManager_AsyncLoadAssetFinishCall(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.AssetBundleManager.AsyncLoadAssetFinishCall>(L, pos);
	}

	void Push_Sango_AssetBundleManager_AsyncLoadAssetFinishCall(IntPtr L, Sango.AssetBundleManager.AsyncLoadAssetFinishCall o)
	{
		ToLua.Push(L, o);
	}

	class Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event : LuaDelegate
	{
		public Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event(LuaFunction func) : base(func) { }
		public Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object[] param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object[] param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall fn = delegate(UnityEngine.Object[] param0, int param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event target = new Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event(func);
			Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event target = new Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall_Event(func, self);
			Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall>(L, pos);
	}

	void Push_Sango_AssetBundleManager_AsyncLoadAllAssetFinishCall(IntPtr L, Sango.AssetBundleManager.AsyncLoadAllAssetFinishCall o)
	{
		ToLua.Push(L, o);
	}

	class Sango_Loader_ObjectLoader_OnObjectLoaded_Event : LuaDelegate
	{
		public Sango_Loader_ObjectLoader_OnObjectLoaded_Event(LuaFunction func) : base(func) { }
		public Sango_Loader_ObjectLoader_OnObjectLoaded_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Object param0, object param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Object param0, object param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.Loader.ObjectLoader.OnObjectLoaded Sango_Loader_ObjectLoader_OnObjectLoaded(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.Loader.ObjectLoader.OnObjectLoaded fn = delegate(UnityEngine.Object param0, object param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_Loader_ObjectLoader_OnObjectLoaded_Event target = new Sango_Loader_ObjectLoader_OnObjectLoaded_Event(func);
			Sango.Loader.ObjectLoader.OnObjectLoaded d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_Loader_ObjectLoader_OnObjectLoaded_Event target = new Sango_Loader_ObjectLoader_OnObjectLoaded_Event(func, self);
			Sango.Loader.ObjectLoader.OnObjectLoaded d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_Loader_ObjectLoader_OnObjectLoaded(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.Loader.ObjectLoader.OnObjectLoaded>(L, pos);
	}

	void Push_Sango_Loader_ObjectLoader_OnObjectLoaded(IntPtr L, Sango.Loader.ObjectLoader.OnObjectLoaded o)
	{
		ToLua.Push(L, o);
	}

	class Sango_Render_MapObject_ModelLoadedCallback_Event : LuaDelegate
	{
		public Sango_Render_MapObject_ModelLoadedCallback_Event(LuaFunction func) : base(func) { }
		public Sango_Render_MapObject_ModelLoadedCallback_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushSealed(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.Render.MapObject.ModelLoadedCallback Sango_Render_MapObject_ModelLoadedCallback(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.Render.MapObject.ModelLoadedCallback fn = delegate(UnityEngine.GameObject param0) { };
			return fn;
		}

		if(!flag)
		{
			Sango_Render_MapObject_ModelLoadedCallback_Event target = new Sango_Render_MapObject_ModelLoadedCallback_Event(func);
			Sango.Render.MapObject.ModelLoadedCallback d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_Render_MapObject_ModelLoadedCallback_Event target = new Sango_Render_MapObject_ModelLoadedCallback_Event(func, self);
			Sango.Render.MapObject.ModelLoadedCallback d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_Render_MapObject_ModelLoadedCallback(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.Render.MapObject.ModelLoadedCallback>(L, pos);
	}

	void Push_Sango_Render_MapObject_ModelLoadedCallback(IntPtr L, Sango.Render.MapObject.ModelLoadedCallback o)
	{
		ToLua.Push(L, o);
	}

	class Sango_Tools_EditorWindow_WindowFunction_Event : LuaDelegate
	{
		public Sango_Tools_EditorWindow_WindowFunction_Event(LuaFunction func) : base(func) { }
		public Sango_Tools_EditorWindow_WindowFunction_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, Sango.Tools.EditorWindow param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, Sango.Tools.EditorWindow param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.Tools.EditorWindow.WindowFunction Sango_Tools_EditorWindow_WindowFunction(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.Tools.EditorWindow.WindowFunction fn = delegate(int param0, Sango.Tools.EditorWindow param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_Tools_EditorWindow_WindowFunction_Event target = new Sango_Tools_EditorWindow_WindowFunction_Event(func);
			Sango.Tools.EditorWindow.WindowFunction d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_Tools_EditorWindow_WindowFunction_Event target = new Sango_Tools_EditorWindow_WindowFunction_Event(func, self);
			Sango.Tools.EditorWindow.WindowFunction d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_Tools_EditorWindow_WindowFunction(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.Tools.EditorWindow.WindowFunction>(L, pos);
	}

	void Push_Sango_Tools_EditorWindow_WindowFunction(IntPtr L, Sango.Tools.EditorWindow.WindowFunction o)
	{
		ToLua.Push(L, o);
	}

	class UnityEngine_Events_UnityAction_UnityEngine_Color_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_UnityEngine_Color_Event(LuaFunction func) : base(func) { }
		public UnityEngine_Events_UnityAction_UnityEngine_Color_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(UnityEngine.Color param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public UnityEngine.Events.UnityAction<UnityEngine.Color> UnityEngine_Events_UnityAction_UnityEngine_Color(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction<UnityEngine.Color> fn = delegate(UnityEngine.Color param0) { };
			return fn;
		}

		if(!flag)
		{
			UnityEngine_Events_UnityAction_UnityEngine_Color_Event target = new UnityEngine_Events_UnityAction_UnityEngine_Color_Event(func);
			UnityEngine.Events.UnityAction<UnityEngine.Color> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			UnityEngine_Events_UnityAction_UnityEngine_Color_Event target = new UnityEngine_Events_UnityAction_UnityEngine_Color_Event(func, self);
			UnityEngine.Events.UnityAction<UnityEngine.Color> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_UnityEngine_Events_UnityAction_UnityEngine_Color(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<UnityEngine.Events.UnityAction<UnityEngine.Color>>(L, pos);
	}

	void Push_UnityEngine_Events_UnityAction_UnityEngine_Color(IntPtr L, UnityEngine.Events.UnityAction<UnityEngine.Color> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_string_UnityEngine_Object_object_Event : LuaDelegate
	{
		public System_Action_string_UnityEngine_Object_object_Event(LuaFunction func) : base(func) { }
		public System_Action_string_UnityEngine_Object_object_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, UnityEngine.Object param1, object param2)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, UnityEngine.Object param1, object param2)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.Push(param2);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<string,UnityEngine.Object,object> System_Action_string_UnityEngine_Object_object(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<string,UnityEngine.Object,object> fn = delegate(string param0, UnityEngine.Object param1, object param2) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_string_UnityEngine_Object_object_Event target = new System_Action_string_UnityEngine_Object_object_Event(func);
			System.Action<string,UnityEngine.Object,object> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_string_UnityEngine_Object_object_Event target = new System_Action_string_UnityEngine_Object_object_Event(func, self);
			System.Action<string,UnityEngine.Object,object> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_string_UnityEngine_Object_object(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<string,UnityEngine.Object,object>>(L, pos);
	}

	void Push_System_Action_string_UnityEngine_Object_object(IntPtr L, System.Action<string,UnityEngine.Object,object> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_int_int_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_int_int_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_int_int_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(int param0, int param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<int,int> Sango_EventBase_EventDelegate_int_int(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<int,int> fn = delegate(int param0, int param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_int_int_Event target = new Sango_EventBase_EventDelegate_int_int_Event(func);
			Sango.EventBase.EventDelegate<int,int> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_int_int_Event target = new Sango_EventBase_EventDelegate_int_int_Event(func, self);
			Sango.EventBase.EventDelegate<int,int> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_int_int(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<int,int>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_int_int(IntPtr L, Sango.EventBase.EventDelegate<int,int> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Scenario param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Scenario param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.Scenario> Sango_EventBase_EventDelegate_Sango_Game_Scenario(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> fn = delegate(Sango.Game.Scenario param0) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Scenario_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.Scenario> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_Scenario(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.Scenario>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_Scenario(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.Scenario> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Scenario param0, float param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Scenario param0, float param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.Scenario,float> Sango_EventBase_EventDelegate_Sango_Game_Scenario_float(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.Scenario,float> fn = delegate(Sango.Game.Scenario param0, float param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.Scenario,float> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Scenario_float_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.Scenario,float> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_Scenario_float(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.Scenario,float>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_Scenario_float(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.Scenario,float> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(string param0, Sango.Window.WindowInterface param1)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(string param0, Sango.Window.WindowInterface param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.Push(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface> Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface> fn = delegate(string param0, Sango.Window.WindowInterface param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event target = new Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event(func);
			Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event target = new Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface_Event(func, self);
			Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_string_Sango_Window_WindowInterface(IntPtr L, Sango.EventBase.EventDelegate<string,Sango.Window.WindowInterface> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event : LuaDelegate
	{
		public Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public System.Collections.IEnumerator Call(Sango.Game.Scenario param0, Sango.Game.Card.TroopsData[] param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			System.Collections.IEnumerator ret = (System.Collections.IEnumerator)func.CheckObject(TypeTraits<System.Collections.IEnumerator>.type);
			func.EndPCall();
			return ret;
		}

		public System.Collections.IEnumerator CallWithSelf(Sango.Game.Scenario param0, Sango.Game.Card.TroopsData[] param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.Push(param1);
			func.PCall();
			System.Collections.IEnumerator ret = (System.Collections.IEnumerator)func.CheckObject(TypeTraits<System.Collections.IEnumerator>.type);
			func.EndPCall();
			return ret;
		}
	}

	public Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]> Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]> fn = delegate(Sango.Game.Scenario param0, Sango.Game.Card.TroopsData[] param1) { return null; };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event target = new Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event(func);
			Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event target = new Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas_Event(func, self);
			Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]>>(L, pos);
	}

	void Push_Sango_EventBase_CoEventDelegate_Sango_Game_Scenario_Sango_Game_Card_TroopsDatas(IntPtr L, Sango.EventBase.CoEventDelegate<Sango.Game.Scenario,Sango.Game.Card.TroopsData[]> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_Sango_Game_City_Event : LuaDelegate
	{
		public System_Action_Sango_Game_City_Event(LuaFunction func) : base(func) { }
		public System_Action_Sango_Game_City_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.City param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.City param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<Sango.Game.City> System_Action_Sango_Game_City(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<Sango.Game.City> fn = delegate(Sango.Game.City param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Sango_Game_City_Event target = new System_Action_Sango_Game_City_Event(func);
			System.Action<Sango.Game.City> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Sango_Game_City_Event target = new System_Action_Sango_Game_City_Event(func, self);
			System.Action<Sango.Game.City> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_Sango_Game_City(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<Sango.Game.City>>(L, pos);
	}

	void Push_System_Action_Sango_Game_City(IntPtr L, System.Action<Sango.Game.City> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_Sango_Game_Person_Event : LuaDelegate
	{
		public System_Action_Sango_Game_Person_Event(LuaFunction func) : base(func) { }
		public System_Action_Sango_Game_Person_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Person param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Person param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<Sango.Game.Person> System_Action_Sango_Game_Person(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<Sango.Game.Person> fn = delegate(Sango.Game.Person param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Sango_Game_Person_Event target = new System_Action_Sango_Game_Person_Event(func);
			System.Action<Sango.Game.Person> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Sango_Game_Person_Event target = new System_Action_Sango_Game_Person_Event(func, self);
			System.Action<Sango.Game.Person> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_Sango_Game_Person(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<Sango.Game.Person>>(L, pos);
	}

	void Push_System_Action_Sango_Game_Person(IntPtr L, System.Action<Sango.Game.Person> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_Sango_Game_Corps_Event : LuaDelegate
	{
		public System_Action_Sango_Game_Corps_Event(LuaFunction func) : base(func) { }
		public System_Action_Sango_Game_Corps_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Corps param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Corps param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<Sango.Game.Corps> System_Action_Sango_Game_Corps(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<Sango.Game.Corps> fn = delegate(Sango.Game.Corps param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Sango_Game_Corps_Event target = new System_Action_Sango_Game_Corps_Event(func);
			System.Action<Sango.Game.Corps> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Sango_Game_Corps_Event target = new System_Action_Sango_Game_Corps_Event(func, self);
			System.Action<Sango.Game.Corps> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_Sango_Game_Corps(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<Sango.Game.Corps>>(L, pos);
	}

	void Push_System_Action_Sango_Game_Corps(IntPtr L, System.Action<Sango.Game.Corps> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_Sango_Game_Building_Event : LuaDelegate
	{
		public System_Action_Sango_Game_Building_Event(LuaFunction func) : base(func) { }
		public System_Action_Sango_Game_Building_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Building param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Building param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<Sango.Game.Building> System_Action_Sango_Game_Building(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<Sango.Game.Building> fn = delegate(Sango.Game.Building param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Sango_Game_Building_Event target = new System_Action_Sango_Game_Building_Event(func);
			System.Action<Sango.Game.Building> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Sango_Game_Building_Event target = new System_Action_Sango_Game_Building_Event(func, self);
			System.Action<Sango.Game.Building> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_Sango_Game_Building(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<Sango.Game.Building>>(L, pos);
	}

	void Push_System_Action_Sango_Game_Building(IntPtr L, System.Action<Sango.Game.Building> o)
	{
		ToLua.Push(L, o);
	}

	class System_Action_Sango_Game_Troop_Event : LuaDelegate
	{
		public System_Action_Sango_Game_Troop_Event(LuaFunction func) : base(func) { }
		public System_Action_Sango_Game_Troop_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Troop param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Troop param0)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public System.Action<Sango.Game.Troop> System_Action_Sango_Game_Troop(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			System.Action<Sango.Game.Troop> fn = delegate(Sango.Game.Troop param0) { };
			return fn;
		}

		if(!flag)
		{
			System_Action_Sango_Game_Troop_Event target = new System_Action_Sango_Game_Troop_Event(func);
			System.Action<Sango.Game.Troop> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			System_Action_Sango_Game_Troop_Event target = new System_Action_Sango_Game_Troop_Event(func, self);
			System.Action<Sango.Game.Troop> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_System_Action_Sango_Game_Troop(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<System.Action<Sango.Game.Troop>>(L, pos);
	}

	void Push_System_Action_Sango_Game_Troop(IntPtr L, System.Action<Sango.Game.Troop> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Force param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Force param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario> Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario> fn = delegate(Sango.Game.Force param0, Sango.Game.Scenario param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_Force_Sango_Game_Scenario(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.Force,Sango.Game.Scenario> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Corps param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Corps param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario> Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario> fn = delegate(Sango.Game.Corps param0, Sango.Game.Scenario param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_Corps_Sango_Game_Scenario(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.Corps,Sango.Game.Scenario> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.City param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.City param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario> Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario> fn = delegate(Sango.Game.City param0, Sango.Game.Scenario param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_City_Sango_Game_Scenario(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.City,Sango.Game.Scenario> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Troop param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Troop param0, Sango.Game.Scenario param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario> Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario> fn = delegate(Sango.Game.Troop param0, Sango.Game.Scenario param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_Troop_Sango_Game_Scenario(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.Troop,Sango.Game.Scenario> o)
	{
		ToLua.Push(L, o);
	}

	class Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event : LuaDelegate
	{
		public Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event(LuaFunction func) : base(func) { }
		public Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event(LuaFunction func, LuaTable self) : base(func, self) { }

		public void Call(Sango.Game.Cell param0, Sango.Game.Cell param1)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}

		public void CallWithSelf(Sango.Game.Cell param0, Sango.Game.Cell param1)
		{
			func.BeginPCall();
			func.Push(self);
			func.PushObject(param0);
			func.PushObject(param1);
			func.PCall();
			func.EndPCall();
		}
	}

	public Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell> Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell(LuaFunction func, LuaTable self, bool flag)
	{
		if (func == null)
		{
			Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell> fn = delegate(Sango.Game.Cell param0, Sango.Game.Cell param1) { };
			return fn;
		}

		if(!flag)
		{
			Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event(func);
			Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell> d = target.Call;
			target.method = d.Method;
			return d;
		}
		else
		{
			Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event target = new Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell_Event(func, self);
			Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell> d = target.CallWithSelf;
			target.method = d.Method;
			return d;
		}
	}

	bool Check_Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell(IntPtr L, int pos)
	{
		return TypeChecker.CheckDelegateType<Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell>>(L, pos);
	}

	void Push_Sango_EventBase_EventDelegate_Sango_Game_Cell_Sango_Game_Cell(IntPtr L, Sango.EventBase.EventDelegate<Sango.Game.Cell,Sango.Game.Cell> o)
	{
		ToLua.Push(L, o);
	}

}

