//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Loader_TextureLoaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Loader.TextureLoader), typeof(Sango.Loader.ObjectLoader));
		L.RegFunction("LoadFromFile", new LuaCSFunction(LoadFromFile));
		L.RegFunction("LoadFromFileSync", new LuaCSFunction(LoadFromFileSync));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Loader_TextureLoader));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Instance", new LuaCSFunction(get_Instance), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Loader_TextureLoader(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Loader.TextureLoader obj = new Sango.Loader.TextureLoader();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Loader.TextureLoader.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFromFile(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 3))
			{
				string arg0 = ToLua.CheckString(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				LuaFunction arg2 = ToLua.ToLuaFunction(L, 3);
				Sango.Loader.TextureLoader.LoadFromFile(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes<Sango.Loader.ObjectLoader.OnObjectLoaded>(L, 3))
			{
				string arg0 = ToLua.CheckString(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				Sango.Loader.ObjectLoader.OnObjectLoaded arg2 = (Sango.Loader.ObjectLoader.OnObjectLoaded)ToLua.ToObject(L, 3);
				Sango.Loader.TextureLoader.LoadFromFile(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaFunction, bool>(L, 3))
			{
				string arg0 = ToLua.CheckString(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				LuaFunction arg2 = ToLua.ToLuaFunction(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				Sango.Loader.TextureLoader.LoadFromFile(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<Sango.Loader.ObjectLoader.OnObjectLoaded, bool>(L, 3))
			{
				string arg0 = ToLua.CheckString(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				Sango.Loader.ObjectLoader.OnObjectLoaded arg2 = (Sango.Loader.ObjectLoader.OnObjectLoaded)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				Sango.Loader.TextureLoader.LoadFromFile(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<LuaInterface.LuaFunction, bool, bool>(L, 3))
			{
				string arg0 = ToLua.CheckString(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				LuaFunction arg2 = ToLua.ToLuaFunction(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				Sango.Loader.TextureLoader.LoadFromFile(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<Sango.Loader.ObjectLoader.OnObjectLoaded, bool, bool>(L, 3))
			{
				string arg0 = ToLua.CheckString(L, 1);
				object arg1 = ToLua.ToVarObject(L, 2);
				Sango.Loader.ObjectLoader.OnObjectLoaded arg2 = (Sango.Loader.ObjectLoader.OnObjectLoaded)ToLua.ToObject(L, 3);
				bool arg3 = LuaDLL.lua_toboolean(L, 4);
				bool arg4 = LuaDLL.lua_toboolean(L, 5);
				Sango.Loader.TextureLoader.LoadFromFile(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Loader.TextureLoader.LoadFromFile");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFromFileSync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			string arg0 = ToLua.CheckString(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
			UnityEngine.Texture o = Sango.Loader.TextureLoader.LoadFromFileSync(arg0, arg1, arg2);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Sango.Loader.TextureLoader.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

