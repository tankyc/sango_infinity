//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_TerrainWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.Terrain), typeof(UnityEngine.Behaviour));
		L.RegFunction("GetKeepUnusedCameraRenderingResources", new LuaCSFunction(GetKeepUnusedCameraRenderingResources));
		L.RegFunction("SetKeepUnusedCameraRenderingResources", new LuaCSFunction(SetKeepUnusedCameraRenderingResources));
		L.RegFunction("GetClosestReflectionProbes", new LuaCSFunction(GetClosestReflectionProbes));
		L.RegFunction("SampleHeight", new LuaCSFunction(SampleHeight));
		L.RegFunction("AddTreeInstance", new LuaCSFunction(AddTreeInstance));
		L.RegFunction("SetNeighbors", new LuaCSFunction(SetNeighbors));
		L.RegFunction("GetPosition", new LuaCSFunction(GetPosition));
		L.RegFunction("Flush", new LuaCSFunction(Flush));
		L.RegFunction("SetSplatMaterialPropertyBlock", new LuaCSFunction(SetSplatMaterialPropertyBlock));
		L.RegFunction("GetSplatMaterialPropertyBlock", new LuaCSFunction(GetSplatMaterialPropertyBlock));
		L.RegFunction("SetConnectivityDirty", new LuaCSFunction(SetConnectivityDirty));
		L.RegFunction("GetActiveTerrains", new LuaCSFunction(GetActiveTerrains));
		L.RegFunction("CreateTerrainGameObject", new LuaCSFunction(CreateTerrainGameObject));
		L.RegFunction("New", new LuaCSFunction(_CreateUnityEngine_Terrain));
		L.RegFunction("__eq", new LuaCSFunction(op_Equality));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("terrainData", new LuaCSFunction(get_terrainData), new LuaCSFunction(set_terrainData));
		L.RegVar("treeDistance", new LuaCSFunction(get_treeDistance), new LuaCSFunction(set_treeDistance));
		L.RegVar("treeBillboardDistance", new LuaCSFunction(get_treeBillboardDistance), new LuaCSFunction(set_treeBillboardDistance));
		L.RegVar("treeCrossFadeLength", new LuaCSFunction(get_treeCrossFadeLength), new LuaCSFunction(set_treeCrossFadeLength));
		L.RegVar("treeMaximumFullLODCount", new LuaCSFunction(get_treeMaximumFullLODCount), new LuaCSFunction(set_treeMaximumFullLODCount));
		L.RegVar("detailObjectDistance", new LuaCSFunction(get_detailObjectDistance), new LuaCSFunction(set_detailObjectDistance));
		L.RegVar("detailObjectDensity", new LuaCSFunction(get_detailObjectDensity), new LuaCSFunction(set_detailObjectDensity));
		L.RegVar("heightmapPixelError", new LuaCSFunction(get_heightmapPixelError), new LuaCSFunction(set_heightmapPixelError));
		L.RegVar("heightmapMaximumLOD", new LuaCSFunction(get_heightmapMaximumLOD), new LuaCSFunction(set_heightmapMaximumLOD));
		L.RegVar("basemapDistance", new LuaCSFunction(get_basemapDistance), new LuaCSFunction(set_basemapDistance));
		L.RegVar("lightmapIndex", new LuaCSFunction(get_lightmapIndex), new LuaCSFunction(set_lightmapIndex));
		L.RegVar("realtimeLightmapIndex", new LuaCSFunction(get_realtimeLightmapIndex), new LuaCSFunction(set_realtimeLightmapIndex));
		L.RegVar("lightmapScaleOffset", new LuaCSFunction(get_lightmapScaleOffset), new LuaCSFunction(set_lightmapScaleOffset));
		L.RegVar("realtimeLightmapScaleOffset", new LuaCSFunction(get_realtimeLightmapScaleOffset), new LuaCSFunction(set_realtimeLightmapScaleOffset));
		L.RegVar("keepUnusedRenderingResources", new LuaCSFunction(get_keepUnusedRenderingResources), new LuaCSFunction(set_keepUnusedRenderingResources));
		L.RegVar("shadowCastingMode", new LuaCSFunction(get_shadowCastingMode), new LuaCSFunction(set_shadowCastingMode));
		L.RegVar("reflectionProbeUsage", new LuaCSFunction(get_reflectionProbeUsage), new LuaCSFunction(set_reflectionProbeUsage));
		L.RegVar("materialTemplate", new LuaCSFunction(get_materialTemplate), new LuaCSFunction(set_materialTemplate));
		L.RegVar("drawHeightmap", new LuaCSFunction(get_drawHeightmap), new LuaCSFunction(set_drawHeightmap));
		L.RegVar("allowAutoConnect", new LuaCSFunction(get_allowAutoConnect), new LuaCSFunction(set_allowAutoConnect));
		L.RegVar("groupingID", new LuaCSFunction(get_groupingID), new LuaCSFunction(set_groupingID));
		L.RegVar("drawInstanced", new LuaCSFunction(get_drawInstanced), new LuaCSFunction(set_drawInstanced));
		L.RegVar("normalmapTexture", new LuaCSFunction(get_normalmapTexture), null);
		L.RegVar("drawTreesAndFoliage", new LuaCSFunction(get_drawTreesAndFoliage), new LuaCSFunction(set_drawTreesAndFoliage));
		L.RegVar("patchBoundsMultiplier", new LuaCSFunction(get_patchBoundsMultiplier), new LuaCSFunction(set_patchBoundsMultiplier));
		L.RegVar("treeLODBiasMultiplier", new LuaCSFunction(get_treeLODBiasMultiplier), new LuaCSFunction(set_treeLODBiasMultiplier));
		L.RegVar("collectDetailPatches", new LuaCSFunction(get_collectDetailPatches), new LuaCSFunction(set_collectDetailPatches));
		L.RegVar("editorRenderFlags", new LuaCSFunction(get_editorRenderFlags), new LuaCSFunction(set_editorRenderFlags));
		L.RegVar("preserveTreePrototypeLayers", new LuaCSFunction(get_preserveTreePrototypeLayers), new LuaCSFunction(set_preserveTreePrototypeLayers));
		L.RegVar("heightmapFormat", new LuaCSFunction(get_heightmapFormat), null);
		L.RegVar("heightmapTextureFormat", new LuaCSFunction(get_heightmapTextureFormat), null);
		L.RegVar("heightmapRenderTextureFormat", new LuaCSFunction(get_heightmapRenderTextureFormat), null);
		L.RegVar("normalmapFormat", new LuaCSFunction(get_normalmapFormat), null);
		L.RegVar("normalmapTextureFormat", new LuaCSFunction(get_normalmapTextureFormat), null);
		L.RegVar("normalmapRenderTextureFormat", new LuaCSFunction(get_normalmapRenderTextureFormat), null);
		L.RegVar("holesFormat", new LuaCSFunction(get_holesFormat), null);
		L.RegVar("holesRenderTextureFormat", new LuaCSFunction(get_holesRenderTextureFormat), null);
		L.RegVar("compressedHolesFormat", new LuaCSFunction(get_compressedHolesFormat), null);
		L.RegVar("compressedHolesTextureFormat", new LuaCSFunction(get_compressedHolesTextureFormat), null);
		L.RegVar("activeTerrain", new LuaCSFunction(get_activeTerrain), null);
		L.RegVar("activeTerrains", new LuaCSFunction(get_activeTerrains), null);
		L.RegVar("leftNeighbor", new LuaCSFunction(get_leftNeighbor), null);
		L.RegVar("rightNeighbor", new LuaCSFunction(get_rightNeighbor), null);
		L.RegVar("topNeighbor", new LuaCSFunction(get_topNeighbor), null);
		L.RegVar("bottomNeighbor", new LuaCSFunction(get_bottomNeighbor), null);
		L.RegVar("renderingLayerMask", new LuaCSFunction(get_renderingLayerMask), new LuaCSFunction(set_renderingLayerMask));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_Terrain(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Terrain obj = new UnityEngine.Terrain();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: UnityEngine.Terrain.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetKeepUnusedCameraRenderingResources(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			bool o = obj.GetKeepUnusedCameraRenderingResources(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetKeepUnusedCameraRenderingResources(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetKeepUnusedCameraRenderingResources(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetClosestReflectionProbes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			System.Collections.Generic.List<UnityEngine.Rendering.ReflectionProbeBlendInfo> arg0 = (System.Collections.Generic.List<UnityEngine.Rendering.ReflectionProbeBlendInfo>)ToLua.CheckObject(L, 2, TypeTraits<System.Collections.Generic.List<UnityEngine.Rendering.ReflectionProbeBlendInfo>>.type);
			obj.GetClosestReflectionProbes(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SampleHeight(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float o = obj.SampleHeight(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTreeInstance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			UnityEngine.TreeInstance arg0 = StackTraits<UnityEngine.TreeInstance>.Check(L, 2);
			obj.AddTreeInstance(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetNeighbors(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			UnityEngine.Terrain arg0 = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 2);
			UnityEngine.Terrain arg1 = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 3);
			UnityEngine.Terrain arg2 = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 4);
			UnityEngine.Terrain arg3 = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 5);
			obj.SetNeighbors(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			UnityEngine.Vector3 o = obj.GetPosition();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Flush(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			obj.Flush();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSplatMaterialPropertyBlock(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			UnityEngine.MaterialPropertyBlock arg0 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject<UnityEngine.MaterialPropertyBlock>(L, 2);
			obj.SetSplatMaterialPropertyBlock(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSplatMaterialPropertyBlock(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)ToLua.CheckObject<UnityEngine.Terrain>(L, 1);
			UnityEngine.MaterialPropertyBlock arg0 = (UnityEngine.MaterialPropertyBlock)ToLua.CheckObject<UnityEngine.MaterialPropertyBlock>(L, 2);
			obj.GetSplatMaterialPropertyBlock(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetConnectivityDirty(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			UnityEngine.Terrain.SetConnectivityDirty();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetActiveTerrains(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.Generic.List<UnityEngine.Terrain> arg0 = (System.Collections.Generic.List<UnityEngine.Terrain>)ToLua.CheckObject(L, 1, TypeTraits<System.Collections.Generic.List<UnityEngine.Terrain>>.type);
			UnityEngine.Terrain.GetActiveTerrains(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateTerrainGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.TerrainData arg0 = (UnityEngine.TerrainData)ToLua.CheckObject<UnityEngine.TerrainData>(L, 1);
			UnityEngine.GameObject o = UnityEngine.Terrain.CreateTerrainGameObject(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_terrainData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.TerrainData ret = obj.terrainData;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index terrainData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_treeDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.treeDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_treeBillboardDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.treeBillboardDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeBillboardDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_treeCrossFadeLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.treeCrossFadeLength;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeCrossFadeLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_treeMaximumFullLODCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int ret = obj.treeMaximumFullLODCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeMaximumFullLODCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_detailObjectDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.detailObjectDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index detailObjectDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_detailObjectDensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.detailObjectDensity;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index detailObjectDensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_heightmapPixelError(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.heightmapPixelError;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index heightmapPixelError on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_heightmapMaximumLOD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int ret = obj.heightmapMaximumLOD;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index heightmapMaximumLOD on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_basemapDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.basemapDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index basemapDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lightmapIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int ret = obj.lightmapIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightmapIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_realtimeLightmapIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int ret = obj.realtimeLightmapIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index realtimeLightmapIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lightmapScaleOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Vector4 ret = obj.lightmapScaleOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightmapScaleOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_realtimeLightmapScaleOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Vector4 ret = obj.realtimeLightmapScaleOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index realtimeLightmapScaleOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_keepUnusedRenderingResources(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.keepUnusedRenderingResources;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index keepUnusedRenderingResources on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_shadowCastingMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Rendering.ShadowCastingMode ret = obj.shadowCastingMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shadowCastingMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_reflectionProbeUsage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Rendering.ReflectionProbeUsage ret = obj.reflectionProbeUsage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reflectionProbeUsage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_materialTemplate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Material ret = obj.materialTemplate;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index materialTemplate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_drawHeightmap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.drawHeightmap;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawHeightmap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allowAutoConnect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.allowAutoConnect;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowAutoConnect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_groupingID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int ret = obj.groupingID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index groupingID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_drawInstanced(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.drawInstanced;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawInstanced on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_normalmapTexture(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.RenderTexture ret = obj.normalmapTexture;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index normalmapTexture on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_drawTreesAndFoliage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.drawTreesAndFoliage;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawTreesAndFoliage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_patchBoundsMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Vector3 ret = obj.patchBoundsMultiplier;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index patchBoundsMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_treeLODBiasMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float ret = obj.treeLODBiasMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeLODBiasMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_collectDetailPatches(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.collectDetailPatches;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index collectDetailPatches on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_editorRenderFlags(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.TerrainRenderFlags ret = obj.editorRenderFlags;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index editorRenderFlags on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_preserveTreePrototypeLayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool ret = obj.preserveTreePrototypeLayers;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index preserveTreePrototypeLayers on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_heightmapFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.heightmapFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_heightmapTextureFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.heightmapTextureFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_heightmapRenderTextureFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.heightmapRenderTextureFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_normalmapFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.normalmapFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_normalmapTextureFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.normalmapTextureFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_normalmapRenderTextureFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.normalmapRenderTextureFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_holesFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.holesFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_holesRenderTextureFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.holesRenderTextureFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_compressedHolesFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.compressedHolesFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_compressedHolesTextureFormat(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.compressedHolesTextureFormat);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeTerrain(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, UnityEngine.Terrain.activeTerrain);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_activeTerrains(IntPtr L)
	{
		try
		{
			ToLua.Push(L, UnityEngine.Terrain.activeTerrains);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_leftNeighbor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Terrain ret = obj.leftNeighbor;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index leftNeighbor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_rightNeighbor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Terrain ret = obj.rightNeighbor;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index rightNeighbor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_topNeighbor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Terrain ret = obj.topNeighbor;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index topNeighbor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bottomNeighbor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Terrain ret = obj.bottomNeighbor;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index bottomNeighbor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_renderingLayerMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			uint ret = obj.renderingLayerMask;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index renderingLayerMask on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_terrainData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.TerrainData arg0 = (UnityEngine.TerrainData)ToLua.CheckObject<UnityEngine.TerrainData>(L, 2);
			obj.terrainData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index terrainData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_treeDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.treeDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_treeBillboardDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.treeBillboardDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeBillboardDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_treeCrossFadeLength(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.treeCrossFadeLength = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeCrossFadeLength on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_treeMaximumFullLODCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.treeMaximumFullLODCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeMaximumFullLODCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_detailObjectDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.detailObjectDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index detailObjectDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_detailObjectDensity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.detailObjectDensity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index detailObjectDensity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_heightmapPixelError(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.heightmapPixelError = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index heightmapPixelError on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_heightmapMaximumLOD(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.heightmapMaximumLOD = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index heightmapMaximumLOD on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_basemapDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.basemapDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index basemapDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lightmapIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.lightmapIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightmapIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_realtimeLightmapIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.realtimeLightmapIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index realtimeLightmapIndex on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lightmapScaleOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 2);
			obj.lightmapScaleOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index lightmapScaleOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_realtimeLightmapScaleOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 2);
			obj.realtimeLightmapScaleOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index realtimeLightmapScaleOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_keepUnusedRenderingResources(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.keepUnusedRenderingResources = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index keepUnusedRenderingResources on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_shadowCastingMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Rendering.ShadowCastingMode arg0 = (UnityEngine.Rendering.ShadowCastingMode)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.Rendering.ShadowCastingMode>.type);
			obj.shadowCastingMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index shadowCastingMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_reflectionProbeUsage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Rendering.ReflectionProbeUsage arg0 = (UnityEngine.Rendering.ReflectionProbeUsage)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.Rendering.ReflectionProbeUsage>.type);
			obj.reflectionProbeUsage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index reflectionProbeUsage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_materialTemplate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj.materialTemplate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index materialTemplate on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_drawHeightmap(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.drawHeightmap = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawHeightmap on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allowAutoConnect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.allowAutoConnect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allowAutoConnect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_groupingID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			int arg0 = (int)LuaDLL.luaL_checkinteger(L, 2);
			obj.groupingID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index groupingID on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_drawInstanced(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.drawInstanced = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawInstanced on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_drawTreesAndFoliage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.drawTreesAndFoliage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index drawTreesAndFoliage on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_patchBoundsMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.patchBoundsMultiplier = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index patchBoundsMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_treeLODBiasMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.treeLODBiasMultiplier = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index treeLODBiasMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_collectDetailPatches(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.collectDetailPatches = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index collectDetailPatches on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_editorRenderFlags(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			UnityEngine.TerrainRenderFlags arg0 = (UnityEngine.TerrainRenderFlags)ToLua.CheckObject(L, 2, TypeTraits<UnityEngine.TerrainRenderFlags>.type);
			obj.editorRenderFlags = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index editorRenderFlags on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_preserveTreePrototypeLayers(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.preserveTreePrototypeLayers = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index preserveTreePrototypeLayers on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_renderingLayerMask(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.Terrain obj = (UnityEngine.Terrain)o;
			uint arg0 = (uint)LuaDLL.luaL_checkinteger(L, 2);
			obj.renderingLayerMask = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index renderingLayerMask on a nil value");
		}
	}
}

