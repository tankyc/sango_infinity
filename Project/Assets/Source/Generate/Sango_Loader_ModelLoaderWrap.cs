//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_Loader_ModelLoaderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.Loader.ModelLoader), typeof(Sango.Loader.ObjectLoader));
		L.RegFunction("OnModelObjectLoaded", new LuaCSFunction(OnModelObjectLoaded));
		L.RegFunction("LoadFromFile", new LuaCSFunction(LoadFromFile));
		L.RegFunction("LoadFromFileSync", new LuaCSFunction(LoadFromFileSync));
		L.RegFunction("New", new LuaCSFunction(_CreateSango_Loader_ModelLoader));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("Instance", new LuaCSFunction(get_Instance), null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSango_Loader_ModelLoader(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Sango.Loader.ModelLoader obj = new Sango.Loader.ModelLoader();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Sango.Loader.ModelLoader.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnModelObjectLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.CheckObject<UnityEngine.Object>(L, 1);
			object arg1 = ToLua.ToVarObject(L, 2);
			Sango.Loader.ModelLoader.OnModelObjectLoaded(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFromFile(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 5))
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				LuaFunction arg4 = ToLua.ToLuaFunction(L, 5);
				Sango.Loader.ModelLoader.LoadFromFile(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 5 && TypeChecker.CheckTypes<Sango.Loader.ObjectLoader.OnObjectLoaded>(L, 5))
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				object arg3 = ToLua.ToVarObject(L, 4);
				Sango.Loader.ObjectLoader.OnObjectLoaded arg4 = (Sango.Loader.ObjectLoader.OnObjectLoaded)ToLua.ToObject(L, 5);
				Sango.Loader.ModelLoader.LoadFromFile(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 7))
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				string arg3 = ToLua.CheckString(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				object arg5 = ToLua.ToVarObject(L, 6);
				LuaFunction arg6 = ToLua.ToLuaFunction(L, 7);
				Sango.Loader.ModelLoader.LoadFromFile(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else if (count == 7 && TypeChecker.CheckTypes<Sango.Loader.ObjectLoader.OnObjectLoaded>(L, 7))
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				string arg3 = ToLua.CheckString(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				object arg5 = ToLua.ToVarObject(L, 6);
				Sango.Loader.ObjectLoader.OnObjectLoaded arg6 = (Sango.Loader.ObjectLoader.OnObjectLoaded)ToLua.ToObject(L, 7);
				Sango.Loader.ModelLoader.LoadFromFile(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Sango.Loader.ModelLoader.LoadFromFile");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFromFileSync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
			string arg3 = ToLua.CheckString(L, 4);
			bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
			UnityEngine.GameObject o = Sango.Loader.ModelLoader.LoadFromFileSync(arg0, arg1, arg2, arg3, arg4);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Sango.Loader.ModelLoader.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

