//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Sango_EventBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Sango.EventBase), typeof(System.Object));
		L.RegFunction("__tostring", new LuaCSFunction(ToLua.op_ToString));
		L.RegVar("OnGameInit", new LuaCSFunction(get_OnGameInit), new LuaCSFunction(set_OnGameInit));
		L.RegVar("OnGamePause", new LuaCSFunction(get_OnGamePause), new LuaCSFunction(set_OnGamePause));
		L.RegVar("OnGameResume", new LuaCSFunction(get_OnGameResume), new LuaCSFunction(set_OnGameResume));
		L.RegVar("OnGameShutdown", new LuaCSFunction(get_OnGameShutdown), new LuaCSFunction(set_OnGameShutdown));
		L.RegFunction("EventDelegate", new LuaCSFunction(Sango_EventBase_EventDelegate));
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnGameInit(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.EventBase.OnGameInit);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnGamePause(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.EventBase.OnGamePause);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnGameResume(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.EventBase.OnGameResume);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnGameShutdown(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Sango.EventBase.OnGameShutdown);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnGameInit(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate arg0 = (Sango.EventBase.EventDelegate)ToLua.CheckDelegate<Sango.EventBase.EventDelegate>(L, 2);
			Sango.EventBase.OnGameInit = arg0;

			if (!object.ReferenceEquals(Sango.EventBase.OnGameInit, arg0))
			{
				if (Sango.EventBase.OnGameInit != null) Sango.EventBase.OnGameInit.SubRef();
				Sango.EventBase.OnGameInit = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnGamePause(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate arg0 = (Sango.EventBase.EventDelegate)ToLua.CheckDelegate<Sango.EventBase.EventDelegate>(L, 2);
			Sango.EventBase.OnGamePause = arg0;

			if (!object.ReferenceEquals(Sango.EventBase.OnGamePause, arg0))
			{
				if (Sango.EventBase.OnGamePause != null) Sango.EventBase.OnGamePause.SubRef();
				Sango.EventBase.OnGamePause = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnGameResume(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate arg0 = (Sango.EventBase.EventDelegate)ToLua.CheckDelegate<Sango.EventBase.EventDelegate>(L, 2);
			Sango.EventBase.OnGameResume = arg0;

			if (!object.ReferenceEquals(Sango.EventBase.OnGameResume, arg0))
			{
				if (Sango.EventBase.OnGameResume != null) Sango.EventBase.OnGameResume.SubRef();
				Sango.EventBase.OnGameResume = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_OnGameShutdown(IntPtr L)
	{
		try
		{
			Sango.EventBase.EventDelegate arg0 = (Sango.EventBase.EventDelegate)ToLua.CheckDelegate<Sango.EventBase.EventDelegate>(L, 2);
			Sango.EventBase.OnGameShutdown = arg0;

			if (!object.ReferenceEquals(Sango.EventBase.OnGameShutdown, arg0))
			{
				if (Sango.EventBase.OnGameShutdown != null) Sango.EventBase.OnGameShutdown.SubRef();
				Sango.EventBase.OnGameShutdown = arg0;
			}

			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Sango_EventBase_EventDelegate(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<Sango.EventBase.EventDelegate>.Create(func);
				ToLua.Push(L, arg1);
				func.Dispose();
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<Sango.EventBase.EventDelegate>.Create(func, self);
				ToLua.Push(L, arg1);
				func.Dispose();
				self.Dispose();
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

