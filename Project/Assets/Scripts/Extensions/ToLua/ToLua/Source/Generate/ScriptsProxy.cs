//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public static class DelegateProxy
{
    public delegate Delegate DelegateCreate(LuaFunction func, LuaTable self, bool flag);

    public delegate Delegate DelegateProxyCreateFunc(Type t, LuaFunction func) ;
    public static DelegateProxyCreateFunc CreateProxy;
    public delegate Delegate DelegateProxyCreateFuncEx(Type t, LuaFunction func, LuaTable self);
    public static DelegateProxyCreateFuncEx CreateProxyEx;
    public delegate Delegate DelegateProxyRemoveFunc(Delegate obj, LuaFunction func);
    public static DelegateProxyRemoveFunc RemoveProxy;
    public delegate Delegate DelegateProxyRemoveFuncEx(Delegate obj, Delegate dg);
    public static DelegateProxyRemoveFuncEx RemoveProxyEx;
    public delegate void DelegateProxyInit();
    public static DelegateProxyInit InitProxy;

    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        if (CreateProxy != null)
            return CreateProxy(t, func);
        return null;
    }

    public static void Init()
    {
        if (InitProxy != null)
            InitProxy();
    }

    public static Delegate CreateDelegate(Type t, LuaFunction func, LuaTable self)
    {
        if (CreateProxyEx != null)
            return CreateProxyEx(t, func, self);
        return null;
    }

    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        if (RemoveProxy != null)
            return RemoveProxy(obj, func);
        return null;
    }

    public static Delegate RemoveDelegate(Delegate obj, Delegate dg)
    {
        if (RemoveProxyEx != null)
            return RemoveProxyEx(obj, dg);
        return null;
    }
}

public static class BinderProxy
{
    public delegate void Binder(LuaState L);
    public static Binder proxy;
    public static void Bind(LuaState L)
    {
        if (proxy != null) proxy(L);
    }
}
